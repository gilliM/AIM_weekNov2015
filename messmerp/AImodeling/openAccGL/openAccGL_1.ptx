      .version 3.1
      .target sm_35
      .address_size 64

      // Cray C : Version 8.2.6  (u82112f82193i82266p82476a82026z82474)

//
// Start libm header
//

.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
.visible .func  (.param .b32 func_retval0) __CHABS(
	.param .b32 __CHABS_param_0,
	.param .b32 __CHABS_param_1
)
.visible .func  (.param .b64 func_retval0) __CABS(
	.param .b64 __CABS_param_0,
	.param .b64 __CABS_param_1
)
.visible .func  (.param .b32 func_retval0) _HTOH(
	.param .b32 _HTOH_param_0,
	.param .b32 _HTOH_param_1
)
.visible .func  (.param .b32 func_retval0) _HTON(
	.param .b32 _HTON_param_0,
	.param .b32 _HTON_param_1
)
.visible .func  (.param .b32 func_retval0) _HTOI(
	.param .b32 _HTOI_param_0,
	.param .b64 _HTOI_param_1
)
.visible .func  (.param .b64 func_retval0) _RTOR(
	.param .b64 _RTOR_param_0,
	.param .b64 _RTOR_param_1
)
.visible .func  (.param .b64 func_retval0) _RTON(
	.param .b64 _RTON_param_0,
	.param .b32 _RTON_param_1
)
.visible .func  (.param .b64 func_retval0) _RTOI(
	.param .b64 _RTOI_param_0,
	.param .b64 _RTOI_param_1
)
.visible .func  (.param .b32 func_retval0) asinf(
	.param .b32 asinf_param_0
)
.visible .func  (.param .b64 func_retval0) asin(
	.param .b64 asin_param_0
)
.visible .func  (.param .b32 func_retval0) atanf(
	.param .b32 atanf_param_0
)
.visible .func  (.param .b64 func_retval0) atan(
	.param .b64 atan_param_0
)
.visible .func  (.param .b32 func_retval0) atan2f(
	.param .b32 atan2f_param_0,
	.param .b32 atan2f_param_1
)
.visible .func  (.param .b64 func_retval0) atan2(
	.param .b64 atan2_param_0,
	.param .b64 atan2_param_1
)
.visible .func  (.param .b32 func_retval0) sinf(
	.param .b32 sinf_param_0
)
.visible .func  (.param .b64 func_retval0) _SIN(
	.param .b64 _SIN_param_0
)
.visible .func  (.param .b32 func_retval0) isnormal64(
	.param .b64 isnormal64_param_0
)
.visible .func  (.param .b32 func_retval0) isnormal32(
	.param .b32 isnormal32_param_0
)
.visible .func  (.param .b32 func_retval0) _leadz4(
	.param .b32 _leadz4_param_0
)
.visible .func  (.param .b64 func_retval0) _leadz8(
	.param .b64 _leadz8_param_0
)
.visible .func  (.param .b32 func_retval0) _FRACTION_4(
	.param .b32 _FRACTION_4_param_0
)
.visible .func  (.param .b64 func_retval0) _FRACTION(
	.param .b64 _FRACTION_param_0
)
.visible .func  (.param .b64 func_retval0) _SPACING(
	.param .b64 _SPACING_param_0
)
.visible .func  (.param .b32 func_retval0) _SPACING_4(
	.param .b32 _SPACING_4_param_0
)
.visible .func  (.param .b32 func_retval0) _SCALE_4(
	.param .b32 _SCALE_4_param_0,
	.param .b32 _SCALE_4_param_1
)
.visible .func  (.param .b64 func_retval0) _SCALE(
	.param .b64 _SCALE_param_0,
	.param .b32 _SCALE_param_1
)
.visible .func  (.param .b64 func_retval0) _RRSPACING(
	.param .b64 _RRSPACING_param_0
)
.visible .func  (.param .b32 func_retval0) _RRSPACING_4(
	.param .b32 _RRSPACING_4_param_0
)
.visible .func  (.param .b32 func_retval0) _SET_EXPONENT_4_I8(
	.param .b32 _SET_EXPONENT_4_I8_param_0,
	.param .b64 _SET_EXPONENT_4_I8_param_1
)
.visible .func  (.param .b64 func_retval0) _SET_EXPONENT_8_I8(
	.param .b64 _SET_EXPONENT_8_I8_param_0,
	.param .b64 _SET_EXPONENT_8_I8_param_1
)
.visible .func  (.param .b32 func_retval0) _NEAREST_4(
	.param .b32 _NEAREST_4_param_0,
	.param .b32 _NEAREST_4_param_1
)
.visible .func  (.param .b32 func_retval0) _NEAREST_4_8(
	.param .b32 _NEAREST_4_8_param_0,
	.param .b64 _NEAREST_4_8_param_1
)
.visible .func  (.param .b64 func_retval0) _NEAREST_8_4(
	.param .b64 _NEAREST_8_4_param_0,
	.param .b32 _NEAREST_8_4_param_1
)
.visible .func  (.param .b64 func_retval0) _NEAREST(
	.param .b64 _NEAREST_param_0,
	.param .b64 _NEAREST_param_1
)
.visible .func  (.param .b32 func_retval0) _nextafterf(
	.param .b32 _nextafterf_param_0,
	.param .b32 _nextafterf_param_1
)
.visible .func  (.param .b64 func_retval0) _nextafter(
	.param .b64 _nextafter_param_0,
	.param .b64 _nextafter_param_1
)
.visible .func  (.param .b32 func_retval0) sinhf(
	.param .b32 sinhf_param_0
)
.visible .func  (.param .b64 func_retval0) sinh(
	.param .b64 sinh_param_0
)
.visible .func  (.param .b32 func_retval0) cosf(
	.param .b32 cosf_param_0
)
.visible .func  (.param .b64 func_retval0) _COS(
	.param .b64 _COS_param_0
)
.visible .func  (.param .b32 func_retval0) coshf(
	.param .b32 coshf_param_0
)
.visible .func  (.param .b64 func_retval0) cosh(
	.param .b64 cosh_param_0
)
.visible .func  (.param .b32 func_retval0) _HTAN(
	.param .b32 _HTAN_param_0
)
.visible .func  (.param .b64 func_retval0) _TAN(
	.param .b64 _TAN_param_0
)
.visible .func  (.param .b32 func_retval0) tanhf(
	.param .b32 tanhf_param_0
)
.visible .func  (.param .b64 func_retval0) tanh(
	.param .b64 tanh_param_0
)
.visible .func  (.param .b32 func_retval0) _HCOT(
	.param .b32 _HCOT_param_0
)
.visible .func  (.param .b64 func_retval0) _COT(
	.param .b64 _COT_param_0
)
.visible .func  (.param .b32 func_retval0) acosf(
	.param .b32 acosf_param_0
)
.visible .func  (.param .b64 func_retval0) acos(
	.param .b64 acos_param_0
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) _HCOSS(
	.param .b32 _HCOSS_param_0
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) _COSS(
	.param .b64 _COSS_param_0
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) _HCOSSH(
	.param .b32 _HCOSSH_param_0
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) _COSSH(
	.param .b64 _COSSH_param_0
)
.visible .func  (.param .b32 func_retval0) _HEXP(
	.param .b32 _HEXP_param_0
)
.visible .func  (.param .b64 func_retval0) _EXP(
	.param .b64 _EXP_param_0
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) cexpf(
	.param .b32 cexpf_param_0,
	.param .b32 cexpf_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) cexp(
	.param .b64 cexp_param_0,
	.param .b64 cexp_param_1
)
.visible .func  (.param .b32 func_retval0) _HLOG(
	.param .b32 _HLOG_param_0
)
.visible .func  (.param .b64 func_retval0) _ALOG(
	.param .b64 _ALOG_param_0
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHLOG(
	.param .b32 _CHLOG_param_0,
	.param .b32 _CHLOG_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) _CLOG(
	.param .b64 _CLOG_param_0,
	.param .b64 _CLOG_param_1
)
.visible .func  (.param .b32 func_retval0) log10f(
	.param .b32 log10f_param_0
)
.visible .func  (.param .b64 func_retval0) log10(
	.param .b64 log10_param_0
)
.visible .func  (.param .b32 func_retval0) _CHABS(
	.param .b32 _CHABS_param_0,
	.param .b32 _CHABS_param_1
)
.visible .func  (.param .b64 func_retval0) _CABS(
	.param .b64 _CABS_param_0,
	.param .b64 _CABS_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) cpow(
	.param .b64 cpow_param_0,
	.param .b64 cpow_param_1,
	.param .b64 cpow_param_2,
	.param .b64 cpow_param_3
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) cpowf(
	.param .b32 cpowf_param_0,
	.param .b32 cpowf_param_1,
	.param .b32 cpowf_param_2,
	.param .b32 cpowf_param_3
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHSQRT(
	.param .b32 _CHSQRT_param_0,
	.param .b32 _CHSQRT_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) _CSQRT(
	.param .b64 _CSQRT_param_0,
	.param .b64 _CSQRT_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) _CSIN(
	.param .b64 _CSIN_param_0,
	.param .b64 _CSIN_param_1
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHSIN(
	.param .b32 _CHSIN_param_0,
	.param .b32 _CHSIN_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) _CCOS(
	.param .b64 _CCOS_param_0,
	.param .b64 _CCOS_param_1
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHCOS(
	.param .b32 _CHCOS_param_0,
	.param .b32 _CHCOS_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) _CTAN(
	.param .b64 _CTAN_param_0,
	.param .b64 _CTAN_param_1
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHTAN(
	.param .b32 _CHTAN_param_0,
	.param .b32 _CHTAN_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) casin(
	.param .b64 casin_param_0,
	.param .b64 casin_param_1
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) casinf(
	.param .b32 casinf_param_0,
	.param .b32 casinf_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) cacos(
	.param .b64 cacos_param_0,
	.param .b64 cacos_param_1
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) cacosf(
	.param .b32 cacosf_param_0,
	.param .b32 cacosf_param_1
)
.visible .func  (.param .align 16 .b8 func_retval0[16]) catan(
	.param .b64 catan_param_0,
	.param .b64 catan_param_1
)
.visible .func  (.param .align 8 .b8 func_retval0[8]) catanf(
	.param .b32 catanf_param_0,
	.param .b32 catanf_param_1
)
.visible .func  (.param .b64 func_retval0) _raisovfl(
	.param .b64 _raisovfl_param_0
)
.visible .func  (.param .b64 func_retval0) _raisunfl(
	.param .b64 _raisunfl_param_0,
	.param .b64 _raisunfl_param_1
)
.visible .func  (.param .b64 func_retval0) _IEEE_BINARY_SCALE_I8(
	.param .b64 _IEEE_BINARY_SCALE_I8_param_0,
	.param .b64 _IEEE_BINARY_SCALE_I8_param_1
)
.visible .func  (.param .b32 func_retval0) _IEEE_BINARY_SCALE_H_I8(
	.param .b32 _IEEE_BINARY_SCALE_H_I8_param_0,
	.param .b64 _IEEE_BINARY_SCALE_H_I8_param_1
)
.visible .func  (.param .b64 func_retval0) __cray_device_alloc_vla(
	.param .b64 __cray_device_alloc_vla_param_0
)
.visible .func __cray_device_free_vla(
	.param .b64 __cray_device_free_vla_param_0
)
.visible .func __cray_acc_stop(
	.param .b32 __cray_acc_stop_param_0,
	.param .b64 __cray_acc_stop_param_1,
	.param .b32 __cray_acc_stop_param_2
)
.visible .func  (.param .b32 func_retval0) _cray_amo_cas8(
	.param .b64 _cray_amo_cas8_param_0,
	.param .b32 _cray_amo_cas8_param_1,
	.param .b32 _cray_amo_cas8_param_2
)
.visible .func  (.param .b32 func_retval0) _cray_amo_cas16(
	.param .b64 _cray_amo_cas16_param_0,
	.param .b32 _cray_amo_cas16_param_1,
	.param .b32 _cray_amo_cas16_param_2
)

//
// End libm header
//


      .file	1	"openAccGL.c"

      .entry runCuda$ck_L459_2(
               .param .s64 $$arg_ptr_acc_u_T54_T219,
               .param .f32 $$_arg_acc_g_fAnim_T135_T220 )
      {
      .param .f32  __rv0_1;
      .param .f32  __arg1_2;
      //
      .reg .pred %p<3>;
      .reg .b64  %bd<3>;
      .reg .s64  %sd<6>;
      .reg .f32  %f<12>;
      //
      .loc                 1  459  0
      .loc                 1  459  0
      cvt.s64.u32          %sd2, %ctaid.x;             // openAccGL.c:459 : $$id_T110
      setp.ge.s64          %p1, %sd2, 2;               // openAccGL.c:459
      @%p1 bra             $runCuda$ck_L459_2__l17__;  // openAccGL.c:459
      .loc                 1  460  0
      cvt.s64.u32          %sd1, %tid.x;               // openAccGL.c:460 : $$id_T112
      setp.ge.s64          %p2, %sd1, 64;              // openAccGL.c:460
      @%p2 bra             $runCuda$ck_L459_2__l16__;  // openAccGL.c:460
      .loc                 1  461  0
      ld.param.f32         %f1, [$$_arg_acc_g_fAnim_T135_T220];// openAccGL.c:461 : $$_arg_acc_g_fAnim_T135_T220
      mul.rn.f32           %f2, %f1, 0f3fdb07ac;       // openAccGL.c:461
      cvt.rn.f32.s64       %f3, %sd1;                  // openAccGL.c:461
      mad.rn.f32           %f4, 0f3c8c2ddf, %f3, %f2;  // openAccGL.c:461
      st.param.f32         [__arg1_2], %f4;            // openAccGL.c:461
      call.uni             (__rv0_1), cosf, (__arg1_2);// openAccGL.c:461
      ld.param.f32         %f6, [__rv0_1];             // openAccGL.c:461
      cvt.rn.f32.s64       %f7, %sd2;                  // openAccGL.c:461
      mad.rn.f32           %f8, 0f3c8c2ddf, %f7, %f2;  // openAccGL.c:461
      st.param.f32         [__arg1_2], %f8;            // openAccGL.c:461
      call.uni             (__rv0_1), sinf, (__arg1_2);// openAccGL.c:461
      ld.param.f32         %f10, [__rv0_1];            // openAccGL.c:461
      mul.rn.f32           %f11, %f6, %f10;            // openAccGL.c:461
      ld.param.s64         %sd3, [$$arg_ptr_acc_u_T54_T219];// openAccGL.c:461 : $$arg_ptr_acc_u_T54_T219
      shl.b64              %bd1, %sd2, 8;              // openAccGL.c:461
      add.s64              %sd4, %sd1, %bd1;           // openAccGL.c:461
      shl.b64              %bd2, %sd4, 2;              // openAccGL.c:461
      add.s64              %sd5, %sd3, %bd2;           // openAccGL.c:461
      st.global.f32        [%sd5], %f11;               // openAccGL.c:461 : 0[$$arg_ptr_acc_u_T54_T219,$$id_T112 + ($$id_T110 << 8)]
$runCuda$ck_L459_2__l16__:
      .loc                 1  461  0
      bar.sync             0;                          // openAccGL.c:461
$runCuda$ck_L459_2__l17__:
      exit;
      } // runCuda$ck_L459_2


      .entry runCuda$ck_L469_3(
               .param .s64 $$arg_ptr_acc_u_T54_T221,
               .param .f32 $$_arg_acc_g_fAnim_T136_T222 )
      {
      .param .f32  __rv0_1;
      .param .f32  __arg1_2;
      //
      .reg .pred %p<2>;
      .reg .b64  %bd<3>;
      .reg .s64  %sd<6>;
      .reg .u32  %u<5>;
      .reg .f32  %f<14>;
      //
      .loc                 1  469  0
      .loc                 1  469  0
      mov.u32              %u1, %ctaid.x;              // openAccGL.c:469
      mov.u32              %u2, %ntid.x;               // openAccGL.c:469
      mov.u32              %u3, %tid.x;                // openAccGL.c:469
      mad.lo.u32           %u4, %u1, %u2, %u3;         // openAccGL.c:469
      cvt.s64.u32          %sd1, %u4;                  // openAccGL.c:469 : $$id_T114
      setp.ge.s64          %p1, %sd1, 64;              // openAccGL.c:469
      @%p1 bra             $runCuda$ck_L469_3__l24__;  // openAccGL.c:469
      .loc                 1  471  0
      ld.param.f32         %f1, [$$_arg_acc_g_fAnim_T136_T222];// openAccGL.c:471 : $$_arg_acc_g_fAnim_T136_T222
      mul.rn.f32           %f2, %f1, 0f3fdb07ac;       // openAccGL.c:471
      cvt.rn.f32.s64       %f3, %sd1;                  // openAccGL.c:471
      mad.rn.f32           %f4, 0f3c8c2ddf, %f3, %f2;  // openAccGL.c:471
      st.param.f32         [__arg1_2], %f4;            // openAccGL.c:471
      call.uni             (__rv0_1), cosf, (__arg1_2);// openAccGL.c:471
      ld.param.f32         %f6, [__rv0_1];             // openAccGL.c:471
      st.param.f32         [__arg1_2], %f2;            // openAccGL.c:471
      call.uni             (__rv0_1), sinf, (__arg1_2);// openAccGL.c:471
      ld.param.f32         %f8, [__rv0_1];             // openAccGL.c:471
      mul.rn.f32           %f9, %f8, %f6;              // openAccGL.c:471
      ld.param.s64         %sd2, [$$arg_ptr_acc_u_T54_T221];// openAccGL.c:471 : $$arg_ptr_acc_u_T54_T221
      shl.b64              %bd1, %sd1, 10;             // openAccGL.c:471
      add.s64              %sd3, %sd2, %bd1;           // openAccGL.c:471
      st.global.f32        [%sd3], %f9;                // openAccGL.c:471 : 0[$$arg_ptr_acc_u_T54_T221,$$LCS_4_T193]
      add.rn.f32           %f10, %f2, 0f3c8c2ddf;      // openAccGL.c:471
      st.param.f32         [__arg1_2], %f10;           // openAccGL.c:471
      call.uni             (__rv0_1), sinf, (__arg1_2);// openAccGL.c:471
      ld.param.f32         %f12, [__rv0_1];            // openAccGL.c:471
      mul.rn.f32           %f13, %f12, %f6;            // openAccGL.c:471
      ld.param.s64         %sd4, [$$arg_ptr_acc_u_T54_T221];// openAccGL.c:471 : $$arg_ptr_acc_u_T54_T221
      shl.b64              %bd2, %sd1, 10;             // openAccGL.c:471
      add.s64              %sd5, %sd4, %bd2;           // openAccGL.c:471
      st.global.f32        [%sd5 + 4], %f13;           // openAccGL.c:471 : 1[$$arg_ptr_acc_u_T54_T221,$$LCS_4_T193]
$runCuda$ck_L469_3__l24__:
      exit;
      } // runCuda$ck_L469_3


      .entry runCuda$ck_L486_4(
               .param .s64 $$arg_ptr_acc_img_T50_T223,
               .param .s64 $$arg_ptr_acc_v_T52_T224,
               .param .s64 $$arg_ptr_acc_u_T54_T225,
               .param .f32 $$_arg_acc_g_fAnim_T137_T226,
               .param .f32 $$_arg_acc_fade_in_T138_T227 )
      {
      .param .f64  __rv0_1;
      .param .f64  __arg1_2;
      //
      .reg .pred %p<10>;
      .reg .b64  %bd<5>;
      .reg .s64  %sd<29>;
      .reg .f32  %f<6>;
      .reg .f64  %fd<8>;
      //
      .loc                 1  486  0
      .loc                 1  490  0
      ld.param.f32         %f1, [$$_arg_acc_fade_in_T138_T227];// openAccGL.c:490 : $$MR_fade_in_27_T194
      ld.param.f32         %f2, [$$_arg_acc_g_fAnim_T137_T226];// openAccGL.c:490 : $$MR_g_fAnim_28_T195
      setp.ge.f32          %p1, %f2, %f1;              // openAccGL.c:490
      @%p1 bra             $runCuda$ck_L486_4__l44__;  // openAccGL.c:490
      .loc                 1  486  0
      cvt.s64.u32          %sd1, %ctaid.x;             // openAccGL.c:486 : $$id_T116
      setp.ge.s64          %p2, %sd1, 189;             // openAccGL.c:486
      @%p2 bra             $runCuda$ck_L486_4__l59__;  // openAccGL.c:486
      .loc                 1  487  0
      cvt.s64.u32          %sd5, %ntid.x;              // openAccGL.c:487 : $$numthrds_T117
      cvt.s64.u32          %sd11, %tid.x;              // openAccGL.c:487
      mov.s64              %sd3, %sd11;                // openAccGL.c:487 : $$I_xi_392_T144
      setp.ge.s64          %p3, %sd11, 248;            // openAccGL.c:487
      @%p3 bra             $runCuda$ck_L486_4__l43__;  // openAccGL.c:487
      .loc                 1  489  0
      shl.b64              %sd4, %sd1, 8;              // openAccGL.c:489 : $$LIS_b2_T150
      .loc                 1  488  0
      mul.lo.s64           %sd2, %sd1, 248;            // openAccGL.c:488 : $$LIS_b0_T148
      .loc                 1  490  0
      cvt.f64.f32          %fd2, %f2;                  // openAccGL.c:490
      cvt.f64.f32          %fd3, %f1;                  // openAccGL.c:490
      div.rn.f64           %fd4, %fd2, %fd3;           // openAccGL.c:490
      mul.rn.f64           %fd5, %fd4, 0d40191eb851eb851f;// openAccGL.c:490
      st.param.f64         [__arg1_2], %fd5;           // openAccGL.c:490
      call.uni             (__rv0_1), _SIN, (__arg1_2);// openAccGL.c:490
      ld.param.f64         %fd7, [__rv0_1];            // openAccGL.c:490
      mul.rn.f64           %fd1, %fd7, %fd7;           // openAccGL.c:490 : $$LIS_b3_T151
$runCuda$ck_L486_4__l37__:
      .loc                 1  488  0
      add.s64              %sd12, %sd3, %sd2;          // openAccGL.c:488
      shl.b64              %bd1, %sd12, 2;             // openAccGL.c:488
      ld.param.s64         %sd13, [$$arg_ptr_acc_img_T50_T223];// openAccGL.c:488 : $$arg_ptr_acc_img_T50_T223
      add.s64              %sd14, %sd13, %bd1;         // openAccGL.c:488
      ld.global.nc.f32     %f3, [%sd14];               // openAccGL.c:488 : 0[$$arg_ptr_acc_img_T50_T223,$$I_xi_392_T144 + $$LIS_b0_T148,ex]
      setp.ge.f32          %p4, %f3, 0f41200000;       // openAccGL.c:488
      @%p4 bra             $runCuda$ck_L486_4__l42__;  // openAccGL.c:488
      .loc                 1  489  0
      add.s64              %sd15, %sd3, %sd4;          // openAccGL.c:489
      ld.param.s64         %sd16, [$$arg_ptr_acc_u_T54_T225];// openAccGL.c:489 : $$arg_ptr_acc_u_T54_T225
      shl.b64              %bd2, %sd15, 2;             // openAccGL.c:489
      add.s64              %sd17, %sd16, %bd2;         // openAccGL.c:489
      .loc                 1  490  0
      cvt.rn.f32.f64       %f4, %fd1;                  // openAccGL.c:490
      .loc                 1  489  0
      st.global.f32        [%sd17 + 51320], 0f00000000;// openAccGL.c:489 : 12830[$$arg_ptr_acc_u_T54_T225,$$LCS_6_T197]
      .loc                 1  490  0
      ld.param.s64         %sd18, [$$arg_ptr_acc_v_T52_T224];// openAccGL.c:490 : $$arg_ptr_acc_v_T52_T224
      add.s64              %sd19, %sd18, %bd2;         // openAccGL.c:490
      st.global.f32        [%sd19 + 51320], %f4;       // openAccGL.c:490 : 12830[$$arg_ptr_acc_v_T52_T224,$$LCS_6_T197]
$runCuda$ck_L486_4__l42__:
      .loc                 1  487  0
      add.s64              %sd3, %sd5, %sd3;           // openAccGL.c:487 : $$I_xi_392_T144
      setp.lt.s64          %p5, %sd3, 248;             // openAccGL.c:487
      @%p5 bra             $runCuda$ck_L486_4__l37__;  // openAccGL.c:487
$runCuda$ck_L486_4__l43__:
      .loc                 1  490  0
      bar.sync             0;                          // openAccGL.c:490
      bra                  $runCuda$ck_L486_4__l59__;
$runCuda$ck_L486_4__l44__:
      .loc                 1  486  0
      cvt.s64.u32          %sd6, %ctaid.x;             // openAccGL.c:486 : $$id_T120
      setp.ge.s64          %p6, %sd6, 189;             // openAccGL.c:486
      @%p6 bra             $runCuda$ck_L486_4__l59__;  // openAccGL.c:486
      .loc                 1  487  0
      cvt.s64.u32          %sd10, %ntid.x;             // openAccGL.c:487 : $$numthrds_T121
      cvt.s64.u32          %sd20, %tid.x;              // openAccGL.c:487
      mov.s64              %sd8, %sd20;                // openAccGL.c:487 : $$I_xi_400_T145
      setp.ge.s64          %p7, %sd20, 248;            // openAccGL.c:487
      @%p7 bra             $runCuda$ck_L486_4__l58__;  // openAccGL.c:487
      .loc                 1  489  0
      shl.b64              %sd9, %sd6, 8;              // openAccGL.c:489 : $$LIS_b6_T154
      .loc                 1  488  0
      mul.lo.s64           %sd7, %sd6, 248;            // openAccGL.c:488 : $$LIS_b4_T152
$runCuda$ck_L486_4__l52__:
      .loc                 1  488  0
      add.s64              %sd21, %sd8, %sd7;          // openAccGL.c:488
      shl.b64              %bd3, %sd21, 2;             // openAccGL.c:488
      ld.param.s64         %sd22, [$$arg_ptr_acc_img_T50_T223];// openAccGL.c:488 : $$arg_ptr_acc_img_T50_T223
      add.s64              %sd23, %sd22, %bd3;         // openAccGL.c:488
      ld.global.nc.f32     %f5, [%sd23];               // openAccGL.c:488 : 0[$$arg_ptr_acc_img_T50_T223,$$I_xi_400_T145 + $$LIS_b4_T152,ex]
      setp.ge.f32          %p8, %f5, 0f41200000;       // openAccGL.c:488
      @%p8 bra             $runCuda$ck_L486_4__l57__;  // openAccGL.c:488
      .loc                 1  489  0
      add.s64              %sd24, %sd8, %sd9;          // openAccGL.c:489
      ld.param.s64         %sd25, [$$arg_ptr_acc_u_T54_T225];// openAccGL.c:489 : $$arg_ptr_acc_u_T54_T225
      shl.b64              %bd4, %sd24, 2;             // openAccGL.c:489
      add.s64              %sd26, %sd25, %bd4;         // openAccGL.c:489
      st.global.f32        [%sd26 + 51320], 0f00000000;// openAccGL.c:489 : 12830[$$arg_ptr_acc_u_T54_T225,$$LCS_7_T198]
      .loc                 1  490  0
      ld.param.s64         %sd27, [$$arg_ptr_acc_v_T52_T224];// openAccGL.c:490 : $$arg_ptr_acc_v_T52_T224
      add.s64              %sd28, %sd27, %bd4;         // openAccGL.c:490
      st.global.f32        [%sd28 + 51320], 0f3f800000;// openAccGL.c:490 : 12830[$$arg_ptr_acc_v_T52_T224,$$LCS_7_T198]
$runCuda$ck_L486_4__l57__:
      .loc                 1  487  0
      add.s64              %sd8, %sd10, %sd8;          // openAccGL.c:487 : $$I_xi_400_T145
      setp.lt.s64          %p9, %sd8, 248;             // openAccGL.c:487
      @%p9 bra             $runCuda$ck_L486_4__l52__;  // openAccGL.c:487
$runCuda$ck_L486_4__l58__:
      .loc                 1  490  0
      bar.sync             0;                          // openAccGL.c:490
$runCuda$ck_L486_4__l59__:
      exit;
      } // runCuda$ck_L486_4


      .entry runCuda$ck_L499_5(
               .param .s64 $$arg_ptr_acc_u_T54_T228,
               .param .u64 $$arg_devptr_dptr_T58_T229 )
      {
      .reg .pred %p<4>;
      .reg .b64  %bd<5>;
      .reg .s64  %sd<12>;
      .reg .u64  %ud<2>;
      .reg .f32  %f<2>;
      //
      .loc                 1  499  0
      .loc                 1  499  0
      cvt.s64.u32          %sd1, %ctaid.x;             // openAccGL.c:499 : $$id_T124
      setp.ge.s64          %p1, %sd1, 256;             // openAccGL.c:499
      @%p1 bra             $runCuda$ck_L499_5__l75__;  // openAccGL.c:499
      .loc                 1  500  0
      cvt.s64.u32          %sd3, %ntid.x;              // openAccGL.c:500 : $$numthrds_T125
      cvt.s64.u32          %sd5, %tid.x;               // openAccGL.c:500 : $$I_x_394_T156
      mov.s64              %sd2, %sd5;                 // openAccGL.c:500 : $$id_T126
      setp.ge.s64          %p2, %sd5, 256;             // openAccGL.c:500
      @%p2 bra             $runCuda$ck_L499_5__l74__;  // openAccGL.c:500
      .loc                 1  501  0
      shl.b64              %bd1, %sd1, 10;             // openAccGL.c:501
      shl.b64              %bd2, %sd2, 2;              // openAccGL.c:501
      add.s64              %sd6, %bd1, %bd2;           // openAccGL.c:501 : $$SR_E1_T158
      shl.b64              %sd7, %sd3, 2;              // openAccGL.c:501 : $$LIS_b9_T160
      shl.b64              %sd4, %sd1, 8;              // openAccGL.c:501 : $$LIS_b8_T159
$runCuda$ck_L499_5__l70__:
      .loc                 1  501  0
      add.s64              %sd8, %sd5, %sd4;           // openAccGL.c:501
      shl.b64              %bd3, %sd8, 2;              // openAccGL.c:501
      ld.param.s64         %sd9, [$$arg_ptr_acc_u_T54_T228];// openAccGL.c:501 : $$arg_ptr_acc_u_T54_T228
      add.s64              %sd10, %sd9, %bd3;          // openAccGL.c:501
      ld.global.nc.f32     %f1, [%sd10];               // openAccGL.c:501 : 0[$$arg_ptr_acc_u_T54_T228,$$I_x_394_T156 + $$LIS_b8_T159,ex]
      shl.b64              %bd4, %sd6, 2;              // openAccGL.c:501
      ld.param.u64         %ud1, [$$arg_devptr_dptr_T58_T229];// openAccGL.c:501 : $$arg_devptr_dptr_T58_T229
      add.s64              %sd11, %ud1, %bd4;          // openAccGL.c:501
      st.global.f32        [%sd11 + 8], %f1;           // openAccGL.c:501 : 2[.(long) $$arg_devptr_dptr_T58_T229,$$SR_E1_T158]
      add.s64              %sd6, %sd6, %sd7;           // openAccGL.c:501 : $$SR_E1_T158
      .loc                 1  500  0
      add.s64              %sd5, %sd3, %sd5;           // openAccGL.c:500 : $$I_x_394_T156
      setp.lt.s64          %p3, %sd5, 256;             // openAccGL.c:500
      @%p3 bra             $runCuda$ck_L499_5__l70__;  // openAccGL.c:500
$runCuda$ck_L499_5__l74__:
      .loc                 1  501  0
      bar.sync             0;                          // openAccGL.c:501
$runCuda$ck_L499_5__l75__:
      exit;
      } // runCuda$ck_L499_5


      .entry runCuda$ck_L506_6(
               .param .s64 $$arg_ptr_acc_u_T54_T230,
               .param .u64 $$arg_devptr_dptr_norm_T57_T231 )
      {
      .reg .pred %p<4>;
      .reg .b64  %bd<3>;
      .reg .s64  %sd<13>;
      .reg .u64  %ud<2>;
      .reg .f32  %f<6>;
      //
      .loc                 1  506  0
      .loc                 1  506  0
      cvt.s64.u32          %sd1, %ctaid.x;             // openAccGL.c:506 : $$id_T128
      setp.ge.s64          %p1, %sd1, 255;             // openAccGL.c:506
      @%p1 bra             $runCuda$ck_L506_6__l91__;  // openAccGL.c:506
      .loc                 1  507  0
      cvt.s64.u32          %sd3, %ntid.x;              // openAccGL.c:507 : $$numthrds_T129
      cvt.s64.u32          %sd5, %tid.x;               // openAccGL.c:507 : $$I_x_396_T161
      mov.s64              %sd2, %sd5;                 // openAccGL.c:507 : $$id_T130
      setp.ge.s64          %p2, %sd5, 255;             // openAccGL.c:507
      @%p2 bra             $runCuda$ck_L506_6__l90__;  // openAccGL.c:507
      .loc                 1  508  0
      mul.lo.s64           %sd8, %sd2, 3;              // openAccGL.c:508
      mad.lo.s64           %sd6, 768, %sd1, %sd8;      // openAccGL.c:508 : $$SR_E3_T163
      shl.b64              %sd4, %sd1, 8;              // openAccGL.c:508 : $$LIS_b10_T164
      mul.lo.s64           %sd7, %sd3, 3;              // openAccGL.c:508 : $$LIS_b12_T166
$runCuda$ck_L506_6__l86__:
      .loc                 1  508  0
      add.s64              %sd9, %sd5, %sd4;           // openAccGL.c:508
      ld.param.s64         %sd10, [$$arg_ptr_acc_u_T54_T230];// openAccGL.c:508 : $$arg_ptr_acc_u_T54_T230
      shl.b64              %bd1, %sd9, 2;              // openAccGL.c:508
      add.s64              %sd11, %sd10, %bd1;         // openAccGL.c:508
      ld.global.nc.f32     %f1, [%sd11 + 4];           // openAccGL.c:508 : 1[$$arg_ptr_acc_u_T54_T230,$$LCS_8_T200,ex]
      ld.global.nc.f32     %f2, [%sd11];               // openAccGL.c:508 : 0[$$arg_ptr_acc_u_T54_T230,$$LCS_8_T200,ex]
      .loc                 1  509  0
      ld.global.nc.f32     %f3, [%sd11 + 1024];        // openAccGL.c:509 : 256[$$arg_ptr_acc_u_T54_T230,$$LCS_8_T200,ex]
      .loc                 1  508  0
      ld.param.u64         %ud1, [$$arg_devptr_dptr_norm_T57_T231];// openAccGL.c:508 : $$arg_devptr_dptr_norm_T57_T231
      sub.rn.f32           %f4, %f1, %f2;              // openAccGL.c:508
      shl.b64              %bd2, %sd6, 2;              // openAccGL.c:508
      add.s64              %sd12, %ud1, %bd2;          // openAccGL.c:508
      st.global.f32        [%sd12], %f4;               // openAccGL.c:508 : 0[$$LCS_dptr_norm_9_T201,$$SR_E3_T163]
      .loc                 1  509  0
      sub.rn.f32           %f5, %f3, %f2;              // openAccGL.c:509
      st.global.f32        [%sd12 + 4], %f5;           // openAccGL.c:509 : 1[$$LCS_dptr_norm_9_T201,$$SR_E3_T163]
      .loc                 1  510  0
      st.global.f32        [%sd12 + 8], 0f3f800000;    // openAccGL.c:510 : 2[$$LCS_dptr_norm_9_T201,$$SR_E3_T163]
      .loc                 1  508  0
      add.s64              %sd6, %sd6, %sd7;           // openAccGL.c:508 : $$SR_E3_T163
      .loc                 1  507  0
      add.s64              %sd5, %sd3, %sd5;           // openAccGL.c:507 : $$I_x_396_T161
      setp.lt.s64          %p3, %sd5, 255;             // openAccGL.c:507
      @%p3 bra             $runCuda$ck_L506_6__l86__;  // openAccGL.c:507
$runCuda$ck_L506_6__l90__:
      .loc                 1  510  0
      bar.sync             0;                          // openAccGL.c:510
$runCuda$ck_L506_6__l91__:
      exit;
      } // runCuda$ck_L506_6


      .entry runCuda$ck_L515_7(
               .param .s64 $$arg_ptr_acc_v_T52_T232,
               .param .u64 $$arg_devptr_dptr_col_T56_T233 )
      {
      .reg .pred %p<4>;
      .reg .b64  %bd<5>;
      .reg .s64  %sd<12>;
      .reg .u64  %ud<2>;
      .reg .f32  %f<5>;
      .reg .f64  %fd<7>;
      //
      .loc                 1  515  0
      .loc                 1  515  0
      cvt.s64.u32          %sd1, %ctaid.x;             // openAccGL.c:515 : $$id_T132
      setp.ge.s64          %p1, %sd1, 256;             // openAccGL.c:515
      @%p1 bra             $runCuda$ck_L515_7__l107__; // openAccGL.c:515
      .loc                 1  516  0
      cvt.s64.u32          %sd3, %ntid.x;              // openAccGL.c:516 : $$numthrds_T133
      cvt.s64.u32          %sd6, %tid.x;               // openAccGL.c:516 : $$I_x_398_T167
      mov.s64              %sd2, %sd6;                 // openAccGL.c:516 : $$id_T134
      setp.ge.s64          %p2, %sd6, 256;             // openAccGL.c:516
      @%p2 bra             $runCuda$ck_L515_7__l106__; // openAccGL.c:516
      .loc                 1  517  0
      shl.b64              %bd1, %sd1, 10;             // openAccGL.c:517
      shl.b64              %bd2, %sd2, 2;              // openAccGL.c:517
      add.s64              %sd4, %bd1, %bd2;           // openAccGL.c:517 : $$SR_E5_T169
      .loc                 1  518  0
      shl.b64              %sd5, %sd1, 8;              // openAccGL.c:518 : $$LIS_b16_T173
      .loc                 1  517  0
      shl.b64              %sd7, %sd3, 2;              // openAccGL.c:517 : $$LIS_b19_T176
$runCuda$ck_L515_7__l102__:
      .loc                 1  517  0
      ld.param.u64         %ud1, [$$arg_devptr_dptr_col_T56_T233];// openAccGL.c:517 : $$arg_devptr_dptr_col_T56_T233
      shl.b64              %bd3, %sd4, 2;              // openAccGL.c:517
      add.s64              %sd8, %ud1, %bd3;           // openAccGL.c:517
      .loc                 1  518  0
      add.s64              %sd9, %sd6, %sd5;           // openAccGL.c:518
      shl.b64              %bd4, %sd9, 2;              // openAccGL.c:518
      .loc                 1  517  0
      add.s64              %sd4, %sd4, %sd7;           // openAccGL.c:517 : $$SR_E5_T169
      .loc                 1  516  0
      add.s64              %sd6, %sd3, %sd6;           // openAccGL.c:516 : $$I_x_398_T167
      setp.lt.s64          %p3, %sd6, 256;             // openAccGL.c:516
      .loc                 1  517  0
      st.global.f32        [%sd8], 0f3dcccccd;         // openAccGL.c:517 : 0[$$LCS_dptr_col_10_T202,$$SR_E5_T169]
      .loc                 1  518  0
      ld.param.s64         %sd10, [$$arg_ptr_acc_v_T52_T232];// openAccGL.c:518 : $$arg_ptr_acc_v_T52_T232
      add.s64              %sd11, %sd10, %bd4;         // openAccGL.c:518
      ld.global.nc.f32     %f1, [%sd11];               // openAccGL.c:518 : 0[$$arg_ptr_acc_v_T52_T232,$$LCS_11_T203,ex]
      .loc                 1  519  0
      ld.global.nc.f32     %f2, [%sd11 + 1024];        // openAccGL.c:519 : 256[$$arg_ptr_acc_v_T52_T232,$$LCS_11_T203,ex]
      .loc                 1  520  0
      st.global.f32        [%sd8 + 12], 0f3f800000;    // openAccGL.c:520 : 3[$$LCS_dptr_col_10_T202,$$SR_E5_T169]
      .loc                 1  518  0
      cvt.f64.f32          %fd1, %f1;                  // openAccGL.c:518
      add.rn.f64           %fd2, %fd1, 0d3ff0000000000000;// openAccGL.c:518
      mul.rn.f64           %fd3, %fd2, 0d3fe0000000000000;// openAccGL.c:518
      cvt.rn.f32.f64       %f3, %fd3;                  // openAccGL.c:518
      st.global.f32        [%sd8 + 4], %f3;            // openAccGL.c:518 : 1[$$LCS_dptr_col_10_T202,$$SR_E5_T169]
      .loc                 1  519  0
      cvt.f64.f32          %fd4, %f2;                  // openAccGL.c:519
      mad.rn.f64           %fd5, 0d3f847ae147ae147b, %fd4, 0d3f847ae147ae147b;// openAccGL.c:519
      mul.rn.f64           %fd6, %fd5, 0d3fe0000000000000;// openAccGL.c:519
      cvt.rn.f32.f64       %f4, %fd6;                  // openAccGL.c:519
      st.global.f32        [%sd8 + 8], %f4;            // openAccGL.c:519 : 2[$$LCS_dptr_col_10_T202,$$SR_E5_T169]
      .loc                 1  516  0
      @%p3 bra             $runCuda$ck_L515_7__l102__; // openAccGL.c:516
$runCuda$ck_L515_7__l106__:
      .loc                 1  520  0
      bar.sync             0;                          // openAccGL.c:520
$runCuda$ck_L515_7__l107__:
      exit;
      } // runCuda$ck_L515_7


      .entry runCuda$ck_L417_8(
               .param .s64 $$arg_ptr_acc_v_T52_T234,
               .param .s64 $$arg_ptr_acc_u_T54_T235 )
      {
      .reg .pred %p<2>;
      .reg .b64  %bd<2>;
      .reg .s64  %sd<6>;
      .reg .u32  %u<5>;
      //
      .loc                 1  417  0
      .loc                 1  417  0
      mov.u32              %u1, %ctaid.x;              // openAccGL.c:417
      mov.u32              %u2, %ntid.x;               // openAccGL.c:417
      mov.u32              %u3, %tid.x;                // openAccGL.c:417
      mad.lo.u32           %u4, %u1, %u2, %u3;         // openAccGL.c:417
      cvt.s64.u32          %sd1, %u4;                  // openAccGL.c:417 : $$id_T102
      setp.ge.s64          %p1, %sd1, 65536;           // openAccGL.c:417
      @%p1 bra             $runCuda$ck_L417_8__l114__; // openAccGL.c:417
      .loc                 1  418  0
      ld.param.s64         %sd2, [$$arg_ptr_acc_v_T52_T234];// openAccGL.c:418 : $$arg_ptr_acc_v_T52_T234
      shl.b64              %bd1, %sd1, 2;              // openAccGL.c:418
      add.s64              %sd3, %sd2, %bd1;           // openAccGL.c:418
      st.global.f32        [%sd3], 0f00000000;         // openAccGL.c:418 : 0[$$arg_ptr_acc_v_T52_T234,$$id_T102]
      .loc                 1  419  0
      ld.param.s64         %sd4, [$$arg_ptr_acc_u_T54_T235];// openAccGL.c:419 : $$arg_ptr_acc_u_T54_T235
      add.s64              %sd5, %sd4, %bd1;           // openAccGL.c:419
      st.global.f32        [%sd5], 0f00000000;         // openAccGL.c:419 : 0[$$arg_ptr_acc_u_T54_T235,$$id_T102]
$runCuda$ck_L417_8__l114__:
      exit;
      } // runCuda$ck_L417_8


      .entry runCuda$ck_L438_9(
               .param .s64 $$arg_ptr_acc_v_T52_T236,
               .param .s64 $$arg_ptr_acc_u_T54_T237 )
      {
      .reg .pred %p<2>;
      .reg .b64  %bd<2>;
      .reg .s64  %sd<6>;
      .reg .u32  %u<5>;
      .reg .f32  %f<4>;
      //
      .loc                 1  438  0
      .loc                 1  438  0
      mov.u32              %u1, %ctaid.x;              // openAccGL.c:438
      mov.u32              %u2, %ntid.x;               // openAccGL.c:438
      mov.u32              %u3, %tid.x;                // openAccGL.c:438
      mad.lo.u32           %u4, %u1, %u2, %u3;         // openAccGL.c:438
      cvt.s64.u32          %sd1, %u4;                  // openAccGL.c:438 : $$id_T104
      setp.ge.s64          %p1, %sd1, 65536;           // openAccGL.c:438
      @%p1 bra             $runCuda$ck_L438_9__l121__; // openAccGL.c:438
      .loc                 1  439  0
      shl.b64              %bd1, %sd1, 2;              // openAccGL.c:439
      ld.param.s64         %sd2, [$$arg_ptr_acc_v_T52_T236];// openAccGL.c:439 : $$arg_ptr_acc_v_T52_T236
      add.s64              %sd3, %sd2, %bd1;           // openAccGL.c:439
      ld.param.s64         %sd4, [$$arg_ptr_acc_u_T54_T237];// openAccGL.c:439 : $$arg_ptr_acc_u_T54_T237
      add.s64              %sd5, %sd4, %bd1;           // openAccGL.c:439
      ld.global.f32        %f1, [%sd5];                // openAccGL.c:439 : 0[$$arg_ptr_acc_u_T54_T237,$$id_T104]
      ld.global.nc.f32     %f2, [%sd3];                // openAccGL.c:439 : 0[$$arg_ptr_acc_v_T52_T236,$$id_T104,ex]
      mad.rn.f32           %f3, 0f3c23d70a, %f2, %f1;  // openAccGL.c:439
      st.global.f32        [%sd5], %f3;                // openAccGL.c:439 : 0[$$arg_ptr_acc_u_T54_T237,$$id_T104]
$runCuda$ck_L438_9__l121__:
      exit;
      } // runCuda$ck_L438_9


      .entry runCuda$ck_L444_10(
               .param .s64 $$arg_ptr_acc_v_T52_T238,
               .param .s64 $$arg_ptr_acc_u_T54_T239 )
      {
      .reg .pred %p<4>;
      .reg .b64  %bd<2>;
      .reg .s64  %sd<11>;
      .reg .f32  %f<8>;
      .reg .f64  %fd<14>;
      //
      .loc                 1  444  0
      .loc                 1  444  0
      cvt.s64.u32          %sd1, %ctaid.x;             // openAccGL.c:444 : $$id_T106
      setp.ge.s64          %p1, %sd1, 253;             // openAccGL.c:444
      @%p1 bra             $runCuda$ck_L444_10__l137__;// openAccGL.c:444
      .loc                 1  445  0
      cvt.s64.u32          %sd4, %ntid.x;              // openAccGL.c:445 : $$numthrds_T107
      cvt.s64.u32          %sd5, %tid.x;               // openAccGL.c:445
      mov.s64              %sd3, %sd5;                 // openAccGL.c:445 : $$I_x_386_T177
      setp.ge.s64          %p2, %sd5, 253;             // openAccGL.c:445
      @%p2 bra             $runCuda$ck_L444_10__l136__;// openAccGL.c:445
      .loc                 1  446  0
      shl.b64              %sd2, %sd1, 8;              // openAccGL.c:446 : $$LIS_b20_T178
$runCuda$ck_L444_10__l132__:
      .loc                 1  446  0
      add.s64              %sd6, %sd3, %sd2;           // openAccGL.c:446
      shl.b64              %bd1, %sd6, 2;              // openAccGL.c:446
      ld.param.s64         %sd7, [$$arg_ptr_acc_u_T54_T239];// openAccGL.c:446 : $$arg_ptr_acc_u_T54_T239
      add.s64              %sd8, %sd7, %bd1;           // openAccGL.c:446
      ld.param.s64         %sd9, [$$arg_ptr_acc_v_T52_T238];// openAccGL.c:446 : $$arg_ptr_acc_v_T52_T238
      add.s64              %sd10, %sd9, %bd1;          // openAccGL.c:446
      ld.global.nc.f32     %f1, [%sd8 + 1028];         // openAccGL.c:446 : 257[$$arg_ptr_acc_u_T54_T239,$$LCS_12_T212,ex]
      cvt.f64.f32          %fd1, %f1;                  // openAccGL.c:446
      mul.rn.f64           %fd2, %fd1, 0dc000000000000000;// openAccGL.c:446
      ld.global.nc.f32     %f2, [%sd8 + 2052];         // openAccGL.c:446 : 513[$$arg_ptr_acc_u_T54_T239,$$LCS_12_T212,ex]
      cvt.f64.f32          %fd3, %f2;                  // openAccGL.c:446
      add.rn.f64           %fd4, %fd3, %fd2;           // openAccGL.c:446
      ld.global.nc.f32     %f3, [%sd8 + 4];            // openAccGL.c:446 : 1[$$arg_ptr_acc_u_T54_T239,$$LCS_12_T212,ex]
      cvt.f64.f32          %fd5, %f3;                  // openAccGL.c:446
      add.rn.f64           %fd6, %fd4, %fd5;           // openAccGL.c:446
      ld.global.nc.f32     %f4, [%sd8 + 1032];         // openAccGL.c:446 : 258[$$arg_ptr_acc_u_T54_T239,$$LCS_12_T212,ex]
      cvt.f64.f32          %fd7, %f4;                  // openAccGL.c:446
      add.rn.f64           %fd8, %fd7, %fd2;           // openAccGL.c:446
      ld.global.nc.f32     %f5, [%sd8 + 1024];         // openAccGL.c:446 : 256[$$arg_ptr_acc_u_T54_T239,$$LCS_12_T212,ex]
      cvt.f64.f32          %fd9, %f5;                  // openAccGL.c:446
      add.rn.f64           %fd10, %fd8, %fd9;          // openAccGL.c:446
      add.rn.f64           %fd11, %fd6, %fd10;         // openAccGL.c:446
      ld.global.f32        %f6, [%sd10 + 1028];        // openAccGL.c:446 : 257[$$arg_ptr_acc_v_T52_T238,$$LCS_12_T212]
      cvt.f64.f32          %fd12, %f6;                 // openAccGL.c:446
      add.rn.f64           %fd13, %fd11, %fd12;        // openAccGL.c:446
      cvt.rn.f32.f64       %f7, %fd13;                 // openAccGL.c:446
      st.global.f32        [%sd10 + 1028], %f7;        // openAccGL.c:446 : 257[$$arg_ptr_acc_v_T52_T238,$$LCS_12_T212]
      .loc                 1  445  0
      add.s64              %sd3, %sd4, %sd3;           // openAccGL.c:445 : $$I_x_386_T177
      setp.lt.s64          %p3, %sd3, 253;             // openAccGL.c:445
      @%p3 bra             $runCuda$ck_L444_10__l132__;// openAccGL.c:445
$runCuda$ck_L444_10__l136__:
      .loc                 1  446  0
      bar.sync             0;                          // openAccGL.c:446
$runCuda$ck_L444_10__l137__:
      exit;
      } // runCuda$ck_L444_10


      .entry runCuda$ck_L423_18(
               .param .u64 $$arg_devptr_dptr_T58_T240 )
      {
      .reg .pred %p<3>;
      .reg .b64  %bd<2>;
      .reg .s64  %sd<8>;
      .reg .u64  %ud<2>;
      .reg .f32  %f<5>;
      //
      .loc                 1  423  0
      .loc                 1  423  0
      mov.s64              %sd2, 0;                    // openAccGL.c:423 : $y_S20
      .loc                 1  427  0
      mov.s64              %sd1, 0;                    // openAccGL.c:427 : $SR_S19
      .loc                 1  423  0
      mov.s64              %sd6, -256;                 // openAccGL.c:423 : $$Induc02_S24_T218
$runCuda$ck_L423_18__l143__:
      .loc                 1  424  0
      mov.s64              %sd3, 0;                    // openAccGL.c:424 : $x_S21
      .loc                 1  427  0
      mov.s64              %sd4, %sd1;                 // openAccGL.c:427 : $SR_S22
      .loc                 1  428  0
      cvt.rn.f32.s64       %f2, %sd2;                  // openAccGL.c:428
      mad.rn.f32           %f1, 0f3c000000, %f2, 0fbf800000;// openAccGL.c:428 : $$LIS_b24_T187
      .loc                 1  424  0
      mov.s64              %sd5, -256;                 // openAccGL.c:424 : $$Induc01_S23_T217
$runCuda$ck_L423_18__l146__:
      .loc                 1  427  0
      cvt.rn.f32.s64       %f3, %sd3;                  // openAccGL.c:427
      mad.rn.f32           %f4, 0f3c000000, %f3, 0fbf800000;// openAccGL.c:427
      shl.b64              %bd1, %sd4, 2;              // openAccGL.c:427
      ld.param.u64         %ud1, [$$arg_devptr_dptr_T58_T240];// openAccGL.c:427 : $$arg_devptr_dptr_T58_T240
      add.s64              %sd7, %ud1, %bd1;           // openAccGL.c:427
      st.global.f32        [%sd7], %f4;                // openAccGL.c:427 : 0[$$LCS_dptr_14_T216,$SR_S22]
      .loc                 1  428  0
      st.global.f32        [%sd7 + 4], %f1;            // openAccGL.c:428 : 1[$$LCS_dptr_14_T216,$SR_S22]
      .loc                 1  429  0
      st.global.f32        [%sd7 + 8], 0f00000000;     // openAccGL.c:429 : 2[$$LCS_dptr_14_T216,$SR_S22]
      .loc                 1  430  0
      st.global.f32        [%sd7 + 12], 0f3f800000;    // openAccGL.c:430 : 3[$$LCS_dptr_14_T216,$SR_S22]
      .loc                 1  427  0
      add.s64              %sd4, %sd4, 4;              // openAccGL.c:427 : $SR_S22
      .loc                 1  424  0
      add.s64              %sd3, %sd3, 1;              // openAccGL.c:424 : $x_S21
      add.s64              %sd5, %sd5, 1;              // openAccGL.c:424 : $$Induc01_S23_T217
      setp.lt.s64          %p1, %sd5, 0;               // openAccGL.c:424
      @%p1 bra             $runCuda$ck_L423_18__l146__;// openAccGL.c:424
      .loc                 1  427  0
      add.s64              %sd1, %sd1, 1024;           // openAccGL.c:427 : $SR_S19
      .loc                 1  423  0
      add.s64              %sd2, %sd2, 1;              // openAccGL.c:423 : $y_S20
      add.s64              %sd6, %sd6, 1;              // openAccGL.c:423 : $$Induc02_S24_T218
      setp.lt.s64          %p2, %sd6, 0;               // openAccGL.c:423
      @%p2 bra             $runCuda$ck_L423_18__l143__;// openAccGL.c:423
      exit;
      } // runCuda$ck_L423_18


//
// Start libm
//

.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.visible .global .align 8 .u64 aksf_ptr;
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};
.const .align 1 .b8 $str[42] = {98, 108, 111, 99, 107, 32, 37, 117, 44, 32, 116, 104, 114, 101, 97, 100, 32, 37, 117, 58, 32, 109, 97, 108, 108, 111, 99, 40, 37, 108, 108, 117, 41, 32, 102, 97, 105, 108, 101, 100, 10, 0};
.const .align 1 .b8 $str1[78] = {84, 104, 114, 101, 97, 100, 32, 101, 120, 101, 99, 117, 116, 105, 111, 110, 32, 115, 116, 111, 112, 112, 101, 100, 32, 97, 116, 32, 70, 73, 76, 69, 32, 37, 115, 32, 76, 73, 78, 69, 32, 37, 100, 32, 100, 117, 101, 32, 116, 111, 32, 97, 32, 114, 101, 103, 117, 108, 97, 114, 32, 83, 84, 79, 80, 32, 115, 116, 97, 116, 101, 109, 101, 110, 116, 46, 10, 0};
.const .align 1 .b8 $str2[70] = {84, 104, 114, 101, 97, 100, 32, 101, 120, 101, 99, 117, 116, 105, 111, 110, 32, 115, 116, 111, 112, 112, 101, 100, 32, 97, 116, 32, 70, 73, 76, 69, 32, 37, 115, 32, 76, 73, 78, 69, 32, 37, 100, 32, 100, 117, 101, 32, 116, 111, 32, 97, 110, 32, 73, 47, 79, 32, 115, 116, 97, 116, 101, 109, 101, 110, 116, 46, 10, 0};

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .s32 	%r<48>;
	.reg .s64 	%rd<88>;
	.reg .f64 	%fd<3>;


	mov.u64 	%SPL, __local_depot2;
	ld.param.f64 	%fd1, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd31, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd33, %SPL, 0;
	mov.b64 	%rd2, %fd1;
	and.b64  	%rd85, %rd2, -9223372036854775808;
	shr.u64 	%rd34, %rd2, 52;
	and.b64  	%rd35, %rd34, 2047;
	add.s64 	%rd36, %rd35, 4294966272;
	cvt.u32.u64 	%r1, %rd36;
	shl.b64 	%rd37, %rd2, 11;
	or.b64  	%rd4, %rd37, -9223372036854775808;
	shr.u32 	%r10, %r1, 6;
	mov.u32 	%r11, 16;
	sub.s32 	%r2, %r11, %r10;
	mov.u32 	%r12, 15;
	sub.s32 	%r47, %r12, %r10;
	mov.u32 	%r13, 19;
	sub.s32 	%r14, %r13, %r10;
	mov.u32 	%r15, 18;
	min.s32 	%r4, %r15, %r14;
	setp.ge.s32 	%p1, %r47, %r4;
	mov.u64 	%rd82, 0;
	@%p1 bra 	BB2_3;

	cvt.u32.u64 	%r16, %rd34;
	and.b32  	%r17, %r16, 2047;
	add.s32 	%r18, %r17, -1024;
	shr.u32 	%r19, %r18, 6;
	add.s32 	%r20, %r19, -15;
	cvt.s64.s32 	%rd40, %r20;
	sub.s32 	%r22, %r12, %r19;
	cvt.s64.s32 	%rd41, %r22;
	add.s64 	%rd42, %rd40, %rd41;
	shl.b64 	%rd43, %rd42, 3;
	add.s64 	%rd81, %rd33, %rd43;
	mul.wide.s32 	%rd44, %r22, 8;
	mov.u64 	%rd45, __cudart_i2opi_d;
	add.s64 	%rd80, %rd45, %rd44;
	mov.u64 	%rd82, 0;

BB2_2:
	.pragma "nounroll";
	ld.const.u64 	%rd46, [%rd80];
	mul.hi.u64 	%rd47, %rd46, %rd4;
	mad.lo.s64 	%rd48, %rd46, %rd4, %rd82;
	setp.lt.u64 	%p2, %rd48, %rd82;
	selp.u64 	%rd49, 1, 0, %p2;
	add.s64 	%rd82, %rd49, %rd47;
	st.local.u64 	[%rd81], %rd48;
	add.s64 	%rd81, %rd81, 8;
	add.s64 	%rd80, %rd80, 8;
	add.s32 	%r47, %r47, 1;
	setp.lt.s32 	%p3, %r47, %r4;
	@%p3 bra 	BB2_2;

BB2_3:
	mov.u32 	%r25, 1;
	sub.s32 	%r26, %r25, %r2;
	add.s32 	%r27, %r26, %r47;
	mul.wide.s32 	%rd50, %r27, 8;
	add.s64 	%rd51, %rd33, %rd50;
	st.local.u64 	[%rd51], %rd82;
	add.s64 	%rd14, %rd33, 24;
	ld.local.u64 	%rd83, [%rd33+24];
	ld.local.u64 	%rd84, [%rd33+16];
	and.b32  	%r8, %r1, 63;
	setp.eq.s32 	%p4, %r8, 0;
	@%p4 bra 	BB2_5;

	mov.u32 	%r31, 64;
	sub.s32 	%r32, %r31, %r8;
	shl.b64 	%rd52, %rd83, %r8;
	shr.u64 	%rd53, %rd84, %r32;
	or.b64  	%rd83, %rd53, %rd52;
	shl.b64 	%rd54, %rd84, %r8;
	ld.local.u64 	%rd55, [%rd14+-16];
	shr.u64 	%rd56, %rd55, %r32;
	or.b64  	%rd84, %rd56, %rd54;

BB2_5:
	shr.u64 	%rd57, %rd83, 62;
	cvt.u32.u64 	%r34, %rd57;
	shr.u64 	%rd58, %rd84, 62;
	shl.b64 	%rd59, %rd83, 2;
	or.b64  	%rd87, %rd58, %rd59;
	shl.b64 	%rd22, %rd84, 2;
	shr.u64 	%rd60, %rd83, 61;
	cvt.u32.u64 	%r35, %rd60;
	and.b32  	%r36, %r35, 1;
	add.s32 	%r37, %r36, %r34;
	neg.s32 	%r38, %r37;
	setp.eq.s64 	%p5, %rd85, 0;
	selp.b32 	%r39, %r37, %r38, %p5;
	st.u32 	[%rd31], %r39;
	setp.eq.s32 	%p6, %r36, 0;
	mov.u64 	%rd86, %rd22;
	@%p6 bra 	BB2_7;

	not.b64 	%rd61, %rd87;
	neg.s64 	%rd23, %rd22;
	setp.eq.s64 	%p7, %rd22, 0;
	selp.u64 	%rd62, 1, 0, %p7;
	add.s64 	%rd87, %rd62, %rd61;
	xor.b64  	%rd85, %rd85, -9223372036854775808;
	mov.u64 	%rd86, %rd23;

BB2_7:
	clz.b64 	%r9, %rd87;
	setp.eq.s32 	%p8, %r9, 0;
	@%p8 bra 	BB2_9;

	shl.b64 	%rd63, %rd87, %r9;
	mov.u32 	%r41, 64;
	sub.s32 	%r42, %r41, %r9;
	shr.u64 	%rd64, %rd86, %r42;
	or.b64  	%rd87, %rd64, %rd63;

BB2_9:
	mov.u64 	%rd65, -3958705157555305931;
	mul.hi.u64 	%rd66, %rd87, %rd65;
	setp.gt.s64 	%p9, %rd66, 0;
	shl.b64 	%rd67, %rd66, 1;
	mul.lo.s64 	%rd68, %rd87, -3958705157555305931;
	shr.u64 	%rd69, %rd68, 63;
	or.b64  	%rd70, %rd67, %rd69;
	selp.b64 	%rd71, %rd70, %rd66, %p9;
	selp.b32 	%r43, -1, 0, %p9;
	mov.u32 	%r44, 1022;
	sub.s32 	%r45, %r44, %r9;
	add.s32 	%r46, %r45, %r43;
	cvt.u64.u32 	%rd72, %r46;
	shl.b64 	%rd73, %rd72, 52;
	add.s64 	%rd74, %rd71, 1;
	shr.u64 	%rd75, %rd74, 10;
	add.s64 	%rd76, %rd75, 1;
	shr.u64 	%rd77, %rd76, 1;
	add.s64 	%rd78, %rd77, %rd73;
	or.b64  	%rd79, %rd78, %rd85;
	mov.b64 	%fd2, %rd79;
	st.param.f64	[func_retval0+0], %fd2;
	ret;
}

.visible .func  (.param .b32 func_retval0) __CHABS(
	.param .b32 __CHABS_param_0,
	.param .b32 __CHABS_param_1
)
{
	.reg .f32 	%f<6>;


	ld.param.f32 	%f1, [__CHABS_param_0];
	ld.param.f32 	%f2, [__CHABS_param_1];
	mul.f32 	%f3, %f2, %f2;
	fma.rn.f32 	%f4, %f1, %f1, %f3;
	sqrt.rn.f32 	%f5, %f4;
	st.param.f32	[func_retval0+0], %f5;
	ret;
}

.visible .func  (.param .b64 func_retval0) __CABS(
	.param .b64 __CABS_param_0,
	.param .b64 __CABS_param_1
)
{
	.reg .f64 	%fd<6>;


	ld.param.f64 	%fd1, [__CABS_param_0];
	ld.param.f64 	%fd2, [__CABS_param_1];
	mul.f64 	%fd3, %fd2, %fd2;
	fma.rn.f64 	%fd4, %fd1, %fd1, %fd3;
	sqrt.rn.f64 	%fd5, %fd4;
	st.param.f64	[func_retval0+0], %fd5;
	ret;
}

.visible .func  (.param .b32 func_retval0) _HTOH(
	.param .b32 _HTOH_param_0,
	.param .b32 _HTOH_param_1
)
{
	.reg .pred 	%p<30>;
	.reg .s32 	%r<28>;
	.reg .f32 	%f<122>;


	ld.param.f32 	%f118, [_HTOH_param_0];
	ld.param.f32 	%f26, [_HTOH_param_1];
	setp.eq.f32 	%p1, %f118, 0f3F800000;
	mov.f32 	%f121, 0f3F800000;
	setp.eq.f32 	%p2, %f26, 0f00000000;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_25;

	abs.f32 	%f1, %f118;
	mov.u32 	%r1, 2139095040;
	mov.b32 	%f2, %r1;
	setp.gtu.f32 	%p4, %f1, %f2;
	@%p4 bra 	BB5_24;

	abs.f32 	%f3, %f26;
	setp.gtu.f32 	%p5, %f3, %f2;
	@%p5 bra 	BB5_24;

	setp.eq.f32 	%p6, %f2, %f118;
	@%p6 bra 	BB5_23;

	setp.eq.f32 	%p7, %f3, %f2;
	@%p7 bra 	BB5_19;

	mul.f32 	%f28, %f26, 0f3F000000;
	cvt.rzi.f32.f32 	%f29, %f28;
	fma.rn.f32 	%f30, %f29, 0fC0000000, %f26;
	abs.f32 	%f4, %f30;
	setp.eq.f32 	%p8, %f118, 0f00000000;
	@%p8 bra 	BB5_16;

	neg.f32 	%f31, %f2;
	setp.eq.f32 	%p9, %f118, %f31;
	@%p9 bra 	BB5_13;

	setp.geu.f32 	%p10, %f118, 0f00000000;
	@%p10 bra 	BB5_9;

	cvt.rzi.f32.f32 	%f32, %f26;
	setp.neu.f32 	%p11, %f32, %f26;
	@%p11 bra 	BB5_12;

BB5_9:
	mov.b32 	%r2, %f1;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r4, %r3, 255;
	setp.eq.s32 	%p12, %r4, 0;
	mul.f32 	%f33, %f1, 0f4B800000;
	mov.b32 	%r5, %f33;
	shr.u32 	%r6, %r5, 23;
	and.b32  	%r7, %r6, 255;
	add.s32 	%r8, %r7, -24;
	selp.f32 	%f34, %f33, %f1, %p12;
	selp.b32 	%r9, %r8, %r4, %p12;
	mov.b32 	%r10, %f34;
	and.b32  	%r11, %r10, -2139095041;
	or.b32  	%r12, %r11, 1065353216;
	mov.b32 	%f35, %r12;
	setp.gt.f32 	%p13, %f35, 0f3FB504F3;
	mul.f32 	%f36, %f35, 0f3F000000;
	selp.b32 	%r13, -126, -127, %p13;
	add.s32 	%r14, %r9, %r13;
	selp.f32 	%f37, %f36, %f35, %p13;
	add.f32 	%f38, %f37, 0fBF800000;
	add.f32 	%f39, %f37, 0f3F800000;
	rcp.rn.f32 	%f40, %f39;
	add.f32 	%f41, %f38, %f38;
	mul.f32 	%f42, %f41, %f40;
	mul.f32 	%f43, %f42, %f42;
	mov.f32 	%f44, 0f3C4CAF63;
	mov.f32 	%f45, 0f3B18F0FE;
	fma.rn.f32 	%f46, %f45, %f43, %f44;
	mov.f32 	%f47, 0f3DAAAABD;
	fma.rn.f32 	%f48, %f46, %f43, %f47;
	mul.rn.f32 	%f49, %f48, %f43;
	mul.rn.f32 	%f50, %f49, %f42;
	mov.b32 	%r15, %f42;
	and.b32  	%r16, %r15, -4096;
	mov.b32 	%f51, %r16;
	mov.b32 	%r17, %f38;
	and.b32  	%r18, %r17, -4096;
	mov.b32 	%f52, %r18;
	sub.f32 	%f53, %f38, %f51;
	add.f32 	%f54, %f53, %f53;
	sub.f32 	%f55, %f38, %f52;
	neg.f32 	%f56, %f51;
	fma.rn.f32 	%f57, %f56, %f52, %f54;
	fma.rn.f32 	%f58, %f56, %f55, %f57;
	mul.rn.f32 	%f59, %f40, %f58;
	add.f32 	%f60, %f51, %f59;
	sub.f32 	%f61, %f60, %f51;
	sub.f32 	%f62, %f59, %f61;
	add.f32 	%f63, %f60, %f50;
	sub.f32 	%f64, %f60, %f63;
	add.f32 	%f65, %f64, %f50;
	add.f32 	%f66, %f65, %f62;
	add.f32 	%f67, %f63, %f66;
	sub.f32 	%f68, %f63, %f67;
	add.f32 	%f69, %f68, %f66;
	cvt.rn.f32.s32 	%f70, %r14;
	mov.f32 	%f71, 0f3F317200;
	mul.rn.f32 	%f72, %f70, %f71;
	mov.f32 	%f73, 0f35BFBE8E;
	mul.rn.f32 	%f74, %f70, %f73;
	add.f32 	%f75, %f72, %f67;
	sub.f32 	%f76, %f72, %f75;
	add.f32 	%f77, %f76, %f67;
	add.f32 	%f78, %f77, %f69;
	add.f32 	%f79, %f78, %f74;
	add.f32 	%f80, %f75, %f79;
	sub.f32 	%f81, %f75, %f80;
	add.f32 	%f82, %f81, %f79;
	mul.f32 	%f83, %f26, 0f39000000;
	setp.gt.f32 	%p14, %f3, 0f77F684DF;
	selp.f32 	%f84, %f83, %f26, %p14;
	mul.rn.f32 	%f85, %f84, %f80;
	neg.f32 	%f86, %f85;
	fma.rn.f32 	%f87, %f84, %f80, %f86;
	fma.rn.f32 	%f88, %f84, %f82, %f87;
	mov.f32 	%f89, 0f00000000;
	fma.rn.f32 	%f90, %f89, %f80, %f88;
	add.rn.f32 	%f91, %f85, %f90;
	neg.f32 	%f92, %f91;
	add.rn.f32 	%f93, %f85, %f92;
	add.rn.f32 	%f94, %f93, %f90;
	mov.b32 	%r19, %f91;
	setp.eq.s32 	%p15, %r19, 1118925336;
	add.s32 	%r20, %r19, -1;
	mov.b32 	%f95, %r20;
	mov.u32 	%r21, 922746880;
	mov.b32 	%f96, %r21;
	add.f32 	%f97, %f94, %f96;
	selp.f32 	%f5, %f97, %f94, %p15;
	selp.f32 	%f98, %f95, %f91, %p15;
	mul.f32 	%f99, %f98, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f100, %f99;
	mov.f32 	%f101, 0fBF317200;
	fma.rn.f32 	%f102, %f100, %f101, %f98;
	mov.f32 	%f103, 0fB5BFBE8E;
	fma.rn.f32 	%f104, %f100, %f103, %f102;
	mul.f32 	%f105, %f104, 0f3FB8AA3B;
	ex2.approx.f32 	%f106, %f105;
	add.f32 	%f107, %f100, 0f00000000;
	ex2.approx.f32 	%f108, %f107;
	mul.f32 	%f109, %f106, %f108;
	setp.lt.f32 	%p16, %f98, 0fC2D20000;
	selp.f32 	%f110, 0f00000000, %f109, %p16;
	setp.gt.f32 	%p17, %f98, 0f42D20000;
	selp.f32 	%f117, %f2, %f110, %p17;
	setp.eq.f32 	%p18, %f117, %f2;
	@%p18 bra 	BB5_11;

	fma.rn.f32 	%f117, %f117, %f5, %f117;

BB5_11:
	ld.param.f32 	%f116, [_HTOH_param_0];
	setp.eq.f32 	%p19, %f4, 0f3F800000;
	setp.lt.f32 	%p20, %f116, 0f00000000;
	and.pred  	%p21, %p20, %p19;
	mov.b32 	%r22, %f117;
	xor.b32  	%r23, %r22, -2147483648;
	mov.b32 	%f111, %r23;
	selp.f32 	%f121, %f111, %f117, %p21;
	bra.uni 	BB5_25;

BB5_12:
	mov.u32 	%r24, -4194304;
	mov.b32 	%f112, %r24;
	rsqrt.approx.f32 	%f121, %f112;
	bra.uni 	BB5_25;

BB5_13:
	setp.geu.f32 	%p22, %f26, 0f00000000;
	@%p22 bra 	BB5_15;

	rcp.rn.f32 	%f118, %f118;

BB5_15:
	neg.f32 	%f113, %f118;
	mov.b32 	%r25, %f113;
	xor.b32  	%r26, %r25, -2147483648;
	mov.b32 	%f114, %r26;
	setp.eq.f32 	%p23, %f4, 0f3F800000;
	selp.f32 	%f121, %f114, %f113, %p23;
	bra.uni 	BB5_25;

BB5_16:
	setp.eq.f32 	%p24, %f4, 0f3F800000;
	selp.f32 	%f119, %f118, 0f00000000, %p24;
	setp.geu.f32 	%p25, %f26, 0f00000000;
	@%p25 bra 	BB5_18;

	rcp.rn.f32 	%f119, %f119;

BB5_18:
	add.f32 	%f121, %f119, %f119;
	bra.uni 	BB5_25;

BB5_19:
	setp.eq.f32 	%p26, %f118, 0fBF800000;
	mov.f32 	%f121, 0f3F800000;
	@%p26 bra 	BB5_25;

	setp.gt.f32 	%p27, %f1, 0f3F800000;
	selp.f32 	%f120, %f2, 0f00000000, %p27;
	setp.geu.f32 	%p28, %f26, 0f00000000;
	@%p28 bra 	BB5_22;

	rcp.rn.f32 	%f120, %f120;

BB5_22:
	add.f32 	%f121, %f120, %f120;
	bra.uni 	BB5_25;

BB5_23:
	mov.b32 	%r27, %f26;
	setp.lt.s32 	%p29, %r27, 0;
	selp.f32 	%f121, 0f00000000, %f2, %p29;
	bra.uni 	BB5_25;

BB5_24:
	add.f32 	%f121, %f118, %f26;

BB5_25:
	st.param.f32	[func_retval0+0], %f121;
	ret;
}

.visible .func  (.param .b32 func_retval0) _HTON(
	.param .b32 _HTON_param_0,
	.param .b32 _HTON_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<12>;


	ld.param.f32 	%f10, [_HTON_param_0];
	ld.param.u32 	%r4, [_HTON_param_1];
	abs.s32 	%r5, %r4;
	mov.f32 	%f11, 0f3F800000;

BB6_1:
	{
	.reg .b32 temp;
	and.b32	 temp, %r5, 1;
	setp.b32.eq 	 %p1, temp, 1;
	}
	@!%p1 bra 	BB6_3;
	bra.uni 	BB6_2;

BB6_2:
	mul.rn.f32 	%f11, %f11, %f10;

BB6_3:
	shr.u32 	%r5, %r5, 1;
	setp.eq.s32 	%p2, %r5, 0;
	@%p2 bra 	BB6_5;

	mul.rn.f32 	%f10, %f10, %f10;
	bra.uni 	BB6_1;

BB6_5:
	setp.gt.s32 	%p3, %r4, -1;
	@%p3 bra 	BB6_7;

	rcp.rn.f32 	%f11, %f11;

BB6_7:
	st.param.f32	[func_retval0+0], %f11;
	ret;
}

.visible .func  (.param .b32 func_retval0) _HTOI(
	.param .b32 _HTOI_param_0,
	.param .b64 _HTOI_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<12>;


	ld.param.f32 	%f10, [_HTOI_param_0];
	ld.param.u32 	%r1, [_HTOI_param_1];
	abs.s32 	%r5, %r1;
	mov.f32 	%f11, 0f3F800000;

BB7_1:
	{
	.reg .b32 temp;
	and.b32	 temp, %r5, 1;
	setp.b32.eq 	 %p1, temp, 1;
	}
	@!%p1 bra 	BB7_3;
	bra.uni 	BB7_2;

BB7_2:
	mul.rn.f32 	%f11, %f11, %f10;

BB7_3:
	shr.u32 	%r5, %r5, 1;
	setp.eq.s32 	%p2, %r5, 0;
	@%p2 bra 	BB7_5;

	mul.rn.f32 	%f10, %f10, %f10;
	bra.uni 	BB7_1;

BB7_5:
	setp.gt.s32 	%p3, %r1, -1;
	@%p3 bra 	BB7_7;

	rcp.rn.f32 	%f11, %f11;

BB7_7:
	st.param.f32	[func_retval0+0], %f11;
	ret;
}

.visible .func  (.param .b64 func_retval0) _RTOR(
	.param .b64 _RTOR_param_0,
	.param .b64 _RTOR_param_1
)
{
	.reg .pred 	%p<34>;
	.reg .s32 	%r<39>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<7>;
	.reg .f64 	%fd<174>;


	ld.param.f64 	%fd30, [_RTOR_param_0];
	ld.param.f64 	%fd31, [_RTOR_param_1];
	setp.eq.f64 	%p1, %fd30, 0d3FF0000000000000;
	mov.f64 	%fd173, 0d3FF0000000000000;
	setp.eq.f64 	%p2, %fd31, 0d0000000000000000;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB8_33;

	abs.f64 	%fd1, %fd30;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd2, %rd1;
	setp.gtu.f64 	%p4, %fd1, %fd2;
	@%p4 bra 	BB8_32;

	abs.f64 	%fd3, %fd31;
	setp.gtu.f64 	%p5, %fd3, %fd2;
	@%p5 bra 	BB8_32;

	setp.eq.f64 	%p6, %fd2, %fd30;
	@%p6 bra 	BB8_31;

	setp.eq.f64 	%p7, %fd3, %fd2;
	@%p7 bra 	BB8_28;

	mul.f64 	%fd33, %fd31, 0d3FE0000000000000;
	cvt.rzi.f64.f64 	%fd34, %fd33;
	fma.rn.f64 	%fd35, %fd34, 0dC000000000000000, %fd31;
	abs.f64 	%fd4, %fd35;
	setp.eq.f64 	%p8, %fd30, 0d0000000000000000;
	@%p8 bra 	BB8_26;

	neg.f64 	%fd36, %fd2;
	setp.eq.f64 	%p9, %fd30, %fd36;
	@%p9 bra 	BB8_22;

	setp.geu.f64 	%p10, %fd30, 0d0000000000000000;
	@%p10 bra 	BB8_9;

	cvt.rzi.f64.f64 	%fd37, %fd31;
	setp.neu.f64 	%p11, %fd37, %fd31;
	@%p11 bra 	BB8_21;

BB8_9:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd1;
	}
	shr.u32 	%r17, %r36, 20;
	and.b32  	%r37, %r17, 2047;
	setp.ne.s32 	%p12, %r37, 0;
	@%p12 bra 	BB8_11;

	mul.f64 	%fd38, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd38;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd38;
	}
	shr.u32 	%r18, %r36, 20;
	and.b32  	%r19, %r18, 2047;
	add.s32 	%r37, %r19, -54;

BB8_11:
	add.s32 	%r38, %r37, -1023;
	and.b32  	%r20, %r36, -2146435073;
	or.b32  	%r21, %r20, 1072693248;
	mov.b64 	%fd170, {%r35, %r21};
	setp.lt.u32 	%p13, %r21, 1073127583;
	@%p13 bra 	BB8_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd170;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd170;
	}
	add.s32 	%r24, %r23, -1048576;
	mov.b64 	%fd170, {%r22, %r24};
	add.s32 	%r38, %r37, -1022;

BB8_13:
	add.f64 	%fd39, %fd170, 0d3FF0000000000000;
	mov.f64 	%fd41, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd39;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd40,%f2;
	
	neg.f64 	%fd42, %fd39;
	fma.rn.f64 	%fd43, %fd42, %fd40, %fd41;
	fma.rn.f64 	%fd44, %fd43, %fd43, %fd43;
	fma.rn.f64 	%fd45, %fd44, %fd40, %fd40;
	add.f64 	%fd46, %fd170, 0dBFF0000000000000;
	mul.f64 	%fd47, %fd46, %fd45;
	fma.rn.f64 	%fd48, %fd46, %fd45, %fd47;
	mul.f64 	%fd49, %fd48, %fd48;
	mov.f64 	%fd50, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd51, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd52, %fd51, %fd49, %fd50;
	mov.f64 	%fd53, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd54, %fd52, %fd49, %fd53;
	mov.f64 	%fd55, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd56, %fd54, %fd49, %fd55;
	mov.f64 	%fd57, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd58, %fd56, %fd49, %fd57;
	mov.f64 	%fd59, 0d3F6249249242B910;
	fma.rn.f64 	%fd60, %fd58, %fd49, %fd59;
	mov.f64 	%fd61, 0d3F89999999999DFB;
	fma.rn.f64 	%fd62, %fd60, %fd49, %fd61;
	sub.f64 	%fd63, %fd46, %fd48;
	add.f64 	%fd64, %fd63, %fd63;
	neg.f64 	%fd65, %fd48;
	fma.rn.f64 	%fd66, %fd65, %fd46, %fd64;
	mul.f64 	%fd67, %fd45, %fd66;
	mov.f64 	%fd68, 0d3FB5555555555555;
	fma.rn.f64 	%fd69, %fd62, %fd49, 0d3FB5555555555555;
	sub.f64 	%fd70, %fd68, %fd69;
	fma.rn.f64 	%fd71, %fd62, %fd49, %fd70;
	add.f64 	%fd72, %fd71, 0d0000000000000000;
	add.f64 	%fd73, %fd72, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd74, %fd69, %fd73;
	sub.f64 	%fd75, %fd69, %fd74;
	add.f64 	%fd76, %fd75, %fd73;
	mul.rn.f64 	%fd77, %fd74, %fd48;
	neg.f64 	%fd78, %fd77;
	fma.rn.f64 	%fd79, %fd74, %fd48, %fd78;
	fma.rn.f64 	%fd80, %fd74, %fd67, %fd79;
	fma.rn.f64 	%fd81, %fd76, %fd48, %fd80;
	add.f64 	%fd82, %fd77, %fd81;
	sub.f64 	%fd83, %fd77, %fd82;
	add.f64 	%fd84, %fd83, %fd81;
	mul.rn.f64 	%fd85, %fd82, %fd48;
	neg.f64 	%fd86, %fd85;
	fma.rn.f64 	%fd87, %fd82, %fd48, %fd86;
	fma.rn.f64 	%fd88, %fd82, %fd67, %fd87;
	fma.rn.f64 	%fd89, %fd84, %fd48, %fd88;
	add.f64 	%fd90, %fd85, %fd89;
	sub.f64 	%fd91, %fd85, %fd90;
	add.f64 	%fd92, %fd91, %fd89;
	mul.rn.f64 	%fd93, %fd90, %fd48;
	neg.f64 	%fd94, %fd93;
	fma.rn.f64 	%fd95, %fd90, %fd48, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd67, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd48, %fd96;
	add.f64 	%fd98, %fd93, %fd97;
	sub.f64 	%fd99, %fd93, %fd98;
	add.f64 	%fd100, %fd99, %fd97;
	add.f64 	%fd101, %fd48, %fd98;
	sub.f64 	%fd102, %fd48, %fd101;
	add.f64 	%fd103, %fd102, %fd98;
	add.f64 	%fd104, %fd103, %fd100;
	fma.rn.f64 	%fd105, %fd45, %fd66, %fd104;
	add.f64 	%fd106, %fd101, %fd105;
	sub.f64 	%fd107, %fd101, %fd106;
	add.f64 	%fd108, %fd107, %fd105;
	cvt.rn.f64.s32 	%fd109, %r38;
	mov.f64 	%fd110, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd111, %fd109, %fd110;
	mov.f64 	%fd112, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd113, %fd109, %fd112;
	add.f64 	%fd114, %fd111, %fd106;
	sub.f64 	%fd115, %fd111, %fd114;
	add.f64 	%fd116, %fd115, %fd106;
	add.f64 	%fd117, %fd116, %fd108;
	add.f64 	%fd118, %fd117, %fd113;
	add.f64 	%fd119, %fd114, %fd118;
	sub.f64 	%fd120, %fd114, %fd119;
	add.f64 	%fd121, %fd120, %fd118;
	mul.f64 	%fd122, %fd31, 0d3F20000000000000;
	setp.gt.f64 	%p14, %fd3, 0d7F0D2A1BE4048F90;
	selp.f64 	%fd123, %fd122, %fd31, %p14;
	mul.rn.f64 	%fd124, %fd119, %fd123;
	neg.f64 	%fd125, %fd124;
	fma.rn.f64 	%fd126, %fd119, %fd123, %fd125;
	fma.rn.f64 	%fd127, %fd121, %fd123, %fd126;
	add.f64 	%fd8, %fd124, %fd127;
	sub.f64 	%fd128, %fd124, %fd8;
	add.f64 	%fd9, %fd128, %fd127;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r13}, %fd8;
	}
	setp.lt.u32 	%p15, %r13, 1082535491;
	setp.lt.s32 	%p16, %r13, -1064875759;
	or.pred  	%p17, %p15, %p16;
	@%p17 bra 	BB8_15;

	setp.lt.s32 	%p18, %r13, 0;
	selp.f64 	%fd129, 0d0000000000000000, %fd2, %p18;
	abs.f64 	%fd130, %fd8;
	setp.gtu.f64 	%p19, %fd130, %fd2;
	add.f64 	%fd131, %fd8, %fd8;
	selp.f64 	%fd171, %fd131, %fd129, %p19;
	bra.uni 	BB8_18;

BB8_15:
	mov.f64 	%fd169, 0d3FF0000000000000;
	mul.f64 	%fd132, %fd8, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd133, %fd132;
	cvt.rzi.s32.f64 	%r14, %fd133;
	mov.f64 	%fd134, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd135, %fd133, %fd134, %fd8;
	mov.f64 	%fd136, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd137, %fd133, %fd136, %fd135;
	mov.f64 	%fd138, 0d3E928A27E30F5561;
	mov.f64 	%fd139, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd140, %fd139, %fd137, %fd138;
	mov.f64 	%fd141, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd142, %fd140, %fd137, %fd141;
	mov.f64 	%fd143, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd144, %fd142, %fd137, %fd143;
	mov.f64 	%fd145, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd146, %fd144, %fd137, %fd145;
	mov.f64 	%fd147, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd148, %fd146, %fd137, %fd147;
	mov.f64 	%fd149, 0d3F8111111111A24E;
	fma.rn.f64 	%fd150, %fd148, %fd137, %fd149;
	mov.f64 	%fd151, 0d3FA555555555211D;
	fma.rn.f64 	%fd152, %fd150, %fd137, %fd151;
	mov.f64 	%fd153, 0d3FC5555555555530;
	fma.rn.f64 	%fd154, %fd152, %fd137, %fd153;
	mov.f64 	%fd155, 0d3FE0000000000005;
	fma.rn.f64 	%fd156, %fd154, %fd137, %fd155;
	fma.rn.f64 	%fd158, %fd156, %fd137, %fd169;
	fma.rn.f64 	%fd11, %fd158, %fd137, %fd169;
	shl.b32 	%r15, %r14, 20;
	add.s32 	%r16, %r15, 1072693248;
	abs.s32 	%r25, %r14;
	setp.lt.s32 	%p20, %r25, 1021;
	@%p20 bra 	BB8_17;

	add.s32 	%r26, %r15, 1130364928;
	setp.lt.s32 	%p21, %r14, 0;
	mov.u32 	%r27, 0;
	selp.b32 	%r28, %r26, %r16, %p21;
	shr.s32 	%r29, %r14, 31;
	add.s32 	%r30, %r29, 1073741824;
	and.b32  	%r31, %r30, -57671680;
	add.s32 	%r32, %r28, -1048576;
	mov.b64 	%fd159, {%r27, %r31};
	mul.f64 	%fd160, %fd11, %fd159;
	mov.b64 	%fd161, {%r27, %r32};
	mul.f64 	%fd171, %fd160, %fd161;
	bra.uni 	BB8_18;

BB8_17:
	mov.u32 	%r33, 0;
	mov.b64 	%fd162, {%r33, %r16};
	mul.f64 	%fd171, %fd162, %fd11;

BB8_18:
	abs.f64 	%fd163, %fd171;
	setp.eq.f64 	%p22, %fd163, %fd2;
	@%p22 bra 	BB8_20;

	fma.rn.f64 	%fd171, %fd171, %fd9, %fd171;

BB8_20:
	ld.param.f64 	%fd168, [_RTOR_param_0];
	setp.eq.f64 	%p23, %fd4, 0d3FF0000000000000;
	setp.lt.f64 	%p24, %fd168, 0d0000000000000000;
	and.pred  	%p25, %p24, %p23;
	mov.b64 	%rd2, %fd171;
	xor.b64  	%rd3, %rd2, -9223372036854775808;
	mov.b64 	%fd164, %rd3;
	selp.f64 	%fd173, %fd164, %fd171, %p25;
	bra.uni 	BB8_33;

BB8_21:
	mov.u64 	%rd4, -2251799813685248;
	mov.b64 	%fd173, %rd4;
	bra.uni 	BB8_33;

BB8_22:
	setp.lt.f64 	%p26, %fd31, 0d0000000000000000;
	@%p26 bra 	BB8_24;

	neg.f64 	%fd172, %fd30;
	bra.uni 	BB8_25;

BB8_24:
	mov.f64 	%fd165, 0dBFF0000000000000;
	div.rn.f64 	%fd172, %fd165, %fd30;

BB8_25:
	mov.b64 	%rd5, %fd172;
	xor.b64  	%rd6, %rd5, -9223372036854775808;
	mov.b64 	%fd166, %rd6;
	setp.eq.f64 	%p27, %fd4, 0d3FF0000000000000;
	selp.f64 	%fd173, %fd166, %fd172, %p27;
	bra.uni 	BB8_33;

BB8_26:
	setp.eq.f64 	%p28, %fd4, 0d3FF0000000000000;
	selp.f64 	%fd173, %fd30, 0d0000000000000000, %p28;
	setp.geu.f64 	%p29, %fd31, 0d0000000000000000;
	@%p29 bra 	BB8_33;

	rcp.rn.f64 	%fd173, %fd173;
	bra.uni 	BB8_33;

BB8_28:
	setp.eq.f64 	%p30, %fd30, 0dBFF0000000000000;
	mov.f64 	%fd173, 0d3FF0000000000000;
	@%p30 bra 	BB8_33;

	setp.gt.f64 	%p31, %fd1, 0d3FF0000000000000;
	selp.f64 	%fd173, %fd2, 0d0000000000000000, %p31;
	setp.geu.f64 	%p32, %fd31, 0d0000000000000000;
	@%p32 bra 	BB8_33;

	rcp.rn.f64 	%fd173, %fd173;
	bra.uni 	BB8_33;

BB8_31:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r34}, %fd31;
	}
	setp.lt.s32 	%p33, %r34, 0;
	selp.f64 	%fd173, 0d0000000000000000, %fd2, %p33;
	bra.uni 	BB8_33;

BB8_32:
	add.f64 	%fd173, %fd30, %fd31;

BB8_33:
	st.param.f64	[func_retval0+0], %fd173;
	ret;
}

.visible .func  (.param .b64 func_retval0) _RTON(
	.param .b64 _RTON_param_0,
	.param .b32 _RTON_param_1
)
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<7>;
	.reg .f64 	%fd<14>;


	ld.param.f64 	%fd12, [_RTON_param_0];
	ld.param.u32 	%r4, [_RTON_param_1];
	abs.s32 	%r5, %r4;
	{
	.reg .b32 temp;
	and.b32	 temp, %r5, 1;
	setp.b32.eq 	 %p1, temp, 1;
	}
	not.pred 	%p2, %p1;
	mul.f64 	%fd10, %fd12, 0d3FF0000000000000;
	selp.f64 	%fd13, 0d3FF0000000000000, %fd10, %p2;
	shr.u32 	%r6, %r5, 1;
	setp.eq.s32 	%p3, %r6, 0;
	@%p3 bra 	BB9_2;

BB9_1:
	{
	.reg .b32 temp;
	and.b32	 temp, %r6, 1;
	setp.b32.eq 	 %p4, temp, 1;
	}
	not.pred 	%p5, %p4;
	mul.f64 	%fd12, %fd12, %fd12;
	mul.f64 	%fd11, %fd13, %fd12;
	selp.f64 	%fd13, %fd13, %fd11, %p5;
	shr.u32 	%r6, %r6, 1;
	setp.ne.s32 	%p6, %r6, 0;
	@%p6 bra 	BB9_1;

BB9_2:
	setp.gt.s32 	%p7, %r4, -1;
	@%p7 bra 	BB9_4;

	rcp.rn.f64 	%fd13, %fd13;

BB9_4:
	st.param.f64	[func_retval0+0], %fd13;
	ret;
}

.visible .func  (.param .b64 func_retval0) _RTOI(
	.param .b64 _RTOI_param_0,
	.param .b64 _RTOI_param_1
)
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<7>;
	.reg .f64 	%fd<14>;


	ld.param.f64 	%fd12, [_RTOI_param_0];
	ld.param.u32 	%r1, [_RTOI_param_1];
	abs.s32 	%r5, %r1;
	{
	.reg .b32 temp;
	and.b32	 temp, %r5, 1;
	setp.b32.eq 	 %p1, temp, 1;
	}
	not.pred 	%p2, %p1;
	mul.f64 	%fd10, %fd12, 0d3FF0000000000000;
	selp.f64 	%fd13, 0d3FF0000000000000, %fd10, %p2;
	shr.u32 	%r6, %r5, 1;
	setp.eq.s32 	%p3, %r6, 0;
	@%p3 bra 	BB10_2;

BB10_1:
	{
	.reg .b32 temp;
	and.b32	 temp, %r6, 1;
	setp.b32.eq 	 %p4, temp, 1;
	}
	not.pred 	%p5, %p4;
	mul.f64 	%fd12, %fd12, %fd12;
	mul.f64 	%fd11, %fd13, %fd12;
	selp.f64 	%fd13, %fd13, %fd11, %p5;
	shr.u32 	%r6, %r6, 1;
	setp.ne.s32 	%p6, %r6, 0;
	@%p6 bra 	BB10_1;

BB10_2:
	setp.gt.s32 	%p7, %r1, -1;
	@%p7 bra 	BB10_4;

	rcp.rn.f64 	%fd13, %fd13;

BB10_4:
	st.param.f64	[func_retval0+0], %fd13;
	ret;
}

.visible .func  (.param .b32 func_retval0) asinf(
	.param .b32 asinf_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<27>;


	ld.param.f32 	%f1, [asinf_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32 	%p1, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	mov.f32 	%f20, 0f3FC90FDB;
	mov.f32 	%f21, 0fC0000000;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	selp.f32 	%f23, %f22, %f19, %p1;
	mov.u32 	%r1, 2139095040;
	mov.b32 	%f24, %r1;
	setp.gtu.f32 	%p2, %f23, %f24;
	mov.b32 	%r2, %f23;
	mov.b32 	%r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f25, %r5;
	selp.f32 	%f26, %f23, %f25, %p2;
	st.param.f32	[func_retval0+0], %f26;
	ret;
}

.visible .func  (.param .b64 func_retval0) asin(
	.param .b64 asin_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<11>;
	.reg .f64 	%fd<71>;


	ld.param.f64 	%fd6, [asin_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd6;
	}
	abs.f64 	%fd1, %fd6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	setp.lt.s32 	%p1, %r2, 1071801958;
	@%p1 bra 	BB12_3;

	mov.f64 	%fd7, 0d3FE0000000000000;
	mov.f64 	%fd8, 0dBFE0000000000000;
	fma.rn.f64 	%fd9, %fd8, %fd1, %fd7;
	sqrt.rn.f64 	%fd10, %fd9;
	mov.f64 	%fd11, 0dBFB3823B180754AF;
	mov.f64 	%fd12, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd13, %fd12, %fd9, %fd11;
	mov.f64 	%fd14, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd15, %fd13, %fd9, %fd14;
	mov.f64 	%fd16, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd17, %fd15, %fd9, %fd16;
	mov.f64 	%fd18, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd19, %fd17, %fd9, %fd18;
	mov.f64 	%fd20, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd21, %fd19, %fd9, %fd20;
	mov.f64 	%fd22, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd23, %fd21, %fd9, %fd22;
	mov.f64 	%fd24, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd25, %fd23, %fd9, %fd24;
	mov.f64 	%fd26, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd27, %fd25, %fd9, %fd26;
	mov.f64 	%fd28, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd29, %fd27, %fd9, %fd28;
	mov.f64 	%fd30, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd31, %fd29, %fd9, %fd30;
	mov.f64 	%fd32, 0d3FB333333320F91B;
	fma.rn.f64 	%fd33, %fd31, %fd9, %fd32;
	mov.f64 	%fd34, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd35, %fd33, %fd9, %fd34;
	mul.f64 	%fd36, %fd35, %fd9;
	mul.f64 	%fd37, %fd10, 0dC000000000000000;
	mov.f64 	%fd38, 0d3C91A62633145C07;
	fma.rn.f64 	%fd39, %fd37, %fd36, %fd38;
	fma.rn.f64 	%fd40, %fd10, 0dC000000000000000, 0d3FE921FB54442D18;
	add.f64 	%fd41, %fd40, %fd39;
	add.f64 	%fd70, %fd41, 0d3FE921FB54442D18;
	setp.gt.s32 	%p2, %r1, 1072693247;
	@%p2 bra 	BB12_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd70;
	}
	and.b32  	%r4, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd70;
	}
	or.b32  	%r6, %r5, %r4;
	mov.b64 	%fd70, {%r3, %r6};
	bra.uni 	BB12_4;

BB12_3:
	mul.f64 	%fd42, %fd1, %fd1;
	mov.f64 	%fd43, 0dBFB3823B180754AF;
	mov.f64 	%fd44, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd45, %fd44, %fd42, %fd43;
	mov.f64 	%fd46, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd47, %fd45, %fd42, %fd46;
	mov.f64 	%fd48, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd49, %fd47, %fd42, %fd48;
	mov.f64 	%fd50, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd51, %fd49, %fd42, %fd50;
	mov.f64 	%fd52, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd53, %fd51, %fd42, %fd52;
	mov.f64 	%fd54, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd55, %fd53, %fd42, %fd54;
	mov.f64 	%fd56, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd57, %fd55, %fd42, %fd56;
	mov.f64 	%fd58, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd59, %fd57, %fd42, %fd58;
	mov.f64 	%fd60, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd61, %fd59, %fd42, %fd60;
	mov.f64 	%fd62, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd63, %fd61, %fd42, %fd62;
	mov.f64 	%fd64, 0d3FB333333320F91B;
	fma.rn.f64 	%fd65, %fd63, %fd42, %fd64;
	mov.f64 	%fd66, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd67, %fd65, %fd42, %fd66;
	mul.f64 	%fd68, %fd67, %fd42;
	fma.rn.f64 	%fd69, %fd68, %fd1, %fd1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7, %temp}, %fd69;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd69;
	}
	and.b32  	%r9, %r1, -2147483648;
	or.b32  	%r10, %r8, %r9;
	mov.b64 	%fd70, {%r7, %r10};

BB12_4:
	st.param.f64	[func_retval0+0], %fd70;
	ret;
}

.visible .func  (.param .b32 func_retval0) atanf(
	.param .b32 atanf_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<27>;


	ld.param.f32 	%f4, [atanf_param_0];
	abs.f32 	%f1, %f4;
	setp.leu.f32 	%p1, %f1, 0f3F800000;
	mov.f32 	%f26, %f1;
	@%p1 bra 	BB13_2;

	rcp.rn.f32 	%f2, %f1;
	mov.f32 	%f26, %f2;

BB13_2:
	mov.f32 	%f3, %f26;
	mul.rn.f32 	%f5, %f3, %f3;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f10, %f5;
	mul.f32 	%f12, %f11, %f3;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f3;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32 	%p2, %f1, 0f3F800000;
	selp.f32 	%f22, %f21, %f19, %p2;
	mov.u32 	%r1, 2139095040;
	mov.b32 	%f23, %r1;
	setp.gtu.f32 	%p3, %f1, %f23;
	mov.b32 	%r2, %f22;
	mov.b32 	%r3, %f4;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f24, %r5;
	selp.f32 	%f25, %f22, %f24, %p3;
	st.param.f32	[func_retval0+0], %f25;
	ret;
}

.visible .func  (.param .b64 func_retval0) atan(
	.param .b64 atan_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<2>;
	.reg .f64 	%fd<58>;


	ld.param.f64 	%fd4, [atan_param_0];
	abs.f64 	%fd1, %fd4;
	setp.leu.f64 	%p1, %fd1, 0d3FF0000000000000;
	mov.f64 	%fd57, %fd1;
	@%p1 bra 	BB14_2;

	
	cvt.rn.f32.f64     %f1,%fd1;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd6,%f2;
	
	neg.f64 	%fd7, %fd1;
	mov.f64 	%fd8, 0d3FF0000000000000;
	fma.rn.f64 	%fd9, %fd7, %fd6, %fd8;
	fma.rn.f64 	%fd10, %fd9, %fd9, %fd9;
	fma.rn.f64 	%fd11, %fd10, %fd6, %fd6;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd12, %rd1;
	setp.eq.f64 	%p2, %fd1, %fd12;
	selp.f64 	%fd2, 0d0000000000000000, %fd11, %p2;
	mov.f64 	%fd57, %fd2;

BB14_2:
	mov.f64 	%fd3, %fd57;
	mul.f64 	%fd13, %fd3, %fd3;
	mov.f64 	%fd14, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd15, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd16, %fd15, %fd13, %fd14;
	mov.f64 	%fd17, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd18, %fd16, %fd13, %fd17;
	mov.f64 	%fd19, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd20, %fd18, %fd13, %fd19;
	mov.f64 	%fd21, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd22, %fd20, %fd13, %fd21;
	mov.f64 	%fd23, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd24, %fd22, %fd13, %fd23;
	mov.f64 	%fd25, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd26, %fd24, %fd13, %fd25;
	mov.f64 	%fd27, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd28, %fd26, %fd13, %fd27;
	mov.f64 	%fd29, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd30, %fd28, %fd13, %fd29;
	mov.f64 	%fd31, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd32, %fd30, %fd13, %fd31;
	mov.f64 	%fd33, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd34, %fd32, %fd13, %fd33;
	mov.f64 	%fd35, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd36, %fd34, %fd13, %fd35;
	mov.f64 	%fd37, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd38, %fd36, %fd13, %fd37;
	mov.f64 	%fd39, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd40, %fd38, %fd13, %fd39;
	mov.f64 	%fd41, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd42, %fd40, %fd13, %fd41;
	mov.f64 	%fd43, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd44, %fd42, %fd13, %fd43;
	mov.f64 	%fd45, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd46, %fd44, %fd13, %fd45;
	mov.f64 	%fd47, 0d3FC99999999840D2;
	fma.rn.f64 	%fd48, %fd46, %fd13, %fd47;
	mov.f64 	%fd49, 0dBFD555555555544C;
	fma.rn.f64 	%fd50, %fd48, %fd13, %fd49;
	mul.f64 	%fd51, %fd50, %fd13;
	fma.rn.f64 	%fd52, %fd51, %fd3, %fd3;
	mov.f64 	%fd53, 0d3FF921FB54442D18;
	sub.f64 	%fd54, %fd53, %fd52;
	setp.gt.f64 	%p3, %fd1, 0d3FF0000000000000;
	selp.f64 	%fd55, %fd54, %fd52, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1, %temp}, %fd55;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd55;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd4;
	}
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b64 	%fd56, {%r1, %r5};
	st.param.f64	[func_retval0+0], %fd56;
	ret;
}

.visible .func  (.param .b32 func_retval0) atan2f(
	.param .b32 atan2f_param_0,
	.param .b32 atan2f_param_1
)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<39>;


	ld.param.f32 	%f8, [atan2f_param_0];
	ld.param.f32 	%f9, [atan2f_param_1];
	abs.f32 	%f1, %f9;
	abs.f32 	%f2, %f8;
	setp.eq.f32 	%p1, %f2, 0f00000000;
	setp.eq.f32 	%p2, %f1, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	%r2, %f8;
	and.b32  	%r1, %r2, -2147483648;
	@%p3 bra 	BB15_4;

	mov.u32 	%r3, 2139095040;
	mov.b32 	%f3, %r3;
	setp.eq.f32 	%p4, %f2, %f3;
	setp.eq.f32 	%p5, %f1, %f3;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB15_3;

	min.f32 	%f10, %f2, %f1;
	max.f32 	%f11, %f2, %f1;
	div.rn.f32 	%f12, %f10, %f11;
	mul.rn.f32 	%f13, %f12, %f12;
	mov.f32 	%f14, 0fC0B59883;
	mov.f32 	%f15, 0fBF52C7EA;
	fma.rn.f32 	%f16, %f13, %f15, %f14;
	mov.f32 	%f17, 0fC0D21907;
	fma.rn.f32 	%f18, %f16, %f13, %f17;
	mul.f32 	%f19, %f18, %f13;
	mul.f32 	%f20, %f19, %f12;
	add.f32 	%f21, %f13, 0f41355DC0;
	mov.f32 	%f22, 0f41E6BD60;
	fma.rn.f32 	%f23, %f21, %f13, %f22;
	mov.f32 	%f24, 0f419D92C8;
	fma.rn.f32 	%f25, %f23, %f13, %f24;
	rcp.rn.f32 	%f26, %f25;
	fma.rn.f32 	%f27, %f20, %f26, %f12;
	mov.f32 	%f28, 0f3FC90FDB;
	sub.f32 	%f29, %f28, %f27;
	setp.gt.f32 	%p7, %f2, %f1;
	selp.f32 	%f30, %f29, %f27, %p7;
	mov.f32 	%f31, 0f40490FDB;
	sub.f32 	%f32, %f31, %f30;
	setp.lt.f32 	%p8, %f9, 0f00000000;
	selp.f32 	%f33, %f32, %f30, %p8;
	mov.b32 	%r4, %f33;
	or.b32  	%r5, %r1, %r4;
	mov.b32 	%f34, %r5;
	add.f32 	%f35, %f8, %f9;
	setp.gtu.f32 	%p9, %f35, %f3;
	selp.f32 	%f38, %f35, %f34, %p9;
	bra.uni 	BB15_5;

BB15_3:
	mov.b32 	%r6, %f9;
	setp.lt.s32 	%p10, %r6, 0;
	selp.f32 	%f36, 0f4016CBE4, 0f3F490FDB, %p10;
	mov.b32 	%r7, %f36;
	or.b32  	%r8, %r1, %r7;
	mov.b32 	%f38, %r8;
	bra.uni 	BB15_5;

BB15_4:
	mov.b32 	%r9, %f9;
	setp.lt.s32 	%p11, %r9, 0;
	selp.f32 	%f37, 0f40490FDB, 0f00000000, %p11;
	mov.b32 	%r10, %f37;
	or.b32  	%r11, %r1, %r10;
	mov.b32 	%f38, %r11;

BB15_5:
	st.param.f32	[func_retval0+0], %f38;
	ret;
}

.visible .func  (.param .b64 func_retval0) atan2(
	.param .b64 atan2_param_0,
	.param .b64 atan2_param_1
)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<8>;
	.reg .s64 	%rd<2>;
	.reg .f64 	%fd<65>;


	ld.param.f64 	%fd11, [atan2_param_0];
	ld.param.f64 	%fd12, [atan2_param_1];
	abs.f64 	%fd1, %fd11;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd2, %rd1;
	setp.gtu.f64 	%p1, %fd1, %fd2;
	@%p1 bra 	BB16_9;

	abs.f64 	%fd3, %fd12;
	setp.gtu.f64 	%p2, %fd3, %fd2;
	@%p2 bra 	BB16_9;

	setp.eq.f64 	%p3, %fd3, 0d0000000000000000;
	setp.eq.f64 	%p4, %fd1, 0d0000000000000000;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB16_7;

	abs.f64 	%fd13, %fd3;
	setp.neu.f64 	%p6, %fd13, %fd2;
	@%p6 bra 	BB16_5;

	abs.f64 	%fd14, %fd1;
	setp.eq.f64 	%p7, %fd14, %fd2;
	@%p7 bra 	BB16_6;

BB16_5:
	max.f64 	%fd15, %fd1, %fd3;
	min.f64 	%fd16, %fd1, %fd3;
	div.rn.f64 	%fd17, %fd16, %fd15;
	mul.f64 	%fd18, %fd17, %fd17;
	mov.f64 	%fd19, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd20, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd21, %fd20, %fd18, %fd19;
	mov.f64 	%fd22, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd23, %fd21, %fd18, %fd22;
	mov.f64 	%fd24, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd25, %fd23, %fd18, %fd24;
	mov.f64 	%fd26, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd27, %fd25, %fd18, %fd26;
	mov.f64 	%fd28, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd29, %fd27, %fd18, %fd28;
	mov.f64 	%fd30, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd31, %fd29, %fd18, %fd30;
	mov.f64 	%fd32, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd33, %fd31, %fd18, %fd32;
	mov.f64 	%fd34, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd35, %fd33, %fd18, %fd34;
	mov.f64 	%fd36, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd37, %fd35, %fd18, %fd36;
	mov.f64 	%fd38, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd39, %fd37, %fd18, %fd38;
	mov.f64 	%fd40, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd41, %fd39, %fd18, %fd40;
	mov.f64 	%fd42, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd43, %fd41, %fd18, %fd42;
	mov.f64 	%fd44, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd45, %fd43, %fd18, %fd44;
	mov.f64 	%fd46, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd47, %fd45, %fd18, %fd46;
	mov.f64 	%fd48, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd49, %fd47, %fd18, %fd48;
	mov.f64 	%fd50, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd51, %fd49, %fd18, %fd50;
	mov.f64 	%fd52, 0d3FC99999999840D2;
	fma.rn.f64 	%fd53, %fd51, %fd18, %fd52;
	mov.f64 	%fd54, 0dBFD555555555544C;
	fma.rn.f64 	%fd55, %fd53, %fd18, %fd54;
	mul.f64 	%fd56, %fd55, %fd18;
	fma.rn.f64 	%fd57, %fd56, %fd17, %fd17;
	mov.f64 	%fd58, 0d3FF921FB54442D18;
	sub.f64 	%fd59, %fd58, %fd57;
	setp.gt.f64 	%p8, %fd1, %fd3;
	selp.f64 	%fd60, %fd59, %fd57, %p8;
	mov.f64 	%fd61, 0d400921FB54442D18;
	sub.f64 	%fd62, %fd61, %fd60;
	setp.lt.f64 	%p9, %fd12, 0d0000000000000000;
	selp.f64 	%fd63, %fd62, %fd60, %p9;
	bra.uni 	BB16_8;

BB16_6:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd12;
	}
	setp.lt.s32 	%p10, %r1, 0;
	selp.f64 	 %fd63, 0d4002D97C7F3321D2, 0d3FE921FB54442D18, %p10;
	bra.uni 	BB16_8;

BB16_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd12;
	}
	setp.lt.s32 	%p11, %r2, 0;
	selp.f64 	 %fd63, 0d400921FB54442D18, 0d0000000000000000, %p11;

BB16_8:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd11;
	}
	and.b32  	%r4, %r3, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd63;
	}
	or.b32  	%r6, %r5, %r4;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7, %temp}, %fd63;
	}
	mov.b64 	%fd64, {%r7, %r6};
	bra.uni 	BB16_10;

BB16_9:
	add.f64 	%fd64, %fd11, %fd12;

BB16_10:
	st.param.f64	[func_retval0+0], %fd64;
	ret;
}

.visible .func  (.param .b32 func_retval0) sinf(
	.param .b32 sinf_param_0
)
{
	.local .align 4 .b8 	__local_depot17[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<15>;
	.reg .s32 	%r<92>;
	.reg .f32 	%f<49>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot17;
	ld.param.f32 	%f44, [sinf_param_0];
	add.u64 	%rd5, %SPL, 0;
	mov.u32 	%r27, 2139095040;
	mov.b32 	%f19, %r27;
	abs.f32 	%f20, %f44;
	setp.neu.f32 	%p1, %f20, %f19;
	@%p1 bra 	BB17_2;

	mov.f32 	%f21, 0f00000000;
	mul.rn.f32 	%f44, %f44, %f21;

BB17_2:
	mul.f32 	%f22, %f44, 0f3F22F983;
	cvt.rni.s32.f32 	%r91, %f22;
	cvt.rn.f32.s32 	%f23, %r91;
	neg.f32 	%f24, %f23;
	mov.f32 	%f25, 0f3FC90FDA;
	fma.rn.f32 	%f26, %f24, %f25, %f44;
	mov.f32 	%f27, 0f33A22168;
	fma.rn.f32 	%f28, %f24, %f27, %f26;
	mov.f32 	%f29, 0f27C234C5;
	fma.rn.f32 	%f45, %f24, %f29, %f28;
	abs.f32 	%f30, %f44;
	setp.leu.f32 	%p2, %f30, 0f47CE4780;
	@%p2 bra 	BB17_10;

	mov.b32 	%r2, %f44;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r29, %r3, 255;
	add.s32 	%r30, %r29, -128;
	shl.b32 	%r31, %r2, 8;
	or.b32  	%r4, %r31, -2147483648;
	shr.u32 	%r5, %r30, 5;
	mov.u32 	%r85, 0;
	mov.u64 	%rd11, 0;

BB17_4:
	.pragma "nounroll";
	mov.u64 	%rd7, __cudart_i2opi_f;
	add.s64 	%rd8, %rd7, %rd11;
	ld.const.u32 	%r32, [%rd8];
	mul.hi.u32 	%r34, %r32, %r4;
	mad.lo.s32 	%r35, %r32, %r4, %r85;
	setp.lt.u32 	%p3, %r35, %r85;
	selp.u32 	%r36, 1, 0, %p3;
	add.s32 	%r85, %r36, %r34;
	add.s64 	%rd9, %rd5, %rd11;
	st.local.u32 	[%rd9], %r35;
	add.s64 	%rd11, %rd11, 4;
	setp.ne.s64 	%p4, %rd11, 24;
	@%p4 bra 	BB17_4;

	and.b32  	%r88, %r2, -2147483648;
	st.local.u32 	[%rd5+24], %r85;
	mov.u32 	%r39, 6;
	sub.s32 	%r40, %r39, %r5;
	mul.wide.s32 	%rd10, %r40, 4;
	add.s64 	%rd4, %rd5, %rd10;
	ld.local.u32 	%r86, [%rd4];
	ld.local.u32 	%r87, [%rd4+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB17_7;

	mov.u32 	%r43, 32;
	sub.s32 	%r44, %r43, %r11;
	shr.u32 	%r45, %r87, %r44;
	shl.b32 	%r46, %r86, %r11;
	add.s32 	%r86, %r45, %r46;
	ld.local.u32 	%r47, [%rd4+-8];
	shr.u32 	%r49, %r47, %r44;
	shl.b32 	%r50, %r87, %r11;
	add.s32 	%r87, %r49, %r50;

BB17_7:
	shr.u32 	%r51, %r87, 30;
	shl.b32 	%r52, %r86, 2;
	add.s32 	%r89, %r51, %r52;
	shl.b32 	%r17, %r87, 2;
	shr.u32 	%r53, %r89, 31;
	shr.u32 	%r54, %r86, 30;
	add.s32 	%r55, %r53, %r54;
	neg.s32 	%r56, %r55;
	setp.eq.s32 	%p6, %r88, 0;
	selp.b32 	%r91, %r55, %r56, %p6;
	setp.eq.s32 	%p7, %r53, 0;
	mov.u32 	%r90, %r17;
	@%p7 bra 	BB17_9;

	not.b32 	%r57, %r89;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r58, 1, 0, %p8;
	add.s32 	%r89, %r58, %r57;
	xor.b32  	%r88, %r88, -2147483648;
	mov.u32 	%r90, %r19;

BB17_9:
	clz.b32 	%r59, %r89;
	setp.eq.s32 	%p9, %r59, 0;
	shl.b32 	%r60, %r89, %r59;
	mov.u32 	%r61, 32;
	sub.s32 	%r62, %r61, %r59;
	shr.u32 	%r63, %r90, %r62;
	add.s32 	%r64, %r63, %r60;
	selp.b32 	%r65, %r89, %r64, %p9;
	mul.lo.s32 	%r66, %r65, -921707870;
	mov.u32 	%r67, -921707870;
	mul.hi.u32 	%r68, %r65, %r67;
	setp.gt.s32 	%p10, %r68, 0;
	shl.b32 	%r69, %r68, 1;
	shr.u32 	%r70, %r66, 31;
	add.s32 	%r71, %r70, %r69;
	selp.b32 	%r72, %r71, %r68, %p10;
	selp.b32 	%r73, -1, 0, %p10;
	mov.u32 	%r74, 126;
	sub.s32 	%r75, %r74, %r59;
	add.s32 	%r76, %r75, %r73;
	shl.b32 	%r77, %r76, 23;
	add.s32 	%r78, %r72, 1;
	shr.u32 	%r79, %r78, 7;
	add.s32 	%r80, %r79, 1;
	shr.u32 	%r81, %r80, 1;
	add.s32 	%r82, %r81, %r77;
	or.b32  	%r83, %r82, %r88;
	mov.b32 	%f45, %r83;

BB17_10:
	mul.rn.f32 	%f6, %f45, %f45;
	and.b32  	%r26, %r91, 1;
	setp.eq.s32 	%p11, %r26, 0;
	@%p11 bra 	BB17_12;

	mov.f32 	%f31, 0fBAB6061A;
	mov.f32 	%f32, 0f37CCF5CE;
	fma.rn.f32 	%f46, %f32, %f6, %f31;
	bra.uni 	BB17_13;

BB17_12:
	mov.f32 	%f33, 0f3C08839E;
	mov.f32 	%f34, 0fB94CA1F9;
	fma.rn.f32 	%f46, %f34, %f6, %f33;

BB17_13:
	@%p11 bra 	BB17_15;

	mov.f32 	%f35, 0f3D2AAAA5;
	fma.rn.f32 	%f36, %f46, %f6, %f35;
	mov.f32 	%f37, 0fBF000000;
	fma.rn.f32 	%f47, %f36, %f6, %f37;
	bra.uni 	BB17_16;

BB17_15:
	mov.f32 	%f38, 0fBE2AAAA3;
	fma.rn.f32 	%f39, %f46, %f6, %f38;
	mov.f32 	%f40, 0f00000000;
	fma.rn.f32 	%f47, %f39, %f6, %f40;

BB17_16:
	fma.rn.f32 	%f48, %f47, %f45, %f45;
	@%p11 bra 	BB17_18;

	mov.f32 	%f41, 0f3F800000;
	fma.rn.f32 	%f48, %f47, %f6, %f41;

BB17_18:
	and.b32  	%r84, %r91, 2;
	setp.eq.s32 	%p14, %r84, 0;
	@%p14 bra 	BB17_20;

	mov.f32 	%f42, 0f00000000;
	mov.f32 	%f43, 0fBF800000;
	fma.rn.f32 	%f48, %f48, %f43, %f42;

BB17_20:
	st.param.f32	[func_retval0+0], %f48;
	ret;
}

.visible .func  (.param .b64 func_retval0) _SIN(
	.param .b64 _SIN_param_0
)
{
	.local .align 4 .b8 	__local_depot18[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .s32 	%r<16>;
	.reg .s64 	%rd<8>;
	.reg .f64 	%fd<44>;


	mov.u64 	%SPL, __local_depot18;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd41, [_SIN_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd14, %rd3;
	abs.f64 	%fd15, %fd41;
	setp.neu.f64 	%p1, %fd15, %fd14;
	@%p1 bra 	BB18_2;

	mov.f64 	%fd16, 0d0000000000000000;
	mul.rn.f64 	%fd41, %fd41, %fd16;

BB18_2:
	mul.f64 	%fd17, %fd41, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r15, %fd17;
	st.local.u32 	[%rd1], %r15;
	cvt.rn.f64.s32 	%fd18, %r15;
	neg.f64 	%fd19, %fd18;
	mov.f64 	%fd20, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd21, %fd19, %fd20, %fd41;
	mov.f64 	%fd22, 0d3C91A62633145C00;
	fma.rn.f64 	%fd23, %fd19, %fd22, %fd21;
	mov.f64 	%fd24, 0d397B839A252049C0;
	fma.rn.f64 	%fd42, %fd19, %fd24, %fd23;
	abs.f64 	%fd25, %fd41;
	setp.leu.f64 	%p2, %fd25, 0d41E0000000000000;
	@%p2 bra 	BB18_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd41;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd42, [retval0+0];
	}
	
	ld.local.u32 	%r15, [%rd1];

BB18_4:
	shl.b32 	%r6, %r15, 3;
	and.b32  	%r7, %r6, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r15, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	not.pred 	%p4, %p3;
	selp.f64 	 %fd26, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p4;
	mul.wide.u32 	%rd5, %r7, 8;
	mov.u64 	%rd6, __cudart_sin_cos_coeffs;
	add.s64 	%rd7, %rd5, %rd6;
	ld.const.f64 	%fd27, [%rd7+8];
	mul.rn.f64 	%fd6, %fd42, %fd42;
	fma.rn.f64 	%fd28, %fd26, %fd6, %fd27;
	ld.const.f64 	%fd29, [%rd7+16];
	fma.rn.f64 	%fd30, %fd28, %fd6, %fd29;
	ld.const.f64 	%fd31, [%rd7+24];
	fma.rn.f64 	%fd32, %fd30, %fd6, %fd31;
	ld.const.f64 	%fd33, [%rd7+32];
	fma.rn.f64 	%fd34, %fd32, %fd6, %fd33;
	ld.const.f64 	%fd35, [%rd7+40];
	fma.rn.f64 	%fd36, %fd34, %fd6, %fd35;
	ld.const.f64 	%fd37, [%rd7+48];
	fma.rn.f64 	%fd7, %fd36, %fd6, %fd37;
	fma.rn.f64 	%fd43, %fd7, %fd42, %fd42;
	@%p4 bra 	BB18_6;

	mov.f64 	%fd38, 0d3FF0000000000000;
	fma.rn.f64 	%fd43, %fd7, %fd6, %fd38;

BB18_6:
	and.b32  	%r14, %r15, 2;
	setp.eq.s32 	%p5, %r14, 0;
	@%p5 bra 	BB18_8;

	mov.f64 	%fd39, 0d0000000000000000;
	mov.f64 	%fd40, 0dBFF0000000000000;
	fma.rn.f64 	%fd43, %fd43, %fd40, %fd39;

BB18_8:
	st.param.f64	[func_retval0+0], %fd43;
	ret;
}

.visible .func  (.param .b32 func_retval0) isnormal64(
	.param .b64 isnormal64_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [isnormal64_param_0];
	shr.u64 	%rd2, %rd1, 52;
	and.b64  	%rd3, %rd2, 2047;
	setp.ne.s64 	%p1, %rd3, 0;
	setp.ne.s64 	%p2, %rd3, 2047;
	and.pred  	%p3, %p1, %p2;
	selp.u32 	%r1, 1, 0, %p3;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.visible .func  (.param .b32 func_retval0) isnormal32(
	.param .b32 isnormal32_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<5>;


	ld.param.u32 	%r1, [isnormal32_param_0];
	shr.u32 	%r2, %r1, 23;
	and.b32  	%r3, %r2, 255;
	setp.ne.s32 	%p1, %r3, 0;
	setp.ne.s32 	%p2, %r3, 255;
	and.pred  	%p3, %p1, %p2;
	selp.u32 	%r4, 1, 0, %p3;
	st.param.b32	[func_retval0+0], %r4;
	ret;
}

.visible .func  (.param .b32 func_retval0) _leadz4(
	.param .b32 _leadz4_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<21>;


	ld.param.u32 	%r1, [_leadz4_param_0];
	shr.u32 	%r2, %r1, 16;
	setp.eq.s32 	%p1, %r2, 0;
	selp.b32 	%r3, %r1, %r2, %p1;
	selp.b32 	%r4, 16, 0, %p1;
	shr.u32 	%r5, %r3, 8;
	setp.eq.s32 	%p2, %r5, 0;
	selp.b32 	%r6, %r3, %r5, %p2;
	selp.b32 	%r7, 8, %r4, %p2;
	shr.u32 	%r8, %r6, 4;
	setp.eq.s32 	%p3, %r8, 0;
	selp.b32 	%r9, %r6, %r8, %p3;
	selp.b32 	%r10, 4, %r7, %p3;
	shr.u32 	%r11, %r9, 2;
	setp.eq.s32 	%p4, %r11, 0;
	selp.b32 	%r12, %r9, %r11, %p4;
	selp.b32 	%r13, 2, %r10, %p4;
	setp.lt.u32 	%p5, %r12, 2;
	selp.u32 	%r14, 1, 0, %p5;
	setp.eq.s32 	%p6, %r12, 0;
	selp.u32 	%r15, 1, 0, %p6;
	or.b32  	%r16, %r7, %r4;
	or.b32  	%r17, %r16, %r10;
	or.b32  	%r18, %r17, %r13;
	add.s32 	%r19, %r15, %r18;
	add.s32 	%r20, %r19, %r14;
	st.param.b32	[func_retval0+0], %r20;
	ret;
}

.visible .func  (.param .b64 func_retval0) _leadz8(
	.param .b64 _leadz8_param_0
)
{
	.reg .pred 	%p<8>;
	.reg .s64 	%rd<25>;


	ld.param.u64 	%rd1, [_leadz8_param_0];
	shr.u64 	%rd2, %rd1, 32;
	setp.eq.s64 	%p1, %rd2, 0;
	selp.b64 	%rd3, %rd1, %rd2, %p1;
	selp.b64 	%rd4, 32, 0, %p1;
	shr.u64 	%rd5, %rd3, 16;
	setp.eq.s64 	%p2, %rd5, 0;
	selp.b64 	%rd6, %rd3, %rd5, %p2;
	selp.b64 	%rd7, 16, %rd4, %p2;
	shr.u64 	%rd8, %rd6, 8;
	setp.eq.s64 	%p3, %rd8, 0;
	selp.b64 	%rd9, %rd6, %rd8, %p3;
	selp.b64 	%rd10, 8, %rd7, %p3;
	shr.u64 	%rd11, %rd9, 4;
	setp.eq.s64 	%p4, %rd11, 0;
	selp.b64 	%rd12, %rd9, %rd11, %p4;
	selp.b64 	%rd13, 4, %rd10, %p4;
	shr.u64 	%rd14, %rd12, 2;
	setp.eq.s64 	%p5, %rd14, 0;
	selp.b64 	%rd15, %rd12, %rd14, %p5;
	selp.b64 	%rd16, 2, %rd13, %p5;
	setp.lt.u64 	%p6, %rd15, 2;
	selp.u64 	%rd17, 1, 0, %p6;
	setp.eq.s64 	%p7, %rd15, 0;
	selp.u64 	%rd18, 1, 0, %p7;
	or.b64  	%rd19, %rd7, %rd4;
	or.b64  	%rd20, %rd19, %rd10;
	or.b64  	%rd21, %rd20, %rd13;
	or.b64  	%rd22, %rd21, %rd16;
	add.s64 	%rd23, %rd18, %rd22;
	add.s64 	%rd24, %rd23, %rd17;
	st.param.b64	[func_retval0+0], %rd24;
	ret;
}

.visible .func  (.param .b32 func_retval0) _FRACTION_4(
	.param .b32 _FRACTION_4_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<14>;
	.reg .f32 	%f<9>;


	ld.param.f32 	%f3, [_FRACTION_4_param_0];
	setp.eq.f32 	%p1, %f3, 0f00000000;
	mov.f32 	%f4, 0f00000000;
	mov.f32 	%f8, %f4;
	@%p1 bra 	BB23_6;

	setp.eq.f32 	%p2, %f3, 0f4EFF0000;
	mov.f32 	%f5, 0f4EFF8000;
	mov.f32 	%f8, %f5;
	@%p2 bra 	BB23_6;

	abs.f32 	%f6, %f3;
	mov.u32 	%r5, 2139095040;
	mov.b32 	%f7, %r5;
	setp.gtu.f32 	%p3, %f6, %f7;
	mov.f32 	%f8, %f3;
	@%p3 bra 	BB23_6;

	mov.b32 	 %r6, %f3;
	and.b32  	%r1, %r6, -2147483648;
	and.b32  	%r13, %r6, 8388607;
	and.b32  	%r7, %r6, 2139095040;
	setp.ne.s32 	%p4, %r7, 0;
	@%p4 bra 	BB23_5;

	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b32 retval0;
	call.uni (retval0), 
	_leadz4, 
	(
	param0
	);
	ld.param.b32	%r8, [retval0+0];
	}
	
	add.s32 	%r9, %r8, -8;
	shl.b32 	%r10, %r13, %r9;
	and.b32  	%r13, %r10, 8388607;

BB23_5:
	or.b32  	%r11, %r1, %r13;
	or.b32  	%r12, %r11, 1056964608;
	mov.b32 	 %f8, %r12;

BB23_6:
	st.param.f32	[func_retval0+0], %f8;
	ret;
}

.visible .func  (.param .b64 func_retval0) _FRACTION(
	.param .b64 _FRACTION_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<14>;
	.reg .f64 	%fd<9>;


	ld.param.f64 	%fd3, [_FRACTION_param_0];
	setp.eq.f64 	%p1, %fd3, 0d0000000000000000;
	mov.f64 	%fd4, 0d0000000000000000;
	mov.f64 	%fd8, %fd4;
	@%p1 bra 	BB24_6;

	setp.eq.f64 	%p2, %fd3, 0d43DFFC0000000000;
	mov.f64 	%fd5, 0d43DFFE0000000000;
	mov.f64 	%fd8, %fd5;
	@%p2 bra 	BB24_6;

	abs.f64 	%fd6, %fd3;
	mov.u64 	%rd5, 9218868437227405312;
	mov.b64 	%fd7, %rd5;
	setp.gtu.f64 	%p3, %fd6, %fd7;
	mov.f64 	%fd8, %fd3;
	@%p3 bra 	BB24_6;

	mov.b64 	 %rd6, %fd3;
	and.b64  	%rd1, %rd6, -9223372036854775808;
	and.b64  	%rd13, %rd6, 4503599627370495;
	and.b64  	%rd7, %rd6, 9218868437227405312;
	setp.ne.s64 	%p4, %rd7, 0;
	@%p4 bra 	BB24_5;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 retval0;
	call.uni (retval0), 
	_leadz8, 
	(
	param0
	);
	ld.param.b64	%rd8, [retval0+0];
	}
	
	add.s64 	%rd9, %rd8, 4294967285;
	cvt.u32.u64 	%r1, %rd9;
	shl.b64 	%rd10, %rd13, %r1;
	and.b64  	%rd13, %rd10, 4503599627370495;

BB24_5:
	or.b64  	%rd11, %rd1, %rd13;
	or.b64  	%rd12, %rd11, 4602678819172646912;
	mov.b64 	 %fd8, %rd12;

BB24_6:
	st.param.f64	[func_retval0+0], %fd8;
	ret;
}

.visible .func  (.param .b64 func_retval0) _SPACING(
	.param .b64 _SPACING_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s64 	%rd<3>;
	.reg .f64 	%fd<8>;


	ld.param.f64 	%fd3, [_SPACING_param_0];
	setp.eq.f64 	%p1, %fd3, 0d0000000000000000;
	mov.f64 	%fd7, 0d0010000000000000;
	@%p1 bra 	BB25_2;

	mul.f64 	%fd5, %fd3, 0d3CB0000000000000;
	mov.b64 	 %rd1, %fd5;
	and.b64  	%rd2, %rd1, 9218868437227405312;
	mov.b64 	 %fd6, %rd2;
	setp.eq.f64 	%p2, %fd6, 0d0000000000000000;
	selp.f64 	%fd7, 0d0010000000000000, %fd6, %p2;

BB25_2:
	st.param.f64	[func_retval0+0], %fd7;
	ret;
}

.visible .func  (.param .b32 func_retval0) _SPACING_4(
	.param .b32 _SPACING_4_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<8>;


	ld.param.f32 	%f3, [_SPACING_4_param_0];
	setp.eq.f32 	%p1, %f3, 0f00000000;
	mov.f32 	%f7, 0f00800000;
	@%p1 bra 	BB26_2;

	mul.f32 	%f5, %f3, 0f34000000;
	mov.b32 	 %r1, %f5;
	and.b32  	%r2, %r1, 2139095040;
	mov.b32 	 %f6, %r2;
	setp.eq.f32 	%p2, %f6, 0f00000000;
	selp.f32 	%f7, 0f00800000, %f6, %p2;

BB26_2:
	st.param.f32	[func_retval0+0], %f7;
	ret;
}

.visible .func  (.param .b32 func_retval0) _SCALE_4(
	.param .b32 _SCALE_4_param_0,
	.param .b32 _SCALE_4_param_1
)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<42>;
	.reg .f32 	%f<14>;


	ld.param.f32 	%f9, [_SCALE_4_param_0];
	ld.param.u32 	%r15, [_SCALE_4_param_1];
	setp.eq.s32 	%p1, %r15, 0;
	mov.f32 	%f13, %f9;
	@%p1 bra 	BB27_16;

	setp.eq.f32 	%p2, %f9, 0f00000000;
	mov.f32 	%f10, 0f00000000;
	mov.f32 	%f13, %f10;
	@%p2 bra 	BB27_16;

	mov.b32 	 %r1, %f9;
	and.b32  	%r2, %r1, 2139095040;
	and.b32  	%r3, %r1, 8388607;
	and.b32  	%r4, %r1, -2147483648;
	setp.eq.s32 	%p3, %r2, 0;
	@%p3 bra 	BB27_8;

	shr.u32 	%r16, %r2, 23;
	add.s32 	%r5, %r16, %r15;
	setp.gt.s32 	%p4, %r5, 254;
	@%p4 bra 	BB27_7;

	setp.lt.s32 	%p5, %r5, 1;
	@%p5 bra 	BB27_6;

	shl.b32 	%r17, %r5, 23;
	and.b32  	%r18, %r1, -2139095041;
	or.b32  	%r19, %r18, %r17;
	mov.b32 	 %f13, %r19;
	bra.uni 	BB27_16;

BB27_6:
	or.b32  	%r20, %r3, 8388608;
	mov.u32 	%r21, 1;
	sub.s32 	%r22, %r21, %r5;
	shr.u32 	%r23, %r20, %r22;
	mov.b32 	 %f13, %r23;
	bra.uni 	BB27_16;

BB27_7:
	or.b32  	%r24, %r4, 2139095040;
	mov.b32 	 %f13, %r24;
	bra.uni 	BB27_16;

BB27_8:
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32	[param0+0], %r3;
	.param .b32 retval0;
	call.uni (retval0), 
	_leadz4, 
	(
	param0
	);
	ld.param.b32	%r6, [retval0+0];
	}
	
	setp.gt.s32 	%p6, %r15, 0;
	@%p6 bra 	BB27_10;

	neg.s32 	%r26, %r15;
	mov.u32 	%r40, 0;
	shr.u32 	%r27, %r3, %r26;
	not.b32 	%r28, %r15;
	mov.u32 	%r29, 1;
	shl.b32 	%r30, %r29, %r28;
	and.b32  	%r31, %r3, %r30;
	setp.ne.s32 	%p7, %r31, 0;
	setp.ne.s32 	%p8, %r15, 0;
	and.pred  	%p9, %p7, %p8;
	selp.u32 	%r32, 1, 0, %p9;
	add.s32 	%r41, %r32, %r27;
	bra.uni 	BB27_15;

BB27_10:
	add.s32 	%r8, %r6, -9;
	setp.gt.s32 	%p10, %r8, 0;
	@%p10 bra 	BB27_12;

	mov.b32 	 %f12, %r15;
	mov.u32 	%r39, 1;
	bra.uni 	BB27_14;

BB27_12:
	setp.ge.s32 	%p11, %r8, %r15;
	mov.f32 	%f12, 0f00000000;
	mov.u32 	%r39, %r15;
	@%p11 bra 	BB27_14;

	add.s32 	%r9, %r6, -8;
	sub.s32 	%r34, %r15, %r8;
	mov.b32 	 %f12, %r34;
	mov.u32 	%r39, %r9;

BB27_14:
	mov.b32 	 %r35, %f12;
	shl.b32 	%r40, %r35, 23;
	shl.b32 	%r41, %r3, %r39;

BB27_15:
	or.b32  	%r36, %r40, %r4;
	and.b32  	%r37, %r41, 8388607;
	or.b32  	%r38, %r36, %r37;
	mov.b32 	 %f13, %r38;

BB27_16:
	st.param.f32	[func_retval0+0], %f13;
	ret;
}

.visible .func  (.param .b64 func_retval0) _SCALE(
	.param .b64 _SCALE_param_0,
	.param .b32 _SCALE_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<13>;
	.reg .s64 	%rd<33>;
	.reg .f64 	%fd<18>;


	ld.param.f64 	%fd12, [_SCALE_param_0];
	ld.param.u32 	%r12, [_SCALE_param_1];
	setp.eq.s32 	%p1, %r12, 0;
	mov.f64 	%fd17, %fd12;
	@%p1 bra 	BB28_17;

	setp.eq.f64 	%p2, %fd12, 0d0000000000000000;
	mov.f64 	%fd13, 0d0000000000000000;
	mov.f64 	%fd17, %fd13;
	@%p2 bra 	BB28_17;

	cvt.s64.s32 	%rd1, %r12;
	mov.b64 	 %rd2, %fd12;
	and.b64  	%rd3, %rd2, 9218868437227405312;
	mov.b64 	 %fd16, %rd3;
	and.b64  	%rd4, %rd2, 4503599627370495;
	and.b64  	%rd5, %rd2, -9223372036854775808;
	setp.eq.s64 	%p3, %rd3, 0;
	@%p3 bra 	BB28_8;

	shr.u64 	%rd11, %rd3, 52;
	add.s64 	%rd6, %rd11, %rd1;
	setp.gt.s64 	%p4, %rd6, 2046;
	@%p4 bra 	BB28_7;

	setp.lt.s64 	%p5, %rd6, 1;
	@%p5 bra 	BB28_6;

	shl.b64 	%rd12, %rd6, 52;
	and.b64  	%rd13, %rd2, -9218868437227405313;
	or.b64  	%rd14, %rd13, %rd12;
	mov.b64 	 %fd17, %rd14;
	bra.uni 	BB28_17;

BB28_6:
	or.b64  	%rd15, %rd4, 4503599627370496;
	mov.u64 	%rd16, 1;
	sub.s64 	%rd17, %rd16, %rd6;
	cvt.u32.u64 	%r6, %rd17;
	shr.u64 	%rd18, %rd15, %r6;
	mov.b64 	 %fd17, %rd18;
	bra.uni 	BB28_17;

BB28_7:
	or.b64  	%rd19, %rd5, 9218868437227405312;
	mov.b64 	 %fd17, %rd19;
	bra.uni 	BB28_17;

BB28_8:
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	_leadz8, 
	(
	param0
	);
	ld.param.b64	%rd20, [retval0+0];
	}
	
	cvt.u32.u64 	%r1, %rd20;
	setp.gt.s32 	%p6, %r12, 0;
	@%p6 bra 	BB28_11;

	neg.s64 	%rd21, %rd1;
	cvt.u32.u64 	%r7, %rd21;
	shr.u64 	%rd32, %rd4, %r7;
	not.b32 	%r8, %r12;
	mov.u32 	%r9, 1;
	shl.b32 	%r10, %r9, %r8;
	cvt.s64.s32 	%rd22, %r10;
	and.b64  	%rd23, %rd22, %rd4;
	setp.eq.s64 	%p7, %rd23, 0;
	@%p7 bra 	BB28_16;

	add.s64 	%rd32, %rd32, 1;
	bra.uni 	BB28_16;

BB28_11:
	add.s32 	%r2, %r1, -12;
	setp.gt.s32 	%p8, %r2, 0;
	@%p8 bra 	BB28_13;

	mov.b64 	 %fd15, %rd1;
	mov.u32 	%r12, 1;
	bra.uni 	BB28_15;

BB28_13:
	setp.ge.s32 	%p9, %r2, %r12;
	mov.f64 	%fd15, 0d0000000000000000;
	@%p9 bra 	BB28_15;

	add.s32 	%r12, %r1, -11;
	cvt.s64.s32 	%rd24, %r2;
	sub.s64 	%rd25, %rd1, %rd24;
	mov.b64 	 %fd15, %rd25;

BB28_15:
	mov.b64 	 %rd26, %fd15;
	shl.b64 	%rd27, %rd26, 52;
	mov.b64 	 %fd16, %rd27;
	shl.b64 	%rd32, %rd4, %r12;

BB28_16:
	mov.b64 	 %rd28, %fd16;
	or.b64  	%rd29, %rd28, %rd5;
	and.b64  	%rd30, %rd32, 4503599627370495;
	or.b64  	%rd31, %rd29, %rd30;
	mov.b64 	 %fd17, %rd31;

BB28_17:
	st.param.f64	[func_retval0+0], %fd17;
	ret;
}

.visible .func  (.param .b64 func_retval0) _RRSPACING(
	.param .b64 _RRSPACING_param_0
)
{
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<3>;
	.reg .f64 	%fd<5>;


	ld.param.f64 	%fd1, [_RRSPACING_param_0];
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd1;
	.param .b64 retval0;
	call.uni (retval0), 
	_FRACTION, 
	(
	param0
	);
	ld.param.f64	%fd2, [retval0+0];
	}
	
	mov.b64 	 %rd1, %fd2;
	and.b64  	%rd2, %rd1, 9223372036854775807;
	mov.b64 	 %fd3, %rd2;
	mov.u32 	%r1, 53;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd3;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 retval0;
	call.uni (retval0), 
	_SCALE, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd4, [retval0+0];
	}
	
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}

.visible .func  (.param .b32 func_retval0) _RRSPACING_4(
	.param .b32 _RRSPACING_4_param_0
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<5>;


	ld.param.f32 	%f1, [_RRSPACING_4_param_0];
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	_FRACTION_4, 
	(
	param0
	);
	ld.param.f32	%f2, [retval0+0];
	}
	
	mov.b32 	 %r1, %f2;
	and.b32  	%r2, %r1, 2147483647;
	mov.b32 	 %f3, %r2;
	mov.u32 	%r3, 24;
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f3;
	.param .b32 param1;
	st.param.b32	[param1+0], %r3;
	.param .b32 retval0;
	call.uni (retval0), 
	_SCALE_4, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f4, [retval0+0];
	}
	
	st.param.f32	[func_retval0+0], %f4;
	ret;
}

.visible .func  (.param .b32 func_retval0) _SET_EXPONENT_4_I8(
	.param .b32 _SET_EXPONENT_4_I8_param_0,
	.param .b64 _SET_EXPONENT_4_I8_param_1
)
{
	.reg .s32 	%r<2>;
	.reg .f32 	%f<4>;


	ld.param.f32 	%f1, [_SET_EXPONENT_4_I8_param_0];
	ld.param.u32 	%r1, [_SET_EXPONENT_4_I8_param_1];
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f1;
	.param .b32 retval0;
	call.uni (retval0), 
	_FRACTION_4, 
	(
	param0
	);
	ld.param.f32	%f2, [retval0+0];
	}
	
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_SCALE_4, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f3, [retval0+0];
	}
	
	st.param.f32	[func_retval0+0], %f3;
	ret;
}

.visible .func  (.param .b64 func_retval0) _SET_EXPONENT_8_I8(
	.param .b64 _SET_EXPONENT_8_I8_param_0,
	.param .b64 _SET_EXPONENT_8_I8_param_1
)
{
	.reg .s32 	%r<2>;
	.reg .f64 	%fd<4>;


	ld.param.f64 	%fd1, [_SET_EXPONENT_8_I8_param_0];
	ld.param.u32 	%r1, [_SET_EXPONENT_8_I8_param_1];
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd1;
	.param .b64 retval0;
	call.uni (retval0), 
	_FRACTION, 
	(
	param0
	);
	ld.param.f64	%fd2, [retval0+0];
	}
	
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 retval0;
	call.uni (retval0), 
	_SCALE, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd3, [retval0+0];
	}
	
	st.param.f64	[func_retval0+0], %fd3;
	ret;
}

.visible .func  (.param .b32 func_retval0) _NEAREST_4(
	.param .b32 _NEAREST_4_param_0,
	.param .b32 _NEAREST_4_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<11>;


	ld.param.f32 	%f6, [_NEAREST_4_param_0];
	ld.param.f32 	%f7, [_NEAREST_4_param_1];
	setp.eq.f32 	%p1, %f7, 0f00000000;
	mov.f32 	%f10, 0f00000000;
	@%p1 bra 	BB33_6;

	setp.eq.f32 	%p2, %f6, 0f00000000;
	@%p2 bra 	BB33_3;

	setp.gt.f32 	%p3, %f7, 0f00000000;
	setp.gt.f32 	%p4, %f6, 0f00000000;
	selp.b32 	%r1, 1, -1, %p4;
	neg.s32 	%r2, %r1;
	selp.b32 	%r3, %r1, %r2, %p3;
	mov.b32 	 %r4, %f6;
	add.s32 	%r5, %r3, %r4;
	mov.b32 	 %f10, %r5;
	bra.uni 	BB33_4;

BB33_3:
	setp.gt.f32 	%p5, %f7, 0f00000000;
	selp.f32 	%f10, 0f00800000, 0f80800000, %p5;

BB33_4:
	mov.b32 	 %r6, %f10;
	cvt.rn.f32.u32 	%f9, %r6;
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f9;
	.param .b32 retval0;
	call.uni (retval0), 
	isnormal32, 
	(
	param0
	);
	ld.param.b32	%r7, [retval0+0];
	}
	
	setp.ne.s32 	%p6, %r7, 0;
	setp.gt.f32 	%p7, %f6, 0f3F800000;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB33_6;

	setp.lt.f32 	%p9, %f6, 0fBF800000;
	selp.f32 	%f10, %f10, 0f00000000, %p9;

BB33_6:
	st.param.f32	[func_retval0+0], %f10;
	ret;
}

.visible .func  (.param .b32 func_retval0) _NEAREST_4_8(
	.param .b32 _NEAREST_4_8_param_0,
	.param .b64 _NEAREST_4_8_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<10>;
	.reg .f64 	%fd<2>;


	ld.param.f32 	%f6, [_NEAREST_4_8_param_0];
	ld.param.f64 	%fd1, [_NEAREST_4_8_param_1];
	setp.eq.f64 	%p1, %fd1, 0d0000000000000000;
	mov.f32 	%f9, 0f00000000;
	@%p1 bra 	BB34_6;

	setp.eq.f32 	%p2, %f6, 0f00000000;
	@%p2 bra 	BB34_3;

	setp.gt.f64 	%p3, %fd1, 0d0000000000000000;
	setp.gt.f32 	%p4, %f6, 0f00000000;
	selp.b32 	%r1, 1, -1, %p4;
	neg.s32 	%r2, %r1;
	selp.b32 	%r3, %r1, %r2, %p3;
	mov.b32 	 %r4, %f6;
	add.s32 	%r5, %r3, %r4;
	mov.b32 	 %f9, %r5;
	bra.uni 	BB34_4;

BB34_3:
	setp.gt.f64 	%p5, %fd1, 0d0000000000000000;
	selp.f32 	%f9, 0f00800000, 0f80800000, %p5;

BB34_4:
	mov.b32 	 %r6, %f9;
	cvt.rn.f32.u32 	%f8, %r6;
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f8;
	.param .b32 retval0;
	call.uni (retval0), 
	isnormal32, 
	(
	param0
	);
	ld.param.b32	%r7, [retval0+0];
	}
	
	setp.ne.s32 	%p6, %r7, 0;
	setp.gt.f32 	%p7, %f6, 0f3F800000;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB34_6;

	setp.lt.f32 	%p9, %f6, 0fBF800000;
	selp.f32 	%f9, %f9, 0f00000000, %p9;

BB34_6:
	st.param.f32	[func_retval0+0], %f9;
	ret;
}

.visible .func  (.param .b64 func_retval0) _NEAREST_8_4(
	.param .b64 _NEAREST_8_4_param_0,
	.param .b32 _NEAREST_8_4_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<2>;
	.reg .f32 	%f<2>;
	.reg .s64 	%rd<7>;
	.reg .f64 	%fd<10>;


	ld.param.f64 	%fd6, [_NEAREST_8_4_param_0];
	ld.param.f32 	%f1, [_NEAREST_8_4_param_1];
	setp.eq.f32 	%p1, %f1, 0f00000000;
	mov.f64 	%fd9, 0d0000000000000000;
	@%p1 bra 	BB35_6;

	setp.eq.f64 	%p2, %fd6, 0d0000000000000000;
	@%p2 bra 	BB35_3;

	setp.gt.f32 	%p3, %f1, 0f00000000;
	setp.gt.f64 	%p4, %fd6, 0d0000000000000000;
	selp.b64 	%rd1, 1, -1, %p4;
	neg.s64 	%rd2, %rd1;
	selp.b64 	%rd3, %rd1, %rd2, %p3;
	mov.b64 	 %rd4, %fd6;
	add.s64 	%rd5, %rd3, %rd4;
	mov.b64 	 %fd9, %rd5;
	bra.uni 	BB35_4;

BB35_3:
	setp.gt.f32 	%p5, %f1, 0f00000000;
	selp.f64 	 %fd9, 0d0010000000000000, 0d8010000000000000, %p5;

BB35_4:
	mov.b64 	 %rd6, %fd9;
	cvt.rn.f64.u64 	%fd8, %rd6;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd8;
	.param .b32 retval0;
	call.uni (retval0), 
	isnormal64, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	}
	
	setp.ne.s32 	%p6, %r1, 0;
	setp.gt.f64 	%p7, %fd6, 0d3FF0000000000000;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB35_6;

	setp.lt.f64 	%p9, %fd6, 0dBFF0000000000000;
	selp.f64 	%fd9, %fd9, 0d0000000000000000, %p9;

BB35_6:
	st.param.f64	[func_retval0+0], %fd9;
	ret;
}

.visible .func  (.param .b64 func_retval0) _NEAREST(
	.param .b64 _NEAREST_param_0,
	.param .b64 _NEAREST_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<7>;
	.reg .f64 	%fd<11>;


	ld.param.f64 	%fd6, [_NEAREST_param_0];
	ld.param.f64 	%fd7, [_NEAREST_param_1];
	setp.eq.f64 	%p1, %fd7, 0d0000000000000000;
	mov.f64 	%fd10, 0d0000000000000000;
	@%p1 bra 	BB36_6;

	setp.eq.f64 	%p2, %fd6, 0d0000000000000000;
	@%p2 bra 	BB36_3;

	setp.gt.f64 	%p3, %fd7, 0d0000000000000000;
	setp.gt.f64 	%p4, %fd6, 0d0000000000000000;
	selp.b64 	%rd1, 1, -1, %p4;
	neg.s64 	%rd2, %rd1;
	selp.b64 	%rd3, %rd1, %rd2, %p3;
	mov.b64 	 %rd4, %fd6;
	add.s64 	%rd5, %rd3, %rd4;
	mov.b64 	 %fd10, %rd5;
	bra.uni 	BB36_4;

BB36_3:
	setp.gt.f64 	%p5, %fd7, 0d0000000000000000;
	selp.f64 	 %fd10, 0d0010000000000000, 0d8010000000000000, %p5;

BB36_4:
	mov.b64 	 %rd6, %fd10;
	cvt.rn.f64.u64 	%fd9, %rd6;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd9;
	.param .b32 retval0;
	call.uni (retval0), 
	isnormal64, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	}
	
	setp.ne.s32 	%p6, %r1, 0;
	setp.gt.f64 	%p7, %fd6, 0d3FF0000000000000;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB36_6;

	setp.lt.f64 	%p9, %fd6, 0dBFF0000000000000;
	selp.f64 	%fd10, %fd10, 0d0000000000000000, %p9;

BB36_6:
	st.param.f64	[func_retval0+0], %fd10;
	ret;
}

.visible .func  (.param .b32 func_retval0) _nextafterf(
	.param .b32 _nextafterf_param_0,
	.param .b32 _nextafterf_param_1
)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<13>;
	.reg .f32 	%f<15>;


	ld.param.f32 	%f8, [_nextafterf_param_0];
	ld.param.f32 	%f9, [_nextafterf_param_1];
	abs.f32 	%f1, %f8;
	mov.u32 	%r2, 2139095040;
	mov.b32 	%f2, %r2;
	setp.gtu.f32 	%p1, %f1, %f2;
	mov.f32 	%f14, %f8;
	@%p1 bra 	BB37_9;

	abs.f32 	%f10, %f9;
	setp.gtu.f32 	%p2, %f10, %f2;
	mov.f32 	%f14, %f9;
	@%p2 bra 	BB37_9;

	setp.eq.f32 	%p3, %f8, %f9;
	setp.geu.f32 	%p4, %f1, %f2;
	or.pred  	%p5, %p3, %p4;
	mov.f32 	%f13, %f8;
	mov.f32 	%f14, %f13;
	@%p5 bra 	BB37_9;

	mov.b32 	 %r1, %f8;
	and.b32  	%r3, %r1, 2147483647;
	mov.b32 	 %f11, %r3;
	setp.eq.f32 	%p6, %f11, 0f00000000;
	@%p6 bra 	BB37_8;

	setp.gt.f32 	%p7, %f8, %f9;
	setp.gt.f32 	%p8, %f8, 0f00000000;
	selp.u32 	%r4, 1, 0, %p8;
	selp.b32 	%r5, -1, 0, %p8;
	selp.b32 	%r6, %r5, %r4, %p7;
	xor.b32  	%r7, %r4, 1;
	neg.s32 	%r8, %r7;
	selp.b32 	%r9, %r7, %r8, %p7;
	add.s32 	%r10, %r6, %r1;
	add.s32 	%r11, %r10, %r9;
	mov.b32 	 %f3, %r11;
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f3;
	.param .b32 retval0;
	call.uni (retval0), 
	isnormal32, 
	(
	param0
	);
	ld.param.b32	%r12, [retval0+0];
	}
	
	setp.ne.s32 	%p9, %r12, 0;
	mov.f32 	%f14, %f3;
	@%p9 bra 	BB37_9;

	abs.f32 	%f12, %f3;
	setp.lt.f32 	%p10, %f12, %f2;
	@%p10 bra 	BB37_7;

	add.f32 	%f14, %f8, %f8;
	bra.uni 	BB37_9;

BB37_7:
	mul.f32 	%f14, %f8, %f8;
	bra.uni 	BB37_9;

BB37_8:
	setp.gt.f32 	%p11, %f8, %f9;
	selp.f32 	%f14, 0f80800000, 0f00800000, %p11;

BB37_9:
	st.param.f32	[func_retval0+0], %f14;
	ret;
}

.visible .func  (.param .b64 func_retval0) _nextafter(
	.param .b64 _nextafter_param_0,
	.param .b64 _nextafter_param_1
)
{
	.reg .pred 	%p<12>;
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<12>;
	.reg .f64 	%fd<15>;


	ld.param.f64 	%fd8, [_nextafter_param_0];
	ld.param.f64 	%fd9, [_nextafter_param_1];
	abs.f64 	%fd1, %fd8;
	mov.u64 	%rd2, 9218868437227405312;
	mov.b64 	%fd2, %rd2;
	setp.gtu.f64 	%p1, %fd1, %fd2;
	mov.f64 	%fd14, %fd8;
	@%p1 bra 	BB38_9;

	abs.f64 	%fd10, %fd9;
	setp.gtu.f64 	%p2, %fd10, %fd2;
	mov.f64 	%fd14, %fd9;
	@%p2 bra 	BB38_9;

	setp.eq.f64 	%p3, %fd8, %fd9;
	setp.geu.f64 	%p4, %fd1, %fd2;
	or.pred  	%p5, %p3, %p4;
	mov.f64 	%fd13, %fd8;
	mov.f64 	%fd14, %fd13;
	@%p5 bra 	BB38_9;

	mov.b64 	 %rd1, %fd8;
	and.b64  	%rd3, %rd1, 9223372036854775807;
	mov.b64 	 %fd11, %rd3;
	setp.eq.f64 	%p6, %fd11, 0d0000000000000000;
	@%p6 bra 	BB38_8;

	setp.gt.f64 	%p7, %fd8, %fd9;
	setp.gt.f64 	%p8, %fd8, 0d0000000000000000;
	selp.u64 	%rd4, 1, 0, %p8;
	selp.b64 	%rd5, -1, 0, %p8;
	selp.b64 	%rd6, %rd5, %rd4, %p7;
	xor.b64  	%rd7, %rd4, 1;
	neg.s64 	%rd8, %rd7;
	selp.b64 	%rd9, %rd7, %rd8, %p7;
	add.s64 	%rd10, %rd6, %rd1;
	add.s64 	%rd11, %rd10, %rd9;
	mov.b64 	 %fd3, %rd11;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd3;
	.param .b32 retval0;
	call.uni (retval0), 
	isnormal64, 
	(
	param0
	);
	ld.param.b32	%r1, [retval0+0];
	}
	
	setp.ne.s32 	%p9, %r1, 0;
	mov.f64 	%fd14, %fd3;
	@%p9 bra 	BB38_9;

	abs.f64 	%fd12, %fd3;
	setp.lt.f64 	%p10, %fd12, %fd2;
	@%p10 bra 	BB38_7;

	add.f64 	%fd14, %fd8, %fd8;
	bra.uni 	BB38_9;

BB38_7:
	mul.f64 	%fd14, %fd8, %fd8;
	bra.uni 	BB38_9;

BB38_8:
	setp.gt.f64 	%p11, %fd8, %fd9;
	selp.f64 	 %fd14, 0d8010000000000000, 0d0010000000000000, %p11;

BB38_9:
	st.param.f64	[func_retval0+0], %fd14;
	ret;
}

.visible .func  (.param .b32 func_retval0) sinhf(
	.param .b32 sinhf_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<34>;


	ld.param.f32 	%f5, [sinhf_param_0];
	abs.f32 	%f1, %f5;
	setp.ltu.f32 	%p1, %f1, 0f3F800000;
	@%p1 bra 	BB39_2;

	mul.f32 	%f6, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f7, %f6;
	mov.f32 	%f8, 0fBF317200;
	fma.rn.f32 	%f9, %f7, %f8, %f1;
	mov.f32 	%f10, 0fB5BFBE8E;
	fma.rn.f32 	%f11, %f7, %f10, %f9;
	mul.f32 	%f12, %f11, 0f3FB8AA3B;
	ex2.approx.f32 	%f13, %f12;
	add.f32 	%f14, %f7, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f13, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.u32 	%r1, 2139095040;
	mov.b32 	%f22, %r1;
	setp.ltu.f32 	%p2, %f1, 0f42B40000;
	selp.f32 	%f23, %f21, %f22, %p2;
	mov.b32 	%r2, %f23;
	mov.b32 	%r3, %f5;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f33, %r5;
	bra.uni 	BB39_3;

BB39_2:
	mul.f32 	%f24, %f5, %f5;
	mov.f32 	%f25, 0f394FFF49;
	mov.f32 	%f26, 0f363D0ADA;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0f3C08889A;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3E2AAAAB;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mul.f32 	%f32, %f31, %f24;
	fma.rn.f32 	%f33, %f32, %f5, %f5;

BB39_3:
	st.param.f32	[func_retval0+0], %f33;
	ret;
}

.visible .func  (.param .b64 func_retval0) sinh(
	.param .b64 sinh_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<17>;
	.reg .s64 	%rd<2>;
	.reg .f64 	%fd<64>;


	ld.param.f64 	%fd5, [sinh_param_0];
	abs.f64 	%fd1, %fd5;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd1;
	}
	setp.lt.s32 	%p1, %r1, 1072693248;
	@%p1 bra 	BB40_2;

	mul.f64 	%fd6, %fd1, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd7, %fd6;
	cvt.rzi.s32.f64 	%r2, %fd7;
	add.s32 	%r3, %r2, -1;
	mov.f64 	%fd8, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd9, %fd7, %fd8, %fd1;
	mov.f64 	%fd10, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd11, %fd7, %fd10, %fd9;
	shl.b32 	%r4, %r1, 1;
	setp.lt.u32 	%p2, %r4, 2142496327;
	selp.f64 	%fd12, %fd1, %fd11, %p2;
	selp.b32 	%r5, 0, %r3, %p2;
	mov.u32 	%r6, 0;
	mov.f64 	%fd13, 0d3E5AFD81DA6C3BAF;
	mov.f64 	%fd14, 0d3E21F07FCCF58BAD;
	fma.rn.f64 	%fd15, %fd14, %fd12, %fd13;
	mov.f64 	%fd16, 0d3E927E55F60F80E6;
	fma.rn.f64 	%fd17, %fd15, %fd12, %fd16;
	mov.f64 	%fd18, 0d3EC71DDA8F02D666;
	fma.rn.f64 	%fd19, %fd17, %fd12, %fd18;
	mov.f64 	%fd20, 0d3EFA01A013B894E0;
	fma.rn.f64 	%fd21, %fd19, %fd12, %fd20;
	mov.f64 	%fd22, 0d3F2A01A01D3AF788;
	fma.rn.f64 	%fd23, %fd21, %fd12, %fd22;
	mov.f64 	%fd24, 0d3F56C16C16C3A1EC;
	fma.rn.f64 	%fd25, %fd23, %fd12, %fd24;
	mov.f64 	%fd26, 0d3F81111111109161;
	fma.rn.f64 	%fd27, %fd25, %fd12, %fd26;
	mov.f64 	%fd28, 0d3FA55555555554C1;
	fma.rn.f64 	%fd29, %fd27, %fd12, %fd28;
	mov.f64 	%fd30, 0d3FC555555555556F;
	fma.rn.f64 	%fd31, %fd29, %fd12, %fd30;
	mov.f64 	%fd32, 0d3FE0000000000000;
	fma.rn.f64 	%fd33, %fd31, %fd12, %fd32;
	mul.f64 	%fd34, %fd33, %fd12;
	fma.rn.f64 	%fd35, %fd34, %fd12, %fd12;
	setp.eq.s32 	%p3, %r5, 1024;
	selp.b32 	%r7, -1, 0, %p3;
	add.s32 	%r8, %r7, %r5;
	shl.b32 	%r9, %r8, 20;
	add.s32 	%r10, %r9, 1072693248;
	mov.b64 	%fd36, {%r6, %r10};
	mov.u32 	%r11, 1071644672;
	mov.b64 	%fd37, {%r6, %r11};
	sub.f64 	%fd38, %fd36, %fd37;
	fma.rn.f64 	%fd39, %fd35, %fd36, %fd38;
	add.f64 	%fd40, %fd39, %fd39;
	selp.f64 	%fd41, %fd40, %fd39, %p3;
	setp.eq.s32 	%p4, %r4, 0;
	selp.f64 	%fd42, %fd12, %fd41, %p4;
	mov.f64 	%fd43, 0d3FF0000000000000;
	mov.f64 	%fd44, 0d4000000000000000;
	fma.rn.f64 	%fd45, %fd44, %fd42, %fd43;
	div.rn.f64 	%fd46, %fd42, %fd45;
	add.f64 	%fd47, %fd42, %fd46;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd48, %rd1;
	setp.ltu.f64 	%p5, %fd1, 0d408633CE8FB9F87E;
	selp.f64 	%fd63, %fd47, %fd48, %p5;
	bra.uni 	BB40_3;

BB40_2:
	mul.f64 	%fd49, %fd1, %fd1;
	mov.f64 	%fd50, 0d3E5AE54AA7F65A50;
	mov.f64 	%fd51, 0d3DE66F72AF4891C2;
	fma.rn.f64 	%fd52, %fd51, %fd49, %fd50;
	mov.f64 	%fd53, 0d3EC71DE4F068906D;
	fma.rn.f64 	%fd54, %fd52, %fd49, %fd53;
	mov.f64 	%fd55, 0d3F2A01A01848AC60;
	fma.rn.f64 	%fd56, %fd54, %fd49, %fd55;
	mov.f64 	%fd57, 0d3F81111111121E55;
	fma.rn.f64 	%fd58, %fd56, %fd49, %fd57;
	mov.f64 	%fd59, 0d3FC555555555547B;
	fma.rn.f64 	%fd60, %fd58, %fd49, %fd59;
	mul.f64 	%fd61, %fd60, %fd49;
	fma.rn.f64 	%fd63, %fd61, %fd1, %fd1;

BB40_3:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd5;
	}
	and.b32  	%r13, %r12, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd63;
	}
	or.b32  	%r15, %r14, %r13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd63;
	}
	mov.b64 	%fd62, {%r16, %r15};
	st.param.f64	[func_retval0+0], %fd62;
	ret;
}

.visible .func  (.param .b32 func_retval0) cosf(
	.param .b32 cosf_param_0
)
{
	.local .align 4 .b8 	__local_depot41[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<15>;
	.reg .s32 	%r<93>;
	.reg .f32 	%f<49>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot41;
	ld.param.f32 	%f44, [cosf_param_0];
	add.u64 	%rd5, %SPL, 0;
	mov.u32 	%r28, 2139095040;
	mov.b32 	%f19, %r28;
	abs.f32 	%f20, %f44;
	setp.neu.f32 	%p1, %f20, %f19;
	@%p1 bra 	BB41_2;

	mov.f32 	%f21, 0f00000000;
	mul.rn.f32 	%f44, %f44, %f21;

BB41_2:
	mul.f32 	%f22, %f44, 0f3F22F983;
	cvt.rni.s32.f32 	%r92, %f22;
	cvt.rn.f32.s32 	%f23, %r92;
	neg.f32 	%f24, %f23;
	mov.f32 	%f25, 0f3FC90FDA;
	fma.rn.f32 	%f26, %f24, %f25, %f44;
	mov.f32 	%f27, 0f33A22168;
	fma.rn.f32 	%f28, %f24, %f27, %f26;
	mov.f32 	%f29, 0f27C234C5;
	fma.rn.f32 	%f45, %f24, %f29, %f28;
	abs.f32 	%f30, %f44;
	setp.leu.f32 	%p2, %f30, 0f47CE4780;
	@%p2 bra 	BB41_10;

	mov.b32 	%r2, %f44;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r30, %r3, 255;
	add.s32 	%r31, %r30, -128;
	shl.b32 	%r32, %r2, 8;
	or.b32  	%r4, %r32, -2147483648;
	shr.u32 	%r5, %r31, 5;
	mov.u32 	%r86, 0;
	mov.u64 	%rd11, 0;

BB41_4:
	.pragma "nounroll";
	mov.u64 	%rd7, __cudart_i2opi_f;
	add.s64 	%rd8, %rd7, %rd11;
	ld.const.u32 	%r33, [%rd8];
	mul.hi.u32 	%r35, %r33, %r4;
	mad.lo.s32 	%r36, %r33, %r4, %r86;
	setp.lt.u32 	%p3, %r36, %r86;
	selp.u32 	%r37, 1, 0, %p3;
	add.s32 	%r86, %r37, %r35;
	add.s64 	%rd9, %rd5, %rd11;
	st.local.u32 	[%rd9], %r36;
	add.s64 	%rd11, %rd11, 4;
	setp.ne.s64 	%p4, %rd11, 24;
	@%p4 bra 	BB41_4;

	and.b32  	%r89, %r2, -2147483648;
	st.local.u32 	[%rd5+24], %r86;
	mov.u32 	%r40, 6;
	sub.s32 	%r41, %r40, %r5;
	mul.wide.s32 	%rd10, %r41, 4;
	add.s64 	%rd4, %rd5, %rd10;
	ld.local.u32 	%r87, [%rd4];
	ld.local.u32 	%r88, [%rd4+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB41_7;

	mov.u32 	%r44, 32;
	sub.s32 	%r45, %r44, %r11;
	shr.u32 	%r46, %r88, %r45;
	shl.b32 	%r47, %r87, %r11;
	add.s32 	%r87, %r46, %r47;
	ld.local.u32 	%r48, [%rd4+-8];
	shr.u32 	%r50, %r48, %r45;
	shl.b32 	%r51, %r88, %r11;
	add.s32 	%r88, %r50, %r51;

BB41_7:
	shr.u32 	%r52, %r88, 30;
	shl.b32 	%r53, %r87, 2;
	add.s32 	%r90, %r52, %r53;
	shl.b32 	%r17, %r88, 2;
	shr.u32 	%r54, %r90, 31;
	shr.u32 	%r55, %r87, 30;
	add.s32 	%r56, %r54, %r55;
	neg.s32 	%r57, %r56;
	setp.eq.s32 	%p6, %r89, 0;
	selp.b32 	%r92, %r56, %r57, %p6;
	setp.eq.s32 	%p7, %r54, 0;
	mov.u32 	%r91, %r17;
	@%p7 bra 	BB41_9;

	not.b32 	%r58, %r90;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r59, 1, 0, %p8;
	add.s32 	%r90, %r59, %r58;
	xor.b32  	%r89, %r89, -2147483648;
	mov.u32 	%r91, %r19;

BB41_9:
	clz.b32 	%r60, %r90;
	setp.eq.s32 	%p9, %r60, 0;
	shl.b32 	%r61, %r90, %r60;
	mov.u32 	%r62, 32;
	sub.s32 	%r63, %r62, %r60;
	shr.u32 	%r64, %r91, %r63;
	add.s32 	%r65, %r64, %r61;
	selp.b32 	%r66, %r90, %r65, %p9;
	mul.lo.s32 	%r67, %r66, -921707870;
	mov.u32 	%r68, -921707870;
	mul.hi.u32 	%r69, %r66, %r68;
	setp.gt.s32 	%p10, %r69, 0;
	shl.b32 	%r70, %r69, 1;
	shr.u32 	%r71, %r67, 31;
	add.s32 	%r72, %r71, %r70;
	selp.b32 	%r73, %r72, %r69, %p10;
	selp.b32 	%r74, -1, 0, %p10;
	mov.u32 	%r75, 126;
	sub.s32 	%r76, %r75, %r60;
	add.s32 	%r77, %r76, %r74;
	shl.b32 	%r78, %r77, 23;
	add.s32 	%r79, %r73, 1;
	shr.u32 	%r80, %r79, 7;
	add.s32 	%r81, %r80, 1;
	shr.u32 	%r82, %r81, 1;
	add.s32 	%r83, %r82, %r78;
	or.b32  	%r84, %r83, %r89;
	mov.b32 	%f45, %r84;

BB41_10:
	mul.rn.f32 	%f6, %f45, %f45;
	add.s32 	%r26, %r92, 1;
	and.b32  	%r27, %r26, 1;
	setp.eq.s32 	%p11, %r27, 0;
	@%p11 bra 	BB41_12;

	mov.f32 	%f31, 0fBAB6061A;
	mov.f32 	%f32, 0f37CCF5CE;
	fma.rn.f32 	%f46, %f32, %f6, %f31;
	bra.uni 	BB41_13;

BB41_12:
	mov.f32 	%f33, 0f3C08839E;
	mov.f32 	%f34, 0fB94CA1F9;
	fma.rn.f32 	%f46, %f34, %f6, %f33;

BB41_13:
	@%p11 bra 	BB41_15;

	mov.f32 	%f35, 0f3D2AAAA5;
	fma.rn.f32 	%f36, %f46, %f6, %f35;
	mov.f32 	%f37, 0fBF000000;
	fma.rn.f32 	%f47, %f36, %f6, %f37;
	bra.uni 	BB41_16;

BB41_15:
	mov.f32 	%f38, 0fBE2AAAA3;
	fma.rn.f32 	%f39, %f46, %f6, %f38;
	mov.f32 	%f40, 0f00000000;
	fma.rn.f32 	%f47, %f39, %f6, %f40;

BB41_16:
	fma.rn.f32 	%f48, %f47, %f45, %f45;
	@%p11 bra 	BB41_18;

	mov.f32 	%f41, 0f3F800000;
	fma.rn.f32 	%f48, %f47, %f6, %f41;

BB41_18:
	and.b32  	%r85, %r26, 2;
	setp.eq.s32 	%p14, %r85, 0;
	@%p14 bra 	BB41_20;

	mov.f32 	%f42, 0f00000000;
	mov.f32 	%f43, 0fBF800000;
	fma.rn.f32 	%f48, %f48, %f43, %f42;

BB41_20:
	st.param.f32	[func_retval0+0], %f48;
	ret;
}

.visible .func  (.param .b64 func_retval0) _COS(
	.param .b64 _COS_param_0
)
{
	.local .align 4 .b8 	__local_depot42[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .s32 	%r<17>;
	.reg .s64 	%rd<8>;
	.reg .f64 	%fd<44>;


	mov.u64 	%SPL, __local_depot42;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd41, [_COS_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd14, %rd3;
	abs.f64 	%fd15, %fd41;
	setp.neu.f64 	%p1, %fd15, %fd14;
	@%p1 bra 	BB42_2;

	mov.f64 	%fd16, 0d0000000000000000;
	mul.rn.f64 	%fd41, %fd41, %fd16;

BB42_2:
	mul.f64 	%fd17, %fd41, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r16, %fd17;
	st.local.u32 	[%rd1], %r16;
	cvt.rn.f64.s32 	%fd18, %r16;
	neg.f64 	%fd19, %fd18;
	mov.f64 	%fd20, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd21, %fd19, %fd20, %fd41;
	mov.f64 	%fd22, 0d3C91A62633145C00;
	fma.rn.f64 	%fd23, %fd19, %fd22, %fd21;
	mov.f64 	%fd24, 0d397B839A252049C0;
	fma.rn.f64 	%fd42, %fd19, %fd24, %fd23;
	abs.f64 	%fd25, %fd41;
	setp.leu.f64 	%p2, %fd25, 0d41E0000000000000;
	@%p2 bra 	BB42_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd41;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd42, [retval0+0];
	}
	
	ld.local.u32 	%r16, [%rd1];

BB42_4:
	add.s32 	%r4, %r16, 1;
	shl.b32 	%r7, %r4, 3;
	and.b32  	%r8, %r7, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r4, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	not.pred 	%p4, %p3;
	selp.f64 	 %fd26, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p4;
	mul.wide.u32 	%rd5, %r8, 8;
	mov.u64 	%rd6, __cudart_sin_cos_coeffs;
	add.s64 	%rd7, %rd5, %rd6;
	ld.const.f64 	%fd27, [%rd7+8];
	mul.rn.f64 	%fd6, %fd42, %fd42;
	fma.rn.f64 	%fd28, %fd26, %fd6, %fd27;
	ld.const.f64 	%fd29, [%rd7+16];
	fma.rn.f64 	%fd30, %fd28, %fd6, %fd29;
	ld.const.f64 	%fd31, [%rd7+24];
	fma.rn.f64 	%fd32, %fd30, %fd6, %fd31;
	ld.const.f64 	%fd33, [%rd7+32];
	fma.rn.f64 	%fd34, %fd32, %fd6, %fd33;
	ld.const.f64 	%fd35, [%rd7+40];
	fma.rn.f64 	%fd36, %fd34, %fd6, %fd35;
	ld.const.f64 	%fd37, [%rd7+48];
	fma.rn.f64 	%fd7, %fd36, %fd6, %fd37;
	fma.rn.f64 	%fd43, %fd7, %fd42, %fd42;
	@%p4 bra 	BB42_6;

	mov.f64 	%fd38, 0d3FF0000000000000;
	fma.rn.f64 	%fd43, %fd7, %fd6, %fd38;

BB42_6:
	and.b32  	%r15, %r4, 2;
	setp.eq.s32 	%p5, %r15, 0;
	@%p5 bra 	BB42_8;

	mov.f64 	%fd39, 0d0000000000000000;
	mov.f64 	%fd40, 0dBFF0000000000000;
	fma.rn.f64 	%fd43, %fd43, %fd40, %fd39;

BB42_8:
	st.param.f64	[func_retval0+0], %fd43;
	ret;
}

.visible .func  (.param .b32 func_retval0) coshf(
	.param .b32 coshf_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<2>;
	.reg .f32 	%f<20>;


	ld.param.f32 	%f1, [coshf_param_0];
	abs.f32 	%f2, %f1;
	mul.f32 	%f3, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f4, %f3;
	mov.f32 	%f5, 0fBF317200;
	fma.rn.f32 	%f6, %f4, %f5, %f2;
	mov.f32 	%f7, 0fB5BFBE8E;
	fma.rn.f32 	%f8, %f4, %f7, %f6;
	mul.f32 	%f9, %f8, 0f3FB8AA3B;
	ex2.approx.f32 	%f10, %f9;
	add.f32 	%f11, %f4, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f10, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32 	%p1, %f2, 0f42B40000;
	mov.u32 	%r1, 2139095040;
	mov.b32 	%f18, %r1;
	selp.f32 	%f19, %f17, %f18, %p1;
	st.param.f32	[func_retval0+0], %f19;
	ret;
}

.visible .func  (.param .b64 func_retval0) cosh(
	.param .b64 cosh_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<16>;
	.reg .f32 	%f<6>;
	.reg .f64 	%fd<55>;


	ld.param.f64 	%fd52, [cosh_param_0];
	abs.f64 	%fd1, %fd52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	setp.lt.u32 	%p1, %r4, 1082536911;
	@%p1 bra 	BB44_4;

	setp.leu.f64 	%p2, %fd1, 0d0000000000000000;
	@%p2 bra 	BB44_3;

	mov.u32 	%r5, 2139095040;
	mov.b32 	%f1, %r5;
	cvt.f64.f32 	%fd52, %f1;

BB44_3:
	add.f64 	%fd54, %fd52, %fd52;
	bra.uni 	BB44_8;

BB44_4:
	mul.f64 	%fd12, %fd1, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd13, %fd12;
	cvt.rzi.s32.f64 	%r6, %fd13;
	mov.f64 	%fd14, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd15, %fd13, %fd14, %fd1;
	mov.f64 	%fd16, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd17, %fd13, %fd16, %fd15;
	mov.f64 	%fd18, 0d3E928A27E30F5561;
	mov.f64 	%fd19, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd20, %fd19, %fd17, %fd18;
	mov.f64 	%fd21, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd22, %fd20, %fd17, %fd21;
	mov.f64 	%fd23, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd24, %fd22, %fd17, %fd23;
	mov.f64 	%fd25, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd26, %fd24, %fd17, %fd25;
	mov.f64 	%fd27, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd28, %fd26, %fd17, %fd27;
	mov.f64 	%fd29, 0d3F8111111111A24E;
	fma.rn.f64 	%fd30, %fd28, %fd17, %fd29;
	mov.f64 	%fd31, 0d3FA555555555211D;
	fma.rn.f64 	%fd32, %fd30, %fd17, %fd31;
	mov.f64 	%fd33, 0d3FC5555555555530;
	fma.rn.f64 	%fd34, %fd32, %fd17, %fd33;
	mov.f64 	%fd35, 0d3FE0000000000005;
	fma.rn.f64 	%fd36, %fd34, %fd17, %fd35;
	mov.f64 	%fd37, 0d3FF0000000000000;
	fma.rn.f64 	%fd38, %fd36, %fd17, %fd37;
	fma.rn.f64 	%fd5, %fd38, %fd17, %fd37;
	add.s32 	%r1, %r6, -2;
	shl.b32 	%r2, %r1, 20;
	add.s32 	%r3, %r2, 1072693248;
	abs.s32 	%r7, %r1;
	setp.lt.s32 	%p3, %r7, 1021;
	@%p3 bra 	BB44_6;

	add.s32 	%r8, %r2, 1130364928;
	setp.lt.s32 	%p4, %r1, 0;
	mov.u32 	%r9, 0;
	selp.b32 	%r10, %r8, %r3, %p4;
	shr.s32 	%r11, %r1, 31;
	add.s32 	%r12, %r11, 1073741824;
	and.b32  	%r13, %r12, -57671680;
	add.s32 	%r14, %r10, -1048576;
	mov.b64 	%fd39, {%r9, %r13};
	mul.f64 	%fd40, %fd5, %fd39;
	mov.b64 	%fd41, {%r9, %r14};
	mul.f64 	%fd53, %fd40, %fd41;
	bra.uni 	BB44_7;

BB44_6:
	mov.u32 	%r15, 0;
	mov.b64 	%fd42, {%r15, %r3};
	mul.f64 	%fd53, %fd42, %fd5;

BB44_7:
	
	cvt.rn.f32.f64     %f2,%fd53;
	
	
	rcp.approx.f32.ftz %f3,%f2;
	
	
	cvt.f64.f32        %fd44,%f3;
	
	neg.f64 	%fd45, %fd53;
	fma.rn.f64 	%fd47, %fd45, %fd44, %fd37;
	fma.rn.f64 	%fd48, %fd47, %fd47, %fd47;
	fma.rn.f64 	%fd49, %fd48, %fd44, %fd44;
	mul.f64 	%fd50, %fd49, 0d3FC0000000000000;
	mov.f64 	%fd51, 0d4000000000000000;
	fma.rn.f64 	%fd54, %fd51, %fd53, %fd50;

BB44_8:
	st.param.f64	[func_retval0+0], %fd54;
	ret;
}

.visible .func  (.param .b32 func_retval0) _HTAN(
	.param .b32 _HTAN_param_0
)
{
	.local .align 4 .b8 	__local_depot45[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .s32 	%r<90>;
	.reg .f32 	%f<34>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot45;
	ld.param.f32 	%f31, [_HTAN_param_0];
	add.u64 	%rd5, %SPL, 0;
	mov.u32 	%r26, 2139095040;
	mov.b32 	%f10, %r26;
	abs.f32 	%f11, %f31;
	setp.neu.f32 	%p1, %f11, %f10;
	@%p1 bra 	BB45_2;

	mov.f32 	%f12, 0f00000000;
	mul.rn.f32 	%f31, %f31, %f12;

BB45_2:
	mul.f32 	%f13, %f31, 0f3F22F983;
	cvt.rni.s32.f32 	%r89, %f13;
	cvt.rn.f32.s32 	%f14, %r89;
	neg.f32 	%f15, %f14;
	mov.f32 	%f16, 0f3FC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f31;
	mov.f32 	%f18, 0f33A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0f27C234C5;
	fma.rn.f32 	%f32, %f15, %f20, %f19;
	abs.f32 	%f21, %f31;
	setp.leu.f32 	%p2, %f21, 0f47CE4780;
	@%p2 bra 	BB45_10;

	mov.b32 	%r2, %f31;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r28, %r3, 255;
	add.s32 	%r29, %r28, -128;
	shl.b32 	%r30, %r2, 8;
	or.b32  	%r4, %r30, -2147483648;
	shr.u32 	%r5, %r29, 5;
	mov.u32 	%r83, 0;
	mov.u64 	%rd11, 0;

BB45_4:
	.pragma "nounroll";
	mov.u64 	%rd7, __cudart_i2opi_f;
	add.s64 	%rd8, %rd7, %rd11;
	ld.const.u32 	%r31, [%rd8];
	mul.hi.u32 	%r33, %r31, %r4;
	mad.lo.s32 	%r34, %r31, %r4, %r83;
	setp.lt.u32 	%p3, %r34, %r83;
	selp.u32 	%r35, 1, 0, %p3;
	add.s32 	%r83, %r35, %r33;
	add.s64 	%rd9, %rd5, %rd11;
	st.local.u32 	[%rd9], %r34;
	add.s64 	%rd11, %rd11, 4;
	setp.ne.s64 	%p4, %rd11, 24;
	@%p4 bra 	BB45_4;

	and.b32  	%r86, %r2, -2147483648;
	st.local.u32 	[%rd5+24], %r83;
	mov.u32 	%r38, 6;
	sub.s32 	%r39, %r38, %r5;
	mul.wide.s32 	%rd10, %r39, 4;
	add.s64 	%rd4, %rd5, %rd10;
	ld.local.u32 	%r84, [%rd4];
	ld.local.u32 	%r85, [%rd4+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB45_7;

	mov.u32 	%r42, 32;
	sub.s32 	%r43, %r42, %r11;
	shr.u32 	%r44, %r85, %r43;
	shl.b32 	%r45, %r84, %r11;
	add.s32 	%r84, %r44, %r45;
	ld.local.u32 	%r46, [%rd4+-8];
	shr.u32 	%r48, %r46, %r43;
	shl.b32 	%r49, %r85, %r11;
	add.s32 	%r85, %r48, %r49;

BB45_7:
	shr.u32 	%r50, %r85, 30;
	shl.b32 	%r51, %r84, 2;
	add.s32 	%r87, %r50, %r51;
	shl.b32 	%r17, %r85, 2;
	shr.u32 	%r52, %r87, 31;
	shr.u32 	%r53, %r84, 30;
	add.s32 	%r54, %r52, %r53;
	neg.s32 	%r55, %r54;
	setp.eq.s32 	%p6, %r86, 0;
	selp.b32 	%r89, %r54, %r55, %p6;
	setp.eq.s32 	%p7, %r52, 0;
	mov.u32 	%r88, %r17;
	@%p7 bra 	BB45_9;

	not.b32 	%r56, %r87;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r57, 1, 0, %p8;
	add.s32 	%r87, %r57, %r56;
	xor.b32  	%r86, %r86, -2147483648;
	mov.u32 	%r88, %r19;

BB45_9:
	clz.b32 	%r58, %r87;
	setp.eq.s32 	%p9, %r58, 0;
	shl.b32 	%r59, %r87, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r88, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32 	%r64, %r87, %r63, %p9;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32 	%p10, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32 	%r71, %r70, %r67, %p10;
	selp.b32 	%r72, -1, 0, %p10;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r86;
	mov.b32 	%f32, %r82;

BB45_10:
	mul.f32 	%f22, %f32, %f32;
	mov.f32 	%f23, 0fBF52B7F4;
	mov.f32 	%f24, 0f3B86D46D;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	fma.rn.f32 	%f26, %f32, %f32, 0fC01E09D0;
	rcp.rn.f32 	%f27, %f26;
	mul.f32 	%f28, %f25, %f27;
	mul.f32 	%f29, %f28, %f22;
	fma.rn.f32 	%f33, %f29, %f32, %f32;
	{
	.reg .b32 temp;
	and.b32	 temp, %r89, 1;
	setp.b32.eq 	 %p11, temp, 1;
	}
	@!%p11 bra 	BB45_12;
	bra.uni 	BB45_11;

BB45_11:
	mov.f32 	%f30, 0fBF800000;
	div.rn.f32 	%f33, %f30, %f33;

BB45_12:
	st.param.f32	[func_retval0+0], %f33;
	ret;
}

.visible .func  (.param .b64 func_retval0) _TAN(
	.param .b64 _TAN_param_0
)
{
	.local .align 4 .b8 	__local_depot46[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<69>;


	mov.u64 	%SPL, __local_depot46;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd66, [_TAN_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd11, %rd3;
	abs.f64 	%fd12, %fd66;
	setp.neu.f64 	%p1, %fd12, %fd11;
	@%p1 bra 	BB46_2;

	mov.f64 	%fd13, 0d0000000000000000;
	mul.rn.f64 	%fd66, %fd66, %fd13;

BB46_2:
	mul.f64 	%fd14, %fd66, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r6, %fd14;
	st.local.u32 	[%rd1], %r6;
	cvt.rn.f64.s32 	%fd15, %r6;
	neg.f64 	%fd16, %fd15;
	mov.f64 	%fd17, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd18, %fd16, %fd17, %fd66;
	mov.f64 	%fd19, 0d3C91A62633145C00;
	fma.rn.f64 	%fd20, %fd16, %fd19, %fd18;
	mov.f64 	%fd21, 0d397B839A252049C0;
	fma.rn.f64 	%fd67, %fd16, %fd21, %fd20;
	abs.f64 	%fd22, %fd66;
	setp.leu.f64 	%p2, %fd22, 0d41E0000000000000;
	@%p2 bra 	BB46_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd67, [retval0+0];
	}
	
	ld.local.u32 	%r6, [%rd1];

BB46_4:
	mul.f64 	%fd23, %fd67, %fd67;
	mov.f64 	%fd24, 0dBEF9757C5B27EBB1;
	mov.f64 	%fd25, 0d3EE48DAC2799BCB9;
	fma.rn.f64 	%fd26, %fd25, %fd23, %fd24;
	mov.f64 	%fd27, 0d3F0980E90FD91E04;
	fma.rn.f64 	%fd28, %fd26, %fd23, %fd27;
	mov.f64 	%fd29, 0dBEFAE2B0417D7E1D;
	fma.rn.f64 	%fd30, %fd28, %fd23, %fd29;
	mov.f64 	%fd31, 0d3F119F5341BFBA57;
	fma.rn.f64 	%fd32, %fd30, %fd23, %fd31;
	mov.f64 	%fd33, 0d3F15E791A00F6919;
	fma.rn.f64 	%fd34, %fd32, %fd23, %fd33;
	mov.f64 	%fd35, 0d3F2FF2E7FADEC73A;
	fma.rn.f64 	%fd36, %fd34, %fd23, %fd35;
	mov.f64 	%fd37, 0d3F434BC1B206DA62;
	fma.rn.f64 	%fd38, %fd36, %fd23, %fd37;
	mov.f64 	%fd39, 0d3F57DB18EF2F83F9;
	fma.rn.f64 	%fd40, %fd38, %fd23, %fd39;
	mov.f64 	%fd41, 0d3F6D6D2E7AE49FBC;
	fma.rn.f64 	%fd42, %fd40, %fd23, %fd41;
	mov.f64 	%fd43, 0d3F8226E3A816A776;
	fma.rn.f64 	%fd44, %fd42, %fd23, %fd43;
	mov.f64 	%fd45, 0d3F9664F485D25660;
	fma.rn.f64 	%fd46, %fd44, %fd23, %fd45;
	mov.f64 	%fd47, 0d3FABA1BA1BABF31D;
	fma.rn.f64 	%fd48, %fd46, %fd23, %fd47;
	mov.f64 	%fd49, 0d3FC11111111105D2;
	fma.rn.f64 	%fd50, %fd48, %fd23, %fd49;
	mov.f64 	%fd51, 0d3FD555555555555E;
	fma.rn.f64 	%fd52, %fd50, %fd23, %fd51;
	mul.f64 	%fd6, %fd52, %fd23;
	fma.rn.f64 	%fd68, %fd6, %fd67, %fd67;
	{
	.reg .b32 temp;
	and.b32	 temp, %r6, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	@!%p3 bra 	BB46_6;
	bra.uni 	BB46_5;

BB46_5:
	sub.f64 	%fd55, %fd68, %fd67;
	neg.f64 	%fd56, %fd55;
	fma.rn.f64 	%fd57, %fd6, %fd67, %fd56;
	
	cvt.rn.f32.f64     %f1,%fd68;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd54,%f2;
	
	neg.f64 	%fd58, %fd68;
	mov.f64 	%fd59, 0d3FF0000000000000;
	fma.rn.f64 	%fd60, %fd58, %fd54, %fd59;
	fma.rn.f64 	%fd61, %fd60, %fd60, %fd60;
	fma.rn.f64 	%fd62, %fd61, %fd54, %fd54;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd64, %fd68, %fd63, %fd59;
	fma.rn.f64 	%fd65, %fd63, %fd57, %fd64;
	fma.rn.f64 	%fd68, %fd65, %fd63, %fd63;

BB46_6:
	st.param.f64	[func_retval0+0], %fd68;
	ret;
}

.visible .func  (.param .b32 func_retval0) tanhf(
	.param .b32 tanhf_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<5>;
	.reg .f32 	%f<34>;


	ld.param.f32 	%f5, [tanhf_param_0];
	abs.f32 	%f1, %f5;
	setp.ltu.f32 	%p1, %f1, 0f3F0CCCCD;
	@%p1 bra 	BB47_2;

	add.f32 	%f8, %f1, %f1;
	mul.f32 	%f9, %f8, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f10, %f9;
	mov.f32 	%f11, 0fBF317200;
	fma.rn.f32 	%f12, %f10, %f11, %f8;
	mov.f32 	%f13, 0fB5BFBE8E;
	fma.rn.f32 	%f14, %f10, %f13, %f12;
	mul.f32 	%f15, %f14, 0f3FB8AA3B;
	ex2.approx.f32 	%f16, %f15;
	ex2.approx.f32 	%f17, %f10;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f7, %f16, %f17, %f18;
	
	rcp.approx.ftz.f32 %f6,%f7;
	
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f6, %f19, %f18;
	setp.ltu.f32 	%p2, %f1, 0f42B00000;
	selp.f32 	%f21, %f20, 0f3F800000, %p2;
	mov.b32 	%r1, %f21;
	mov.b32 	%r2, %f5;
	and.b32  	%r3, %r2, -2147483648;
	or.b32  	%r4, %r3, %r1;
	mov.b32 	%f33, %r4;
	bra.uni 	BB47_3;

BB47_2:
	mul.f32 	%f22, %f5, %f5;
	mov.f32 	%f23, 0fBD57BE66;
	mov.f32 	%f24, 0f3C86A81B;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3E08677B;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0fBEAAAA29;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f29, %f22;
	fma.rn.f32 	%f31, %f30, %f5, %f5;
	add.f32 	%f32, %f5, %f5;
	setp.eq.f32 	%p3, %f5, 0f00000000;
	selp.f32 	%f33, %f32, %f31, %p3;

BB47_3:
	st.param.f32	[func_retval0+0], %f33;
	ret;
}

.visible .func  (.param .b64 func_retval0) tanh(
	.param .b64 tanh_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<23>;
	.reg .f32 	%f<5>;
	.reg .f64 	%fd<78>;


	ld.param.f64 	%fd9, [tanh_param_0];
	abs.f64 	%fd1, %fd9;
	setp.ltu.f64 	%p1, %fd1, 0d3FE199999999999A;
	@%p1 bra 	BB48_5;

	add.f64 	%fd10, %fd1, %fd1;
	mul.f64 	%fd11, %fd10, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd12, %fd11;
	cvt.rzi.s32.f64 	%r1, %fd12;
	mov.f64 	%fd13, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd10;
	mov.f64 	%fd15, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd16, %fd12, %fd15, %fd14;
	mov.f64 	%fd17, 0d3E5AFD81DA6C3BAF;
	mov.f64 	%fd18, 0d3E21F07FCCF58BAD;
	fma.rn.f64 	%fd19, %fd18, %fd16, %fd17;
	mov.f64 	%fd20, 0d3E927E55F60F80E6;
	fma.rn.f64 	%fd21, %fd19, %fd16, %fd20;
	mov.f64 	%fd22, 0d3EC71DDA8F02D666;
	fma.rn.f64 	%fd23, %fd21, %fd16, %fd22;
	mov.f64 	%fd24, 0d3EFA01A013B894E0;
	fma.rn.f64 	%fd25, %fd23, %fd16, %fd24;
	mov.f64 	%fd26, 0d3F2A01A01D3AF788;
	fma.rn.f64 	%fd27, %fd25, %fd16, %fd26;
	mov.f64 	%fd28, 0d3F56C16C16C3A1EC;
	fma.rn.f64 	%fd29, %fd27, %fd16, %fd28;
	mov.f64 	%fd30, 0d3F81111111109161;
	fma.rn.f64 	%fd31, %fd29, %fd16, %fd30;
	mov.f64 	%fd32, 0d3FA55555555554C1;
	fma.rn.f64 	%fd33, %fd31, %fd16, %fd32;
	mov.f64 	%fd34, 0d3FC555555555556F;
	fma.rn.f64 	%fd35, %fd33, %fd16, %fd34;
	mov.f64 	%fd36, 0d3FE0000000000000;
	fma.rn.f64 	%fd37, %fd35, %fd16, %fd36;
	mul.f64 	%fd38, %fd37, %fd16;
	fma.rn.f64 	%fd2, %fd38, %fd16, %fd16;
	shl.b32 	%r2, %r1, 20;
	add.s32 	%r3, %r2, 1072693248;
	abs.s32 	%r4, %r1;
	setp.lt.s32 	%p2, %r4, 1021;
	@%p2 bra 	BB48_3;

	add.s32 	%r5, %r2, 1130364928;
	setp.lt.s32 	%p3, %r1, 0;
	mov.u32 	%r6, 0;
	selp.b32 	%r7, %r5, %r3, %p3;
	shr.s32 	%r8, %r1, 31;
	add.s32 	%r9, %r8, 1073741824;
	and.b32  	%r10, %r9, -57671680;
	add.s32 	%r11, %r7, -1048576;
	mov.b64 	%fd39, {%r6, %r10};
	fma.rn.f64 	%fd40, %fd2, %fd39, %fd39;
	mov.b64 	%fd41, {%r6, %r11};
	mul.f64 	%fd76, %fd40, %fd41;
	bra.uni 	BB48_4;

BB48_3:
	mov.u32 	%r12, 0;
	mov.b64 	%fd42, {%r12, %r3};
	fma.rn.f64 	%fd76, %fd2, %fd42, %fd42;

BB48_4:
	add.f64 	%fd43, %fd76, 0d3FF0000000000000;
	mov.f64 	%fd45, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd43;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd44,%f2;
	
	neg.f64 	%fd46, %fd43;
	fma.rn.f64 	%fd47, %fd46, %fd44, %fd45;
	fma.rn.f64 	%fd48, %fd47, %fd47, %fd47;
	fma.rn.f64 	%fd49, %fd48, %fd44, %fd44;
	neg.f64 	%fd50, %fd49;
	mov.f64 	%fd51, 0d4000000000000000;
	fma.rn.f64 	%fd52, %fd51, %fd50, %fd45;
	setp.gt.f64 	%p4, %fd1, 0d4075E00000000000;
	selp.f64 	%fd53, 0d3FF0000000000000, %fd52, %p4;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd53;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd53;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd9;
	}
	and.b32  	%r16, %r15, -2147483648;
	or.b32  	%r17, %r14, %r16;
	mov.b64 	%fd77, {%r13, %r17};
	bra.uni 	BB48_6;

BB48_5:
	mul.f64 	%fd54, %fd9, %fd9;
	mov.f64 	%fd55, 0dBF2B9093D89F0E23;
	mov.f64 	%fd56, 0d3F0ABFFC9B5786C4;
	fma.rn.f64 	%fd57, %fd56, %fd54, %fd55;
	mov.f64 	%fd58, 0d3F42FA2744C30B61;
	fma.rn.f64 	%fd59, %fd57, %fd54, %fd58;
	mov.f64 	%fd60, 0dBF57CF3B9C1E491D;
	fma.rn.f64 	%fd61, %fd59, %fd54, %fd60;
	mov.f64 	%fd62, 0d3F6D6C61D450119A;
	fma.rn.f64 	%fd63, %fd61, %fd54, %fd62;
	mov.f64 	%fd64, 0dBF8226DDD44294F5;
	fma.rn.f64 	%fd65, %fd63, %fd54, %fd64;
	mov.f64 	%fd66, 0d3F9664F45C2B04A6;
	fma.rn.f64 	%fd67, %fd65, %fd54, %fd66;
	mov.f64 	%fd68, 0dBFABA1BA1AD70754;
	fma.rn.f64 	%fd69, %fd67, %fd54, %fd68;
	mov.f64 	%fd70, 0d3FC111111110295E;
	fma.rn.f64 	%fd71, %fd69, %fd54, %fd70;
	mov.f64 	%fd72, 0dBFD555555555549F;
	fma.rn.f64 	%fd73, %fd71, %fd54, %fd72;
	mul.f64 	%fd74, %fd73, %fd54;
	fma.rn.f64 	%fd75, %fd74, %fd9, %fd9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r18, %temp}, %fd75;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd75;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd9;
	}
	and.b32  	%r21, %r20, -2147483648;
	or.b32  	%r22, %r19, %r21;
	mov.b64 	%fd77, {%r18, %r22};

BB48_6:
	st.param.f64	[func_retval0+0], %fd77;
	ret;
}

.visible .func  (.param .b32 func_retval0) _HCOT(
	.param .b32 _HCOT_param_0
)
{
	.local .align 4 .b8 	__local_depot49[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .s32 	%r<90>;
	.reg .f32 	%f<35>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot49;
	ld.param.f32 	%f32, [_HCOT_param_0];
	add.u64 	%rd5, %SPL, 0;
	mov.u32 	%r26, 2139095040;
	mov.b32 	%f10, %r26;
	abs.f32 	%f11, %f32;
	setp.neu.f32 	%p1, %f11, %f10;
	@%p1 bra 	BB49_2;

	mov.f32 	%f12, 0f00000000;
	mul.rn.f32 	%f32, %f32, %f12;

BB49_2:
	mul.f32 	%f13, %f32, 0f3F22F983;
	cvt.rni.s32.f32 	%r89, %f13;
	cvt.rn.f32.s32 	%f14, %r89;
	neg.f32 	%f15, %f14;
	mov.f32 	%f16, 0f3FC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f32;
	mov.f32 	%f18, 0f33A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0f27C234C5;
	fma.rn.f32 	%f33, %f15, %f20, %f19;
	abs.f32 	%f21, %f32;
	setp.leu.f32 	%p2, %f21, 0f47CE4780;
	@%p2 bra 	BB49_10;

	mov.b32 	%r2, %f32;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r28, %r3, 255;
	add.s32 	%r29, %r28, -128;
	shl.b32 	%r30, %r2, 8;
	or.b32  	%r4, %r30, -2147483648;
	shr.u32 	%r5, %r29, 5;
	mov.u32 	%r83, 0;
	mov.u64 	%rd11, 0;

BB49_4:
	.pragma "nounroll";
	mov.u64 	%rd7, __cudart_i2opi_f;
	add.s64 	%rd8, %rd7, %rd11;
	ld.const.u32 	%r31, [%rd8];
	mul.hi.u32 	%r33, %r31, %r4;
	mad.lo.s32 	%r34, %r31, %r4, %r83;
	setp.lt.u32 	%p3, %r34, %r83;
	selp.u32 	%r35, 1, 0, %p3;
	add.s32 	%r83, %r35, %r33;
	add.s64 	%rd9, %rd5, %rd11;
	st.local.u32 	[%rd9], %r34;
	add.s64 	%rd11, %rd11, 4;
	setp.ne.s64 	%p4, %rd11, 24;
	@%p4 bra 	BB49_4;

	and.b32  	%r86, %r2, -2147483648;
	st.local.u32 	[%rd5+24], %r83;
	mov.u32 	%r38, 6;
	sub.s32 	%r39, %r38, %r5;
	mul.wide.s32 	%rd10, %r39, 4;
	add.s64 	%rd4, %rd5, %rd10;
	ld.local.u32 	%r84, [%rd4];
	ld.local.u32 	%r85, [%rd4+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB49_7;

	mov.u32 	%r42, 32;
	sub.s32 	%r43, %r42, %r11;
	shr.u32 	%r44, %r85, %r43;
	shl.b32 	%r45, %r84, %r11;
	add.s32 	%r84, %r44, %r45;
	ld.local.u32 	%r46, [%rd4+-8];
	shr.u32 	%r48, %r46, %r43;
	shl.b32 	%r49, %r85, %r11;
	add.s32 	%r85, %r48, %r49;

BB49_7:
	shr.u32 	%r50, %r85, 30;
	shl.b32 	%r51, %r84, 2;
	add.s32 	%r87, %r50, %r51;
	shl.b32 	%r17, %r85, 2;
	shr.u32 	%r52, %r87, 31;
	shr.u32 	%r53, %r84, 30;
	add.s32 	%r54, %r52, %r53;
	neg.s32 	%r55, %r54;
	setp.eq.s32 	%p6, %r86, 0;
	selp.b32 	%r89, %r54, %r55, %p6;
	setp.eq.s32 	%p7, %r52, 0;
	mov.u32 	%r88, %r17;
	@%p7 bra 	BB49_9;

	not.b32 	%r56, %r87;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r57, 1, 0, %p8;
	add.s32 	%r87, %r57, %r56;
	xor.b32  	%r86, %r86, -2147483648;
	mov.u32 	%r88, %r19;

BB49_9:
	clz.b32 	%r58, %r87;
	setp.eq.s32 	%p9, %r58, 0;
	shl.b32 	%r59, %r87, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r88, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32 	%r64, %r87, %r63, %p9;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32 	%p10, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32 	%r71, %r70, %r67, %p10;
	selp.b32 	%r72, -1, 0, %p10;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r86;
	mov.b32 	%f33, %r82;

BB49_10:
	mul.f32 	%f22, %f33, %f33;
	mov.f32 	%f23, 0fBF52B7F4;
	mov.f32 	%f24, 0f3B86D46D;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	fma.rn.f32 	%f26, %f33, %f33, 0fC01E09D0;
	rcp.rn.f32 	%f27, %f26;
	mul.f32 	%f28, %f25, %f27;
	mul.f32 	%f29, %f28, %f22;
	fma.rn.f32 	%f34, %f29, %f33, %f33;
	{
	.reg .b32 temp;
	and.b32	 temp, %r89, 1;
	setp.b32.eq 	 %p11, temp, 1;
	}
	@!%p11 bra 	BB49_12;
	bra.uni 	BB49_11;

BB49_11:
	mov.f32 	%f30, 0fBF800000;
	div.rn.f32 	%f34, %f30, %f34;

BB49_12:
	rcp.rn.f32 	%f31, %f34;
	st.param.f32	[func_retval0+0], %f31;
	ret;
}

.visible .func  (.param .b64 func_retval0) _COT(
	.param .b64 _COT_param_0
)
{
	.local .align 4 .b8 	__local_depot50[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<7>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<70>;


	mov.u64 	%SPL, __local_depot50;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd67, [_COT_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd11, %rd3;
	abs.f64 	%fd12, %fd67;
	setp.neu.f64 	%p1, %fd12, %fd11;
	@%p1 bra 	BB50_2;

	mov.f64 	%fd13, 0d0000000000000000;
	mul.rn.f64 	%fd67, %fd67, %fd13;

BB50_2:
	mul.f64 	%fd14, %fd67, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r6, %fd14;
	st.local.u32 	[%rd1], %r6;
	cvt.rn.f64.s32 	%fd15, %r6;
	neg.f64 	%fd16, %fd15;
	mov.f64 	%fd17, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd18, %fd16, %fd17, %fd67;
	mov.f64 	%fd19, 0d3C91A62633145C00;
	fma.rn.f64 	%fd20, %fd16, %fd19, %fd18;
	mov.f64 	%fd21, 0d397B839A252049C0;
	fma.rn.f64 	%fd68, %fd16, %fd21, %fd20;
	abs.f64 	%fd22, %fd67;
	setp.leu.f64 	%p2, %fd22, 0d41E0000000000000;
	@%p2 bra 	BB50_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd67;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd68, [retval0+0];
	}
	
	ld.local.u32 	%r6, [%rd1];

BB50_4:
	mul.f64 	%fd23, %fd68, %fd68;
	mov.f64 	%fd24, 0dBEF9757C5B27EBB1;
	mov.f64 	%fd25, 0d3EE48DAC2799BCB9;
	fma.rn.f64 	%fd26, %fd25, %fd23, %fd24;
	mov.f64 	%fd27, 0d3F0980E90FD91E04;
	fma.rn.f64 	%fd28, %fd26, %fd23, %fd27;
	mov.f64 	%fd29, 0dBEFAE2B0417D7E1D;
	fma.rn.f64 	%fd30, %fd28, %fd23, %fd29;
	mov.f64 	%fd31, 0d3F119F5341BFBA57;
	fma.rn.f64 	%fd32, %fd30, %fd23, %fd31;
	mov.f64 	%fd33, 0d3F15E791A00F6919;
	fma.rn.f64 	%fd34, %fd32, %fd23, %fd33;
	mov.f64 	%fd35, 0d3F2FF2E7FADEC73A;
	fma.rn.f64 	%fd36, %fd34, %fd23, %fd35;
	mov.f64 	%fd37, 0d3F434BC1B206DA62;
	fma.rn.f64 	%fd38, %fd36, %fd23, %fd37;
	mov.f64 	%fd39, 0d3F57DB18EF2F83F9;
	fma.rn.f64 	%fd40, %fd38, %fd23, %fd39;
	mov.f64 	%fd41, 0d3F6D6D2E7AE49FBC;
	fma.rn.f64 	%fd42, %fd40, %fd23, %fd41;
	mov.f64 	%fd43, 0d3F8226E3A816A776;
	fma.rn.f64 	%fd44, %fd42, %fd23, %fd43;
	mov.f64 	%fd45, 0d3F9664F485D25660;
	fma.rn.f64 	%fd46, %fd44, %fd23, %fd45;
	mov.f64 	%fd47, 0d3FABA1BA1BABF31D;
	fma.rn.f64 	%fd48, %fd46, %fd23, %fd47;
	mov.f64 	%fd49, 0d3FC11111111105D2;
	fma.rn.f64 	%fd50, %fd48, %fd23, %fd49;
	mov.f64 	%fd51, 0d3FD555555555555E;
	fma.rn.f64 	%fd52, %fd50, %fd23, %fd51;
	mul.f64 	%fd6, %fd52, %fd23;
	fma.rn.f64 	%fd69, %fd6, %fd68, %fd68;
	{
	.reg .b32 temp;
	and.b32	 temp, %r6, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	@!%p3 bra 	BB50_6;
	bra.uni 	BB50_5;

BB50_5:
	sub.f64 	%fd55, %fd69, %fd68;
	neg.f64 	%fd56, %fd55;
	fma.rn.f64 	%fd57, %fd6, %fd68, %fd56;
	
	cvt.rn.f32.f64     %f1,%fd69;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd54,%f2;
	
	neg.f64 	%fd58, %fd69;
	mov.f64 	%fd59, 0d3FF0000000000000;
	fma.rn.f64 	%fd60, %fd58, %fd54, %fd59;
	fma.rn.f64 	%fd61, %fd60, %fd60, %fd60;
	fma.rn.f64 	%fd62, %fd61, %fd54, %fd54;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd64, %fd69, %fd63, %fd59;
	fma.rn.f64 	%fd65, %fd63, %fd57, %fd64;
	fma.rn.f64 	%fd69, %fd65, %fd63, %fd63;

BB50_6:
	rcp.rn.f64 	%fd66, %fd69;
	st.param.f64	[func_retval0+0], %fd66;
	ret;
}

.visible .func  (.param .b32 func_retval0) acosf(
	.param .b32 acosf_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<2>;
	.reg .f32 	%f<27>;


	ld.param.f32 	%f1, [acosf_param_0];
	abs.f32 	%f2, %f1;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0f3F000000;
	sqrt.rn.f32 	%f6, %f5;
	setp.gt.f32 	%p1, %f2, 0f3F11EB85;
	selp.f32 	%f7, %f6, %f2, %p1;
	mul.f32 	%f8, %f7, %f7;
	mov.f32 	%f9, 0f3C94D2E9;
	mov.f32 	%f10, 0f3D53F941;
	fma.rn.f32 	%f11, %f10, %f8, %f9;
	mov.f32 	%f12, 0f3D3F841F;
	fma.rn.f32 	%f13, %f11, %f8, %f12;
	mov.f32 	%f14, 0f3D994929;
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	mov.f32 	%f16, 0f3E2AAB94;
	fma.rn.f32 	%f17, %f15, %f8, %f16;
	mul.f32 	%f18, %f17, %f8;
	fma.rn.f32 	%f19, %f18, %f7, %f7;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f3FC90FDB;
	sub.f32 	%f22, %f21, %f19;
	selp.f32 	%f23, %f20, %f22, %p1;
	mov.b32 	%r1, %f1;
	setp.lt.s32 	%p2, %r1, 0;
	mov.f32 	%f24, 0f40490FDB;
	sub.f32 	%f25, %f24, %f23;
	selp.f32 	%f26, %f25, %f23, %p2;
	st.param.f32	[func_retval0+0], %f26;
	ret;
}

.visible .func  (.param .b64 func_retval0) acos(
	.param .b64 acos_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<3>;
	.reg .f64 	%fd<79>;


	ld.param.f64 	%fd8, [acos_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd8;
	}
	abs.f64 	%fd1, %fd8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd1;
	}
	setp.lt.s32 	%p1, %r2, 1071801958;
	@%p1 bra 	BB52_3;

	mov.f64 	%fd9, 0d3FE0000000000000;
	mov.f64 	%fd10, 0dBFE0000000000000;
	fma.rn.f64 	%fd11, %fd10, %fd1, %fd9;
	sqrt.rn.f64 	%fd12, %fd11;
	mov.f64 	%fd13, 0dBFB3823B180754AF;
	mov.f64 	%fd14, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd15, %fd14, %fd11, %fd13;
	mov.f64 	%fd16, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd17, %fd15, %fd11, %fd16;
	mov.f64 	%fd18, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd19, %fd17, %fd11, %fd18;
	mov.f64 	%fd20, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd21, %fd19, %fd11, %fd20;
	mov.f64 	%fd22, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd23, %fd21, %fd11, %fd22;
	mov.f64 	%fd24, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd25, %fd23, %fd11, %fd24;
	mov.f64 	%fd26, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd27, %fd25, %fd11, %fd26;
	mov.f64 	%fd28, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd29, %fd27, %fd11, %fd28;
	mov.f64 	%fd30, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd31, %fd29, %fd11, %fd30;
	mov.f64 	%fd32, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd33, %fd31, %fd11, %fd32;
	mov.f64 	%fd34, 0d3FB333333320F91B;
	fma.rn.f64 	%fd35, %fd33, %fd11, %fd34;
	mov.f64 	%fd36, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd37, %fd35, %fd11, %fd36;
	mul.f64 	%fd38, %fd37, %fd11;
	fma.rn.f64 	%fd39, %fd38, %fd12, %fd12;
	add.f64 	%fd78, %fd39, %fd39;
	setp.gt.s32 	%p2, %r1, -1;
	@%p2 bra 	BB52_6;

	mov.f64 	%fd40, 0dBCA1A62633145C07;
	add.rn.f64 	%fd41, %fd78, %fd40;
	neg.f64 	%fd42, %fd41;
	mov.f64 	%fd43, 0d400921FB54442D18;
	add.rn.f64 	%fd78, %fd43, %fd42;
	bra.uni 	BB52_6;

BB52_3:
	setp.lt.s32 	%p3, %r1, 0;
	mul.f64 	%fd44, %fd1, %fd1;
	mov.f64 	%fd45, 0dBFB3823B180754AF;
	mov.f64 	%fd46, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd47, %fd46, %fd44, %fd45;
	mov.f64 	%fd48, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd49, %fd47, %fd44, %fd48;
	mov.f64 	%fd50, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd51, %fd49, %fd44, %fd50;
	mov.f64 	%fd52, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd53, %fd51, %fd44, %fd52;
	mov.f64 	%fd54, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd55, %fd53, %fd44, %fd54;
	mov.f64 	%fd56, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd57, %fd55, %fd44, %fd56;
	mov.f64 	%fd58, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd59, %fd57, %fd44, %fd58;
	mov.f64 	%fd60, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd61, %fd59, %fd44, %fd60;
	mov.f64 	%fd62, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd63, %fd61, %fd44, %fd62;
	mov.f64 	%fd64, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd65, %fd63, %fd44, %fd64;
	mov.f64 	%fd66, 0d3FB333333320F91B;
	fma.rn.f64 	%fd67, %fd65, %fd44, %fd66;
	mov.f64 	%fd68, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd69, %fd67, %fd44, %fd68;
	mul.f64 	%fd70, %fd69, %fd44;
	fma.rn.f64 	%fd4, %fd70, %fd1, %fd1;
	@%p3 bra 	BB52_5;

	mov.f64 	%fd71, 0dBC91A62633145C07;
	add.rn.f64 	%fd72, %fd4, %fd71;
	neg.f64 	%fd73, %fd72;
	mov.f64 	%fd74, 0d3FF921FB54442D18;
	add.rn.f64 	%fd78, %fd74, %fd73;
	bra.uni 	BB52_6;

BB52_5:
	mov.f64 	%fd75, 0d3C91A62633145C07;
	add.rn.f64 	%fd76, %fd4, %fd75;
	mov.f64 	%fd77, 0d3FF921FB54442D18;
	add.rn.f64 	%fd78, %fd77, %fd76;

BB52_6:
	st.param.f64	[func_retval0+0], %fd78;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _HCOSS(
	.param .b32 _HCOSS_param_0
)
{
	.local .align 4 .b8 	__local_depot53[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<15>;
	.reg .s32 	%r<93>;
	.reg .f32 	%f<45>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot53;
	ld.param.f32 	%f43, [_HCOSS_param_0];
	add.u64 	%rd5, %SPL, 0;
	mov.u32 	%r26, 2139095040;
	mov.b32 	%f7, %r26;
	abs.f32 	%f8, %f43;
	setp.neu.f32 	%p1, %f8, %f7;
	@%p1 bra 	BB53_2;

	mov.f32 	%f9, 0f00000000;
	mul.rn.f32 	%f43, %f43, %f9;

BB53_2:
	mul.f32 	%f10, %f43, 0f3F22F983;
	cvt.rni.s32.f32 	%r92, %f10;
	cvt.rn.f32.s32 	%f11, %r92;
	neg.f32 	%f12, %f11;
	mov.f32 	%f13, 0f3FC90FDA;
	fma.rn.f32 	%f14, %f12, %f13, %f43;
	mov.f32 	%f15, 0f33A22168;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mov.f32 	%f17, 0f27C234C5;
	fma.rn.f32 	%f44, %f12, %f17, %f16;
	abs.f32 	%f18, %f43;
	setp.leu.f32 	%p2, %f18, 0f47CE4780;
	@%p2 bra 	BB53_10;

	mov.b32 	%r2, %f43;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r28, %r3, 255;
	add.s32 	%r29, %r28, -128;
	shl.b32 	%r30, %r2, 8;
	or.b32  	%r4, %r30, -2147483648;
	shr.u32 	%r5, %r29, 5;
	mov.u32 	%r86, 0;
	mov.u64 	%rd11, 0;

BB53_4:
	.pragma "nounroll";
	mov.u64 	%rd7, __cudart_i2opi_f;
	add.s64 	%rd8, %rd7, %rd11;
	ld.const.u32 	%r31, [%rd8];
	mul.hi.u32 	%r33, %r31, %r4;
	mad.lo.s32 	%r34, %r31, %r4, %r86;
	setp.lt.u32 	%p3, %r34, %r86;
	selp.u32 	%r35, 1, 0, %p3;
	add.s32 	%r86, %r35, %r33;
	add.s64 	%rd9, %rd5, %rd11;
	st.local.u32 	[%rd9], %r34;
	add.s64 	%rd11, %rd11, 4;
	setp.ne.s64 	%p4, %rd11, 24;
	@%p4 bra 	BB53_4;

	and.b32  	%r89, %r2, -2147483648;
	st.local.u32 	[%rd5+24], %r86;
	mov.u32 	%r38, 6;
	sub.s32 	%r39, %r38, %r5;
	mul.wide.s32 	%rd10, %r39, 4;
	add.s64 	%rd4, %rd5, %rd10;
	ld.local.u32 	%r87, [%rd4];
	ld.local.u32 	%r88, [%rd4+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB53_7;

	mov.u32 	%r42, 32;
	sub.s32 	%r43, %r42, %r11;
	shr.u32 	%r44, %r88, %r43;
	shl.b32 	%r45, %r87, %r11;
	add.s32 	%r87, %r44, %r45;
	ld.local.u32 	%r46, [%rd4+-8];
	shr.u32 	%r48, %r46, %r43;
	shl.b32 	%r49, %r88, %r11;
	add.s32 	%r88, %r48, %r49;

BB53_7:
	shr.u32 	%r50, %r88, 30;
	shl.b32 	%r51, %r87, 2;
	add.s32 	%r90, %r50, %r51;
	shl.b32 	%r17, %r88, 2;
	shr.u32 	%r52, %r90, 31;
	shr.u32 	%r53, %r87, 30;
	add.s32 	%r54, %r52, %r53;
	neg.s32 	%r55, %r54;
	setp.eq.s32 	%p6, %r89, 0;
	selp.b32 	%r92, %r54, %r55, %p6;
	setp.eq.s32 	%p7, %r52, 0;
	mov.u32 	%r91, %r17;
	@%p7 bra 	BB53_9;

	not.b32 	%r56, %r90;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r57, 1, 0, %p8;
	add.s32 	%r90, %r57, %r56;
	xor.b32  	%r89, %r89, -2147483648;
	mov.u32 	%r91, %r19;

BB53_9:
	clz.b32 	%r58, %r90;
	setp.eq.s32 	%p9, %r58, 0;
	shl.b32 	%r59, %r90, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r91, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32 	%r64, %r90, %r63, %p9;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32 	%p10, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32 	%r71, %r70, %r67, %p10;
	selp.b32 	%r72, -1, 0, %p10;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r89;
	mov.b32 	%f44, %r82;

BB53_10:
	mul.f32 	%f19, %f44, %f44;
	mov.f32 	%f20, 0fBAB6061A;
	mov.f32 	%f21, 0f37CCF5CE;
	fma.rn.f32 	%f22, %f21, %f19, %f20;
	mov.f32 	%f23, 0f3D2AAAA5;
	fma.rn.f32 	%f24, %f22, %f19, %f23;
	mov.f32 	%f25, 0fBF000000;
	fma.rn.f32 	%f26, %f24, %f19, %f25;
	mov.f32 	%f27, 0f3F800000;
	fma.rn.f32 	%f28, %f26, %f19, %f27;
	mov.f32 	%f29, 0f3C08839E;
	mov.f32 	%f30, 0fB94CA1F9;
	fma.rn.f32 	%f31, %f30, %f19, %f29;
	mov.f32 	%f32, 0fBE2AAAA3;
	fma.rn.f32 	%f33, %f31, %f19, %f32;
	mov.f32 	%f34, 0f00000000;
	fma.rn.f32 	%f35, %f33, %f19, %f34;
	fma.rn.f32 	%f36, %f35, %f44, %f44;
	{
	.reg .b32 temp;
	and.b32	 temp, %r92, 1;
	setp.b32.eq 	 %p11, temp, 1;
	}
	not.pred 	%p12, %p11;
	selp.f32 	%f37, %f36, %f28, %p12;
	selp.f32 	%f38, %f28, %f36, %p12;
	and.b32  	%r83, %r92, 2;
	setp.eq.s32 	%p13, %r83, 0;
	neg.f32 	%f39, %f37;
	selp.f32 	%f40, %f37, %f39, %p13;
	add.s32 	%r84, %r92, 1;
	and.b32  	%r85, %r84, 2;
	setp.eq.s32 	%p14, %r85, 0;
	neg.f32 	%f41, %f38;
	selp.f32 	%f42, %f38, %f41, %p14;
	st.param.f32	[func_retval0+0], %f42;
	st.param.f32	[func_retval0+4], %f40;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _COSS(
	.param .b64 _COSS_param_0
)
{
	.local .align 4 .b8 	__local_depot54[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .s32 	%r<10>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<57>;


	mov.u64 	%SPL, __local_depot54;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd55, [_COSS_param_0];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd7, %rd3;
	abs.f64 	%fd8, %fd55;
	setp.neu.f64 	%p1, %fd8, %fd7;
	@%p1 bra 	BB54_2;

	mov.f64 	%fd9, 0d0000000000000000;
	mul.rn.f64 	%fd55, %fd55, %fd9;

BB54_2:
	mul.f64 	%fd10, %fd55, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r9, %fd10;
	st.local.u32 	[%rd1], %r9;
	cvt.rn.f64.s32 	%fd11, %r9;
	neg.f64 	%fd12, %fd11;
	mov.f64 	%fd13, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd55;
	mov.f64 	%fd15, 0d3C91A62633145C00;
	fma.rn.f64 	%fd16, %fd12, %fd15, %fd14;
	mov.f64 	%fd17, 0d397B839A252049C0;
	fma.rn.f64 	%fd56, %fd12, %fd17, %fd16;
	abs.f64 	%fd18, %fd55;
	setp.leu.f64 	%p2, %fd18, 0d41E0000000000000;
	@%p2 bra 	BB54_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd56, [retval0+0];
	}
	
	ld.local.u32 	%r9, [%rd1];

BB54_4:
	mul.rn.f64 	%fd19, %fd56, %fd56;
	mov.f64 	%fd20, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd21, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd22, %fd21, %fd19, %fd20;
	mov.f64 	%fd23, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd24, %fd22, %fd19, %fd23;
	mov.f64 	%fd25, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd26, %fd24, %fd19, %fd25;
	mov.f64 	%fd27, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd28, %fd26, %fd19, %fd27;
	mov.f64 	%fd29, 0d3FA5555555555551;
	fma.rn.f64 	%fd30, %fd28, %fd19, %fd29;
	mov.f64 	%fd31, 0dBFE0000000000000;
	fma.rn.f64 	%fd32, %fd30, %fd19, %fd31;
	mov.f64 	%fd33, 0d3FF0000000000000;
	fma.rn.f64 	%fd34, %fd32, %fd19, %fd33;
	mov.f64 	%fd35, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd36, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd37, %fd36, %fd19, %fd35;
	mov.f64 	%fd38, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd39, %fd37, %fd19, %fd38;
	mov.f64 	%fd40, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd41, %fd39, %fd19, %fd40;
	mov.f64 	%fd42, 0d3F81111111110818;
	fma.rn.f64 	%fd43, %fd41, %fd19, %fd42;
	mov.f64 	%fd44, 0dBFC5555555555554;
	fma.rn.f64 	%fd45, %fd43, %fd19, %fd44;
	mov.f64 	%fd46, 0d0000000000000000;
	fma.rn.f64 	%fd47, %fd45, %fd19, %fd46;
	fma.rn.f64 	%fd48, %fd47, %fd56, %fd56;
	{
	.reg .b32 temp;
	and.b32	 temp, %r9, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	not.pred 	%p4, %p3;
	selp.f64 	%fd49, %fd48, %fd34, %p4;
	selp.f64 	%fd50, %fd34, %fd48, %p4;
	and.b32  	%r6, %r9, 2;
	setp.eq.s32 	%p5, %r6, 0;
	neg.f64 	%fd51, %fd49;
	selp.f64 	%fd52, %fd49, %fd51, %p5;
	add.s32 	%r7, %r9, 1;
	and.b32  	%r8, %r7, 2;
	setp.eq.s32 	%p6, %r8, 0;
	neg.f64 	%fd53, %fd50;
	selp.f64 	%fd54, %fd50, %fd53, %p6;
	st.param.f64	[func_retval0+0], %fd54;
	st.param.f64	[func_retval0+8], %fd52;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _HCOSSH(
	.param .b32 _HCOSSH_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<48>;


	ld.param.f32 	%f7, [_HCOSSH_param_0];
	abs.f32 	%f1, %f7;
	setp.ltu.f32 	%p1, %f1, 0f3F800000;
	mul.f32 	%f8, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f2, %f8;
	mov.u32 	%r1, 2139095040;
	mov.b32 	%f3, %r1;
	@%p1 bra 	BB55_2;

	setp.ltu.f32 	%p2, %f1, 0f42B40000;
	mov.f32 	%f9, 0fBF317200;
	fma.rn.f32 	%f10, %f2, %f9, %f1;
	mov.f32 	%f11, 0fB5BFBE8E;
	fma.rn.f32 	%f12, %f2, %f11, %f10;
	mul.f32 	%f13, %f12, 0f3FB8AA3B;
	ex2.approx.f32 	%f14, %f13;
	add.f32 	%f15, %f2, 0fC0000000;
	ex2.approx.f32 	%f16, %f15;
	mul.f32 	%f17, %f14, %f16;
	mov.f32 	%f18, 0f3E000000;
	div.approx.f32 	%f19, %f18, %f17;
	neg.f32 	%f20, %f19;
	mov.f32 	%f21, 0f40000000;
	fma.rn.f32 	%f22, %f21, %f17, %f20;
	selp.f32 	%f23, %f22, %f3, %p2;
	mov.b32 	%r2, %f23;
	mov.b32 	%r3, %f7;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f47, %r5;
	bra.uni 	BB55_3;

BB55_2:
	mul.f32 	%f24, %f7, %f7;
	mov.f32 	%f25, 0f394FFF49;
	mov.f32 	%f26, 0f363D0ADA;
	fma.rn.f32 	%f27, %f26, %f24, %f25;
	mov.f32 	%f28, 0f3C08889A;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mov.f32 	%f30, 0f3E2AAAAB;
	fma.rn.f32 	%f31, %f29, %f24, %f30;
	mul.f32 	%f32, %f31, %f24;
	fma.rn.f32 	%f47, %f32, %f7, %f7;

BB55_3:
	mov.f32 	%f33, 0fBF317200;
	fma.rn.f32 	%f34, %f2, %f33, %f1;
	mov.f32 	%f35, 0fB5BFBE8E;
	fma.rn.f32 	%f36, %f2, %f35, %f34;
	mul.f32 	%f37, %f36, 0f3FB8AA3B;
	ex2.approx.f32 	%f38, %f37;
	add.f32 	%f39, %f2, 0fC0000000;
	ex2.approx.f32 	%f40, %f39;
	mul.f32 	%f41, %f38, %f40;
	mov.f32 	%f42, 0f3E000000;
	div.approx.f32 	%f43, %f42, %f41;
	mov.f32 	%f44, 0f40000000;
	fma.rn.f32 	%f45, %f44, %f41, %f43;
	setp.ltu.f32 	%p3, %f1, 0f42B40000;
	selp.f32 	%f46, %f45, %f3, %p3;
	st.param.f32	[func_retval0+0], %f46;
	st.param.f32	[func_retval0+4], %f47;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _COSSH(
	.param .b64 _COSSH_param_0
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<31>;
	.reg .f32 	%f<6>;
	.reg .s64 	%rd<2>;
	.reg .f64 	%fd<116>;


	ld.param.f64 	%fd113, [_COSSH_param_0];
	abs.f64 	%fd1, %fd113;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd1;
	}
	setp.lt.s32 	%p1, %r1, 1072693248;
	@%p1 bra 	BB56_2;

	mul.f64 	%fd16, %fd1, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd17, %fd16;
	cvt.rzi.s32.f64 	%r5, %fd17;
	add.s32 	%r6, %r5, -1;
	mov.f64 	%fd18, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd19, %fd17, %fd18, %fd1;
	mov.f64 	%fd20, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd21, %fd17, %fd20, %fd19;
	shl.b32 	%r7, %r1, 1;
	setp.lt.u32 	%p2, %r7, 2142496327;
	selp.f64 	%fd22, %fd1, %fd21, %p2;
	selp.b32 	%r8, 0, %r6, %p2;
	mov.u32 	%r9, 0;
	mov.f64 	%fd23, 0d3E5AFD81DA6C3BAF;
	mov.f64 	%fd24, 0d3E21F07FCCF58BAD;
	fma.rn.f64 	%fd25, %fd24, %fd22, %fd23;
	mov.f64 	%fd26, 0d3E927E55F60F80E6;
	fma.rn.f64 	%fd27, %fd25, %fd22, %fd26;
	mov.f64 	%fd28, 0d3EC71DDA8F02D666;
	fma.rn.f64 	%fd29, %fd27, %fd22, %fd28;
	mov.f64 	%fd30, 0d3EFA01A013B894E0;
	fma.rn.f64 	%fd31, %fd29, %fd22, %fd30;
	mov.f64 	%fd32, 0d3F2A01A01D3AF788;
	fma.rn.f64 	%fd33, %fd31, %fd22, %fd32;
	mov.f64 	%fd34, 0d3F56C16C16C3A1EC;
	fma.rn.f64 	%fd35, %fd33, %fd22, %fd34;
	mov.f64 	%fd36, 0d3F81111111109161;
	fma.rn.f64 	%fd37, %fd35, %fd22, %fd36;
	mov.f64 	%fd38, 0d3FA55555555554C1;
	fma.rn.f64 	%fd39, %fd37, %fd22, %fd38;
	mov.f64 	%fd40, 0d3FC555555555556F;
	fma.rn.f64 	%fd41, %fd39, %fd22, %fd40;
	mov.f64 	%fd42, 0d3FE0000000000000;
	fma.rn.f64 	%fd43, %fd41, %fd22, %fd42;
	mul.f64 	%fd44, %fd43, %fd22;
	fma.rn.f64 	%fd45, %fd44, %fd22, %fd22;
	setp.eq.s32 	%p3, %r8, 1024;
	selp.b32 	%r10, -1, 0, %p3;
	add.s32 	%r11, %r10, %r8;
	shl.b32 	%r12, %r11, 20;
	add.s32 	%r13, %r12, 1072693248;
	mov.b64 	%fd46, {%r9, %r13};
	mov.u32 	%r14, 1071644672;
	mov.b64 	%fd47, {%r9, %r14};
	sub.f64 	%fd48, %fd46, %fd47;
	fma.rn.f64 	%fd49, %fd45, %fd46, %fd48;
	add.f64 	%fd50, %fd49, %fd49;
	selp.f64 	%fd51, %fd50, %fd49, %p3;
	setp.eq.s32 	%p4, %r7, 0;
	selp.f64 	%fd52, %fd22, %fd51, %p4;
	mov.f64 	%fd53, 0d3FF0000000000000;
	mov.f64 	%fd54, 0d4000000000000000;
	fma.rn.f64 	%fd55, %fd54, %fd52, %fd53;
	div.rn.f64 	%fd56, %fd52, %fd55;
	add.f64 	%fd57, %fd52, %fd56;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd58, %rd1;
	setp.ltu.f64 	%p5, %fd1, 0d408633CE8FB9F87E;
	selp.f64 	%fd112, %fd57, %fd58, %p5;
	bra.uni 	BB56_3;

BB56_2:
	mul.f64 	%fd59, %fd1, %fd1;
	mov.f64 	%fd60, 0d3E5AE54AA7F65A50;
	mov.f64 	%fd61, 0d3DE66F72AF4891C2;
	fma.rn.f64 	%fd62, %fd61, %fd59, %fd60;
	mov.f64 	%fd63, 0d3EC71DE4F068906D;
	fma.rn.f64 	%fd64, %fd62, %fd59, %fd63;
	mov.f64 	%fd65, 0d3F2A01A01848AC60;
	fma.rn.f64 	%fd66, %fd64, %fd59, %fd65;
	mov.f64 	%fd67, 0d3F81111111121E55;
	fma.rn.f64 	%fd68, %fd66, %fd59, %fd67;
	mov.f64 	%fd69, 0d3FC555555555547B;
	fma.rn.f64 	%fd70, %fd68, %fd59, %fd69;
	mul.f64 	%fd71, %fd70, %fd59;
	fma.rn.f64 	%fd112, %fd71, %fd1, %fd1;

BB56_3:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd113;
	}
	and.b32  	%r16, %r15, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd112;
	}
	or.b32  	%r18, %r17, %r16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd112;
	}
	mov.b64 	%fd5, {%r19, %r18};
	setp.lt.u32 	%p6, %r1, 1082536911;
	@%p6 bra 	BB56_7;

	setp.leu.f64 	%p7, %fd1, 0d0000000000000000;
	@%p7 bra 	BB56_6;

	mov.u32 	%r20, 2139095040;
	mov.b32 	%f1, %r20;
	cvt.f64.f32 	%fd113, %f1;

BB56_6:
	add.f64 	%fd115, %fd113, %fd113;
	bra.uni 	BB56_11;

BB56_7:
	mul.f64 	%fd72, %fd1, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd73, %fd72;
	cvt.rzi.s32.f64 	%r21, %fd73;
	mov.f64 	%fd74, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd75, %fd73, %fd74, %fd1;
	mov.f64 	%fd76, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd77, %fd73, %fd76, %fd75;
	mov.f64 	%fd78, 0d3E928A27E30F5561;
	mov.f64 	%fd79, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd80, %fd79, %fd77, %fd78;
	mov.f64 	%fd81, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd82, %fd80, %fd77, %fd81;
	mov.f64 	%fd83, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd84, %fd82, %fd77, %fd83;
	mov.f64 	%fd85, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd86, %fd84, %fd77, %fd85;
	mov.f64 	%fd87, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd88, %fd86, %fd77, %fd87;
	mov.f64 	%fd89, 0d3F8111111111A24E;
	fma.rn.f64 	%fd90, %fd88, %fd77, %fd89;
	mov.f64 	%fd91, 0d3FA555555555211D;
	fma.rn.f64 	%fd92, %fd90, %fd77, %fd91;
	mov.f64 	%fd93, 0d3FC5555555555530;
	fma.rn.f64 	%fd94, %fd92, %fd77, %fd93;
	mov.f64 	%fd95, 0d3FE0000000000005;
	fma.rn.f64 	%fd96, %fd94, %fd77, %fd95;
	mov.f64 	%fd97, 0d3FF0000000000000;
	fma.rn.f64 	%fd98, %fd96, %fd77, %fd97;
	fma.rn.f64 	%fd9, %fd98, %fd77, %fd97;
	add.s32 	%r2, %r21, -2;
	shl.b32 	%r3, %r2, 20;
	add.s32 	%r4, %r3, 1072693248;
	abs.s32 	%r22, %r2;
	setp.lt.s32 	%p8, %r22, 1021;
	@%p8 bra 	BB56_9;

	add.s32 	%r23, %r3, 1130364928;
	setp.lt.s32 	%p9, %r2, 0;
	mov.u32 	%r24, 0;
	selp.b32 	%r25, %r23, %r4, %p9;
	shr.s32 	%r26, %r2, 31;
	add.s32 	%r27, %r26, 1073741824;
	and.b32  	%r28, %r27, -57671680;
	add.s32 	%r29, %r25, -1048576;
	mov.b64 	%fd99, {%r24, %r28};
	mul.f64 	%fd100, %fd9, %fd99;
	mov.b64 	%fd101, {%r24, %r29};
	mul.f64 	%fd114, %fd100, %fd101;
	bra.uni 	BB56_10;

BB56_9:
	mov.u32 	%r30, 0;
	mov.b64 	%fd102, {%r30, %r4};
	mul.f64 	%fd114, %fd102, %fd9;

BB56_10:
	
	cvt.rn.f32.f64     %f2,%fd114;
	
	
	rcp.approx.f32.ftz %f3,%f2;
	
	
	cvt.f64.f32        %fd104,%f3;
	
	neg.f64 	%fd105, %fd114;
	fma.rn.f64 	%fd107, %fd105, %fd104, %fd97;
	fma.rn.f64 	%fd108, %fd107, %fd107, %fd107;
	fma.rn.f64 	%fd109, %fd108, %fd104, %fd104;
	mul.f64 	%fd110, %fd109, 0d3FC0000000000000;
	mov.f64 	%fd111, 0d4000000000000000;
	fma.rn.f64 	%fd115, %fd111, %fd114, %fd110;

BB56_11:
	st.param.f64	[func_retval0+0], %fd115;
	st.param.f64	[func_retval0+8], %fd5;
	ret;
}

.visible .func  (.param .b32 func_retval0) _HEXP(
	.param .b32 _HEXP_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<2>;
	.reg .f32 	%f<16>;


	ld.param.f32 	%f1, [_HEXP_param_0];
	mul.f32 	%f2, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f3, %f2;
	mov.f32 	%f4, 0fBF317200;
	fma.rn.f32 	%f5, %f3, %f4, %f1;
	mov.f32 	%f6, 0fB5BFBE8E;
	fma.rn.f32 	%f7, %f3, %f6, %f5;
	mul.f32 	%f8, %f7, 0f3FB8AA3B;
	ex2.approx.f32 	%f9, %f8;
	add.f32 	%f10, %f3, 0f00000000;
	ex2.approx.f32 	%f11, %f10;
	mul.f32 	%f12, %f9, %f11;
	setp.lt.f32 	%p1, %f1, 0fC2D20000;
	selp.f32 	%f13, 0f00000000, %f12, %p1;
	mov.u32 	%r1, 2139095040;
	mov.b32 	%f14, %r1;
	setp.gt.f32 	%p2, %f1, 0f42D20000;
	selp.f32 	%f15, %f14, %f13, %p2;
	st.param.f32	[func_retval0+0], %f15;
	ret;
}

.visible .func  (.param .b64 func_retval0) _EXP(
	.param .b64 _EXP_param_0
)
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<14>;
	.reg .s64 	%rd<2>;
	.reg .f64 	%fd<43>;


	ld.param.f64 	%fd6, [_EXP_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd6;
	}
	setp.lt.u32 	%p1, %r1, 1082535491;
	setp.lt.s32 	%p2, %r1, -1064875759;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB58_2;

	setp.lt.s32 	%p4, %r1, 0;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd7, %rd1;
	selp.f64 	%fd8, 0d0000000000000000, %fd7, %p4;
	abs.f64 	%fd9, %fd6;
	setp.gtu.f64 	%p5, %fd9, %fd7;
	add.f64 	%fd10, %fd6, %fd6;
	selp.f64 	%fd42, %fd10, %fd8, %p5;
	bra.uni 	BB58_5;

BB58_2:
	mul.f64 	%fd11, %fd6, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd12, %fd11;
	cvt.rzi.s32.f64 	%r2, %fd12;
	mov.f64 	%fd13, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd14, %fd12, %fd13, %fd6;
	mov.f64 	%fd15, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd16, %fd12, %fd15, %fd14;
	mov.f64 	%fd17, 0d3E928A27E30F5561;
	mov.f64 	%fd18, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd19, %fd18, %fd16, %fd17;
	mov.f64 	%fd20, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd21, %fd19, %fd16, %fd20;
	mov.f64 	%fd22, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd23, %fd21, %fd16, %fd22;
	mov.f64 	%fd24, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd25, %fd23, %fd16, %fd24;
	mov.f64 	%fd26, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd27, %fd25, %fd16, %fd26;
	mov.f64 	%fd28, 0d3F8111111111A24E;
	fma.rn.f64 	%fd29, %fd27, %fd16, %fd28;
	mov.f64 	%fd30, 0d3FA555555555211D;
	fma.rn.f64 	%fd31, %fd29, %fd16, %fd30;
	mov.f64 	%fd32, 0d3FC5555555555530;
	fma.rn.f64 	%fd33, %fd31, %fd16, %fd32;
	mov.f64 	%fd34, 0d3FE0000000000005;
	fma.rn.f64 	%fd35, %fd33, %fd16, %fd34;
	mov.f64 	%fd36, 0d3FF0000000000000;
	fma.rn.f64 	%fd37, %fd35, %fd16, %fd36;
	fma.rn.f64 	%fd2, %fd37, %fd16, %fd36;
	shl.b32 	%r3, %r2, 20;
	add.s32 	%r4, %r3, 1072693248;
	abs.s32 	%r5, %r2;
	setp.lt.s32 	%p6, %r5, 1021;
	@%p6 bra 	BB58_4;

	add.s32 	%r6, %r3, 1130364928;
	setp.lt.s32 	%p7, %r2, 0;
	mov.u32 	%r7, 0;
	selp.b32 	%r8, %r6, %r4, %p7;
	shr.s32 	%r9, %r2, 31;
	add.s32 	%r10, %r9, 1073741824;
	and.b32  	%r11, %r10, -57671680;
	add.s32 	%r12, %r8, -1048576;
	mov.b64 	%fd38, {%r7, %r11};
	mul.f64 	%fd39, %fd2, %fd38;
	mov.b64 	%fd40, {%r7, %r12};
	mul.f64 	%fd42, %fd39, %fd40;
	bra.uni 	BB58_5;

BB58_4:
	mov.u32 	%r13, 0;
	mov.b64 	%fd41, {%r13, %r4};
	mul.f64 	%fd42, %fd41, %fd2;

BB58_5:
	st.param.f64	[func_retval0+0], %fd42;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) cexpf(
	.param .b32 cexpf_param_0,
	.param .b32 cexpf_param_1
)
{
	.local .align 4 .b8 	__local_depot59[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<17>;
	.reg .s32 	%r<93>;
	.reg .f32 	%f<61>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot59;
	ld.param.f32 	%f7, [cexpf_param_0];
	ld.param.f32 	%f59, [cexpf_param_1];
	add.u64 	%rd5, %SPL, 0;
	mov.u32 	%r26, 2139095040;
	mov.b32 	%f1, %r26;
	abs.f32 	%f9, %f59;
	setp.neu.f32 	%p1, %f9, %f1;
	@%p1 bra 	BB59_2;

	mov.f32 	%f10, 0f00000000;
	mul.rn.f32 	%f59, %f59, %f10;

BB59_2:
	mul.f32 	%f11, %f59, 0f3F22F983;
	cvt.rni.s32.f32 	%r92, %f11;
	cvt.rn.f32.s32 	%f12, %r92;
	neg.f32 	%f13, %f12;
	mov.f32 	%f14, 0f3FC90FDA;
	fma.rn.f32 	%f15, %f13, %f14, %f59;
	mov.f32 	%f16, 0f33A22168;
	fma.rn.f32 	%f17, %f13, %f16, %f15;
	mov.f32 	%f18, 0f27C234C5;
	fma.rn.f32 	%f60, %f13, %f18, %f17;
	abs.f32 	%f19, %f59;
	setp.leu.f32 	%p2, %f19, 0f47CE4780;
	@%p2 bra 	BB59_10;

	mov.b32 	%r2, %f59;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r28, %r3, 255;
	add.s32 	%r29, %r28, -128;
	shl.b32 	%r30, %r2, 8;
	or.b32  	%r4, %r30, -2147483648;
	shr.u32 	%r5, %r29, 5;
	mov.u32 	%r86, 0;
	mov.u64 	%rd11, 0;

BB59_4:
	.pragma "nounroll";
	mov.u64 	%rd7, __cudart_i2opi_f;
	add.s64 	%rd8, %rd7, %rd11;
	ld.const.u32 	%r31, [%rd8];
	mul.hi.u32 	%r33, %r31, %r4;
	mad.lo.s32 	%r34, %r31, %r4, %r86;
	setp.lt.u32 	%p3, %r34, %r86;
	selp.u32 	%r35, 1, 0, %p3;
	add.s32 	%r86, %r35, %r33;
	add.s64 	%rd9, %rd5, %rd11;
	st.local.u32 	[%rd9], %r34;
	add.s64 	%rd11, %rd11, 4;
	setp.ne.s64 	%p4, %rd11, 24;
	@%p4 bra 	BB59_4;

	and.b32  	%r89, %r2, -2147483648;
	st.local.u32 	[%rd5+24], %r86;
	mov.u32 	%r38, 6;
	sub.s32 	%r39, %r38, %r5;
	mul.wide.s32 	%rd10, %r39, 4;
	add.s64 	%rd4, %rd5, %rd10;
	ld.local.u32 	%r87, [%rd4];
	ld.local.u32 	%r88, [%rd4+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB59_7;

	mov.u32 	%r42, 32;
	sub.s32 	%r43, %r42, %r11;
	shr.u32 	%r44, %r88, %r43;
	shl.b32 	%r45, %r87, %r11;
	add.s32 	%r87, %r44, %r45;
	ld.local.u32 	%r46, [%rd4+-8];
	shr.u32 	%r48, %r46, %r43;
	shl.b32 	%r49, %r88, %r11;
	add.s32 	%r88, %r48, %r49;

BB59_7:
	shr.u32 	%r50, %r88, 30;
	shl.b32 	%r51, %r87, 2;
	add.s32 	%r90, %r50, %r51;
	shl.b32 	%r17, %r88, 2;
	shr.u32 	%r52, %r90, 31;
	shr.u32 	%r53, %r87, 30;
	add.s32 	%r54, %r52, %r53;
	neg.s32 	%r55, %r54;
	setp.eq.s32 	%p6, %r89, 0;
	selp.b32 	%r92, %r54, %r55, %p6;
	setp.eq.s32 	%p7, %r52, 0;
	mov.u32 	%r91, %r17;
	@%p7 bra 	BB59_9;

	not.b32 	%r56, %r90;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r57, 1, 0, %p8;
	add.s32 	%r90, %r57, %r56;
	xor.b32  	%r89, %r89, -2147483648;
	mov.u32 	%r91, %r19;

BB59_9:
	clz.b32 	%r58, %r90;
	setp.eq.s32 	%p9, %r58, 0;
	shl.b32 	%r59, %r90, %r58;
	mov.u32 	%r60, 32;
	sub.s32 	%r61, %r60, %r58;
	shr.u32 	%r62, %r91, %r61;
	add.s32 	%r63, %r62, %r59;
	selp.b32 	%r64, %r90, %r63, %p9;
	mul.lo.s32 	%r65, %r64, -921707870;
	mov.u32 	%r66, -921707870;
	mul.hi.u32 	%r67, %r64, %r66;
	setp.gt.s32 	%p10, %r67, 0;
	shl.b32 	%r68, %r67, 1;
	shr.u32 	%r69, %r65, 31;
	add.s32 	%r70, %r69, %r68;
	selp.b32 	%r71, %r70, %r67, %p10;
	selp.b32 	%r72, -1, 0, %p10;
	mov.u32 	%r73, 126;
	sub.s32 	%r74, %r73, %r58;
	add.s32 	%r75, %r74, %r72;
	shl.b32 	%r76, %r75, 23;
	add.s32 	%r77, %r71, 1;
	shr.u32 	%r78, %r77, 7;
	add.s32 	%r79, %r78, 1;
	shr.u32 	%r80, %r79, 1;
	add.s32 	%r81, %r80, %r76;
	or.b32  	%r82, %r81, %r89;
	mov.b32 	%f60, %r82;

BB59_10:
	mul.f32 	%f20, %f60, %f60;
	mov.f32 	%f21, 0fBAB6061A;
	mov.f32 	%f22, 0f37CCF5CE;
	fma.rn.f32 	%f23, %f22, %f20, %f21;
	mov.f32 	%f24, 0f3D2AAAA5;
	fma.rn.f32 	%f25, %f23, %f20, %f24;
	mov.f32 	%f26, 0fBF000000;
	fma.rn.f32 	%f27, %f25, %f20, %f26;
	mov.f32 	%f28, 0f3F800000;
	fma.rn.f32 	%f29, %f27, %f20, %f28;
	mov.f32 	%f30, 0f3C08839E;
	mov.f32 	%f31, 0fB94CA1F9;
	fma.rn.f32 	%f32, %f31, %f20, %f30;
	mov.f32 	%f33, 0fBE2AAAA3;
	fma.rn.f32 	%f34, %f32, %f20, %f33;
	mov.f32 	%f35, 0f00000000;
	fma.rn.f32 	%f36, %f34, %f20, %f35;
	fma.rn.f32 	%f37, %f36, %f60, %f60;
	{
	.reg .b32 temp;
	and.b32	 temp, %r92, 1;
	setp.b32.eq 	 %p11, temp, 1;
	}
	not.pred 	%p12, %p11;
	selp.f32 	%f38, %f37, %f29, %p12;
	selp.f32 	%f39, %f29, %f37, %p12;
	and.b32  	%r83, %r92, 2;
	setp.eq.s32 	%p13, %r83, 0;
	neg.f32 	%f40, %f38;
	selp.f32 	%f41, %f38, %f40, %p13;
	add.s32 	%r84, %r92, 1;
	and.b32  	%r85, %r84, 2;
	setp.eq.s32 	%p14, %r85, 0;
	neg.f32 	%f42, %f39;
	selp.f32 	%f43, %f39, %f42, %p14;
	mul.f32 	%f44, %f7, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f45, %f44;
	mov.f32 	%f46, 0fBF317200;
	fma.rn.f32 	%f47, %f45, %f46, %f7;
	mov.f32 	%f48, 0fB5BFBE8E;
	fma.rn.f32 	%f49, %f45, %f48, %f47;
	mul.f32 	%f50, %f49, 0f3FB8AA3B;
	ex2.approx.f32 	%f51, %f50;
	add.f32 	%f52, %f45, 0f00000000;
	ex2.approx.f32 	%f53, %f52;
	mul.f32 	%f54, %f51, %f53;
	setp.lt.f32 	%p15, %f7, 0fC2D20000;
	selp.f32 	%f55, 0f00000000, %f54, %p15;
	setp.gt.f32 	%p16, %f7, 0f42D20000;
	selp.f32 	%f56, %f1, %f55, %p16;
	mul.f32 	%f57, %f56, %f43;
	mul.f32 	%f58, %f56, %f41;
	st.param.f32	[func_retval0+0], %f57;
	st.param.f32	[func_retval0+4], %f58;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) cexp(
	.param .b64 cexp_param_0,
	.param .b64 cexp_param_1
)
{
	.local .align 4 .b8 	__local_depot60[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .s32 	%r<23>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<100>;


	mov.u64 	%SPL, __local_depot60;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd14, [cexp_param_0];
	ld.param.f64 	%fd97, [cexp_param_1];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd1, %rd3;
	abs.f64 	%fd16, %fd97;
	setp.neu.f64 	%p1, %fd16, %fd1;
	@%p1 bra 	BB60_2;

	mov.f64 	%fd17, 0d0000000000000000;
	mul.rn.f64 	%fd97, %fd97, %fd17;

BB60_2:
	mul.f64 	%fd18, %fd97, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r22, %fd18;
	st.local.u32 	[%rd1], %r22;
	cvt.rn.f64.s32 	%fd19, %r22;
	neg.f64 	%fd20, %fd19;
	mov.f64 	%fd21, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd22, %fd20, %fd21, %fd97;
	mov.f64 	%fd23, 0d3C91A62633145C00;
	fma.rn.f64 	%fd24, %fd20, %fd23, %fd22;
	mov.f64 	%fd25, 0d397B839A252049C0;
	fma.rn.f64 	%fd98, %fd20, %fd25, %fd24;
	abs.f64 	%fd26, %fd97;
	setp.leu.f64 	%p2, %fd26, 0d41E0000000000000;
	@%p2 bra 	BB60_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd97;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd98, [retval0+0];
	}
	
	ld.local.u32 	%r22, [%rd1];

BB60_4:
	mul.rn.f64 	%fd27, %fd98, %fd98;
	mov.f64 	%fd28, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd29, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd30, %fd29, %fd27, %fd28;
	mov.f64 	%fd31, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd32, %fd30, %fd27, %fd31;
	mov.f64 	%fd33, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd34, %fd32, %fd27, %fd33;
	mov.f64 	%fd35, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd36, %fd34, %fd27, %fd35;
	mov.f64 	%fd37, 0d3FA5555555555551;
	fma.rn.f64 	%fd38, %fd36, %fd27, %fd37;
	mov.f64 	%fd39, 0dBFE0000000000000;
	fma.rn.f64 	%fd40, %fd38, %fd27, %fd39;
	mov.f64 	%fd41, 0d3FF0000000000000;
	fma.rn.f64 	%fd42, %fd40, %fd27, %fd41;
	mov.f64 	%fd43, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd44, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd45, %fd44, %fd27, %fd43;
	mov.f64 	%fd46, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd47, %fd45, %fd27, %fd46;
	mov.f64 	%fd48, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd49, %fd47, %fd27, %fd48;
	mov.f64 	%fd50, 0d3F81111111110818;
	fma.rn.f64 	%fd51, %fd49, %fd27, %fd50;
	mov.f64 	%fd52, 0dBFC5555555555554;
	fma.rn.f64 	%fd53, %fd51, %fd27, %fd52;
	mov.f64 	%fd54, 0d0000000000000000;
	fma.rn.f64 	%fd55, %fd53, %fd27, %fd54;
	fma.rn.f64 	%fd56, %fd55, %fd98, %fd98;
	{
	.reg .b32 temp;
	and.b32	 temp, %r22, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	not.pred 	%p4, %p3;
	selp.f64 	%fd57, %fd56, %fd42, %p4;
	selp.f64 	%fd58, %fd42, %fd56, %p4;
	and.b32  	%r10, %r22, 2;
	setp.eq.s32 	%p5, %r10, 0;
	neg.f64 	%fd59, %fd57;
	selp.f64 	%fd7, %fd57, %fd59, %p5;
	add.s32 	%r11, %r22, 1;
	and.b32  	%r12, %r11, 2;
	setp.eq.s32 	%p6, %r12, 0;
	neg.f64 	%fd60, %fd58;
	selp.f64 	%fd8, %fd58, %fd60, %p6;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd14;
	}
	setp.lt.u32 	%p7, %r4, 1082535491;
	setp.lt.s32 	%p8, %r4, -1064875759;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB60_6;

	setp.lt.s32 	%p10, %r4, 0;
	selp.f64 	%fd61, 0d0000000000000000, %fd1, %p10;
	abs.f64 	%fd62, %fd14;
	setp.gtu.f64 	%p11, %fd62, %fd1;
	add.f64 	%fd63, %fd14, %fd14;
	selp.f64 	%fd99, %fd63, %fd61, %p11;
	bra.uni 	BB60_9;

BB60_6:
	mul.f64 	%fd64, %fd14, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd65, %fd64;
	cvt.rzi.s32.f64 	%r5, %fd65;
	mov.f64 	%fd66, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd67, %fd65, %fd66, %fd14;
	mov.f64 	%fd68, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd69, %fd65, %fd68, %fd67;
	mov.f64 	%fd70, 0d3E928A27E30F5561;
	mov.f64 	%fd71, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd72, %fd71, %fd69, %fd70;
	mov.f64 	%fd73, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd74, %fd72, %fd69, %fd73;
	mov.f64 	%fd75, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd76, %fd74, %fd69, %fd75;
	mov.f64 	%fd77, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd78, %fd76, %fd69, %fd77;
	mov.f64 	%fd79, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd80, %fd78, %fd69, %fd79;
	mov.f64 	%fd81, 0d3F8111111111A24E;
	fma.rn.f64 	%fd82, %fd80, %fd69, %fd81;
	mov.f64 	%fd83, 0d3FA555555555211D;
	fma.rn.f64 	%fd84, %fd82, %fd69, %fd83;
	mov.f64 	%fd85, 0d3FC5555555555530;
	fma.rn.f64 	%fd86, %fd84, %fd69, %fd85;
	mov.f64 	%fd87, 0d3FE0000000000005;
	fma.rn.f64 	%fd88, %fd86, %fd69, %fd87;
	fma.rn.f64 	%fd90, %fd88, %fd69, %fd41;
	fma.rn.f64 	%fd10, %fd90, %fd69, %fd41;
	shl.b32 	%r6, %r5, 20;
	add.s32 	%r7, %r6, 1072693248;
	abs.s32 	%r13, %r5;
	setp.lt.s32 	%p12, %r13, 1021;
	@%p12 bra 	BB60_8;

	add.s32 	%r14, %r6, 1130364928;
	setp.lt.s32 	%p13, %r5, 0;
	mov.u32 	%r15, 0;
	selp.b32 	%r16, %r14, %r7, %p13;
	shr.s32 	%r17, %r5, 31;
	add.s32 	%r18, %r17, 1073741824;
	and.b32  	%r19, %r18, -57671680;
	add.s32 	%r20, %r16, -1048576;
	mov.b64 	%fd91, {%r15, %r19};
	mul.f64 	%fd92, %fd10, %fd91;
	mov.b64 	%fd93, {%r15, %r20};
	mul.f64 	%fd99, %fd92, %fd93;
	bra.uni 	BB60_9;

BB60_8:
	mov.u32 	%r21, 0;
	mov.b64 	%fd94, {%r21, %r7};
	mul.f64 	%fd99, %fd94, %fd10;

BB60_9:
	mul.f64 	%fd95, %fd99, %fd8;
	mul.f64 	%fd96, %fd99, %fd7;
	st.param.f64	[func_retval0+0], %fd95;
	st.param.f64	[func_retval0+8], %fd96;
	ret;
}

.visible .func  (.param .b32 func_retval0) _HLOG(
	.param .b32 _HLOG_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<29>;


	ld.param.f32 	%f4, [_HLOG_param_0];
	mov.b32 	%r1, %f4;
	mov.u32 	%r2, 2139095040;
	mov.b32 	%f5, %r2;
	setp.gt.f32 	%p1, %f5, %f4;
	setp.gt.f32 	%p2, %f4, 0f00000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB61_2;

	lg2.approx.f32 	%f6, %f4;
	mul.f32 	%f28, %f6, 0f3F317218;
	bra.uni 	BB61_3;

BB61_2:
	setp.lt.u32 	%p4, %r1, 8388608;
	mul.f32 	%f7, %f4, 0f4B800000;
	mov.b32 	%r3, %f7;
	selp.b32 	%r4, %r3, %r1, %p4;
	selp.b32 	%r5, -151, -127, %p4;
	and.b32  	%r6, %r4, -2139095041;
	or.b32  	%r7, %r6, 1065353216;
	mov.b32 	%f8, %r7;
	shr.u32 	%r8, %r4, 23;
	setp.gt.f32 	%p5, %f8, 0f3FB504F3;
	mul.f32 	%f9, %f8, 0f3F000000;
	selp.f32 	%f10, %f9, %f8, %p5;
	selp.u32 	%r9, 1, 0, %p5;
	add.s32 	%r10, %r8, %r5;
	add.s32 	%r11, %r10, %r9;
	add.f32 	%f11, %f10, 0fBF800000;
	add.f32 	%f12, %f10, 0f3F800000;
	div.approx.f32 	%f13, %f11, %f12;
	neg.f32 	%f14, %f11;
	mul.rn.f32 	%f15, %f14, %f13;
	add.rn.f32 	%f16, %f11, %f15;
	mul.f32 	%f17, %f16, %f16;
	mov.f32 	%f18, 0f3C4C4BE0;
	mov.f32 	%f19, 0f3B2063C3;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0f3DAAAB50;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mul.f32 	%f23, %f22, %f17;
	fma.rn.f32 	%f24, %f23, %f16, %f15;
	add.f32 	%f25, %f24, %f11;
	cvt.rn.f32.s32 	%f26, %r11;
	mov.f32 	%f27, 0f3F317218;
	fma.rn.f32 	%f28, %f26, %f27, %f25;

BB61_3:
	st.param.f32	[func_retval0+0], %f28;
	ret;
}

.visible .func  (.param .b64 func_retval0) _ALOG(
	.param .b64 _ALOG_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<24>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<3>;
	.reg .f64 	%fd<58>;


	ld.param.f64 	%fd10, [_ALOG_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd10;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd10;
	}
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd1, %rd1;
	setp.gt.f64 	%p1, %fd1, %fd10;
	setp.gt.f64 	%p2, %fd10, 0d0000000000000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB62_6;

	abs.f64 	%fd11, %fd10;
	setp.gtu.f64 	%p4, %fd11, %fd1;
	@%p4 bra 	BB62_5;

	setp.eq.f64 	%p5, %fd10, 0d0000000000000000;
	@%p5 bra 	BB62_4;

	setp.eq.f64 	%p6, %fd1, %fd10;
	mov.u64 	%rd2, -2251799813685248;
	mov.b64 	%fd12, %rd2;
	selp.f64 	%fd57, %fd10, %fd12, %p6;
	bra.uni 	BB62_11;

BB62_4:
	neg.f64 	%fd57, %fd1;
	bra.uni 	BB62_11;

BB62_5:
	add.f64 	%fd57, %fd10, %fd10;
	bra.uni 	BB62_11;

BB62_6:
	setp.gt.u32 	%p7, %r20, 1048575;
	mov.u32 	%r22, -1023;
	@%p7 bra 	BB62_8;

	mul.f64 	%fd13, %fd10, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd13;
	}
	mov.u32 	%r22, -1077;

BB62_8:
	shr.s32 	%r13, %r20, 20;
	add.s32 	%r23, %r22, %r13;
	and.b32  	%r14, %r20, -2146435073;
	or.b32  	%r15, %r14, 1072693248;
	mov.b64 	%fd56, {%r21, %r15};
	setp.lt.u32 	%p8, %r15, 1073127583;
	@%p8 bra 	BB62_10;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd56;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd56;
	}
	add.s32 	%r18, %r17, -1048576;
	mov.b64 	%fd56, {%r16, %r18};
	add.s32 	%r23, %r23, 1;

BB62_10:
	add.f64 	%fd14, %fd56, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd14;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd15,%f2;
	
	neg.f64 	%fd17, %fd14;
	fma.rn.f64 	%fd18, %fd17, %fd15, %fd16;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;
	add.f64 	%fd21, %fd56, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd26, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F624924923BE72D;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	mov.f64 	%fd38, 0d3FB5555555555554;
	fma.rn.f64 	%fd39, %fd37, %fd24, %fd38;
	sub.f64 	%fd40, %fd21, %fd23;
	add.f64 	%fd41, %fd40, %fd40;
	neg.f64 	%fd42, %fd23;
	fma.rn.f64 	%fd43, %fd42, %fd21, %fd41;
	mul.f64 	%fd44, %fd20, %fd43;
	mul.f64 	%fd45, %fd39, %fd24;
	fma.rn.f64 	%fd46, %fd45, %fd23, %fd44;
	cvt.rn.f64.s32 	%fd47, %r23;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd23;
	neg.s32 	%r19, %r23;
	cvt.rn.f64.s32 	%fd50, %r19;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	sub.f64 	%fd52, %fd51, %fd23;
	sub.f64 	%fd53, %fd46, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	add.f64 	%fd57, %fd49, %fd55;

BB62_11:
	st.param.f64	[func_retval0+0], %fd57;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHLOG(
	.param .b32 _CHLOG_param_0,
	.param .b32 _CHLOG_param_1
)
{
	.reg .pred 	%p<17>;
	.reg .s32 	%r<22>;
	.reg .f32 	%f<68>;


	ld.param.f32 	%f12, [_CHLOG_param_0];
	ld.param.f32 	%f13, [_CHLOG_param_1];
	mul.f32 	%f14, %f13, %f13;
	fma.rn.f32 	%f15, %f12, %f12, %f14;
	sqrt.rn.f32 	%f1, %f15;
	mov.b32 	%r1, %f1;
	setp.gt.f32 	%p1, %f1, 0f00000000;
	mov.u32 	%r3, 2139095040;
	mov.b32 	%f2, %r3;
	setp.lt.f32 	%p2, %f1, %f2;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB63_2;

	lg2.approx.f32 	%f16, %f1;
	mul.f32 	%f66, %f16, 0f3F317218;
	bra.uni 	BB63_3;

BB63_2:
	setp.lt.u32 	%p4, %r1, 8388608;
	mul.f32 	%f17, %f1, 0f4B800000;
	mov.b32 	%r4, %f17;
	selp.b32 	%r5, %r4, %r1, %p4;
	selp.b32 	%r6, -151, -127, %p4;
	and.b32  	%r7, %r5, -2139095041;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	%f18, %r8;
	shr.u32 	%r9, %r5, 23;
	setp.gt.f32 	%p5, %f18, 0f3FB504F3;
	mul.f32 	%f19, %f18, 0f3F000000;
	selp.f32 	%f20, %f19, %f18, %p5;
	selp.u32 	%r10, 1, 0, %p5;
	add.s32 	%r11, %r9, %r6;
	add.s32 	%r12, %r11, %r10;
	add.f32 	%f21, %f20, 0fBF800000;
	add.f32 	%f22, %f20, 0f3F800000;
	div.approx.f32 	%f23, %f21, %f22;
	neg.f32 	%f24, %f21;
	mul.rn.f32 	%f25, %f24, %f23;
	add.rn.f32 	%f26, %f21, %f25;
	mul.f32 	%f27, %f26, %f26;
	mov.f32 	%f28, 0f3C4C4BE0;
	mov.f32 	%f29, 0f3B2063C3;
	fma.rn.f32 	%f30, %f29, %f27, %f28;
	mov.f32 	%f31, 0f3DAAAB50;
	fma.rn.f32 	%f32, %f30, %f27, %f31;
	mul.f32 	%f33, %f32, %f27;
	fma.rn.f32 	%f34, %f33, %f26, %f25;
	add.f32 	%f35, %f34, %f21;
	cvt.rn.f32.s32 	%f36, %r12;
	mov.f32 	%f37, 0f3F317218;
	fma.rn.f32 	%f66, %f36, %f37, %f35;

BB63_3:
	abs.f32 	%f6, %f13;
	setp.eq.f32 	%p6, %f6, 0f00000000;
	abs.f32 	%f7, %f12;
	setp.eq.f32 	%p7, %f7, 0f00000000;
	and.pred  	%p8, %p6, %p7;
	mov.b32 	%r13, %f13;
	and.b32  	%r2, %r13, -2147483648;
	@%p8 bra 	BB63_7;

	setp.eq.f32 	%p9, %f6, %f2;
	setp.eq.f32 	%p10, %f7, %f2;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB63_6;

	min.f32 	%f38, %f6, %f7;
	max.f32 	%f39, %f6, %f7;
	div.rn.f32 	%f40, %f38, %f39;
	mul.rn.f32 	%f41, %f40, %f40;
	mov.f32 	%f42, 0fC0B59883;
	mov.f32 	%f43, 0fBF52C7EA;
	fma.rn.f32 	%f44, %f41, %f43, %f42;
	mov.f32 	%f45, 0fC0D21907;
	fma.rn.f32 	%f46, %f44, %f41, %f45;
	mul.f32 	%f47, %f46, %f41;
	mul.f32 	%f48, %f47, %f40;
	add.f32 	%f49, %f41, 0f41355DC0;
	mov.f32 	%f50, 0f41E6BD60;
	fma.rn.f32 	%f51, %f49, %f41, %f50;
	mov.f32 	%f52, 0f419D92C8;
	fma.rn.f32 	%f53, %f51, %f41, %f52;
	rcp.rn.f32 	%f54, %f53;
	fma.rn.f32 	%f55, %f48, %f54, %f40;
	mov.f32 	%f56, 0f3FC90FDB;
	sub.f32 	%f57, %f56, %f55;
	setp.gt.f32 	%p12, %f6, %f7;
	selp.f32 	%f58, %f57, %f55, %p12;
	mov.f32 	%f59, 0f40490FDB;
	sub.f32 	%f60, %f59, %f58;
	setp.lt.f32 	%p13, %f12, 0f00000000;
	selp.f32 	%f61, %f60, %f58, %p13;
	mov.b32 	%r14, %f61;
	or.b32  	%r15, %r2, %r14;
	mov.b32 	%f62, %r15;
	add.f32 	%f63, %f13, %f12;
	setp.gtu.f32 	%p14, %f63, %f2;
	selp.f32 	%f67, %f63, %f62, %p14;
	bra.uni 	BB63_8;

BB63_6:
	mov.b32 	%r16, %f12;
	setp.lt.s32 	%p15, %r16, 0;
	selp.f32 	%f64, 0f4016CBE4, 0f3F490FDB, %p15;
	mov.b32 	%r17, %f64;
	or.b32  	%r18, %r2, %r17;
	mov.b32 	%f67, %r18;
	bra.uni 	BB63_8;

BB63_7:
	mov.b32 	%r19, %f12;
	setp.lt.s32 	%p16, %r19, 0;
	selp.f32 	%f65, 0f40490FDB, 0f00000000, %p16;
	mov.b32 	%r20, %f65;
	or.b32  	%r21, %r2, %r20;
	mov.b32 	%f67, %r21;

BB63_8:
	st.param.f32	[func_retval0+0], %f66;
	st.param.f32	[func_retval0+4], %f67;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _CLOG(
	.param .b64 _CLOG_param_0,
	.param .b64 _CLOG_param_1
)
{
	.reg .pred 	%p<20>;
	.reg .s32 	%r<31>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<3>;
	.reg .f64 	%fd<123>;


	ld.param.f64 	%fd20, [_CLOG_param_0];
	ld.param.f64 	%fd21, [_CLOG_param_1];
	mul.f64 	%fd22, %fd21, %fd21;
	fma.rn.f64 	%fd23, %fd20, %fd20, %fd22;
	sqrt.rn.f64 	%fd1, %fd23;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd1;
	}
	setp.gt.f64 	%p1, %fd1, 0d0000000000000000;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd2, %rd1;
	setp.lt.f64 	%p2, %fd1, %fd2;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB64_6;

	abs.f64 	%fd24, %fd1;
	setp.gtu.f64 	%p4, %fd24, %fd2;
	@%p4 bra 	BB64_5;

	setp.eq.f64 	%p5, %fd1, 0d0000000000000000;
	@%p5 bra 	BB64_4;

	setp.eq.f64 	%p6, %fd1, %fd2;
	mov.u64 	%rd2, -2251799813685248;
	mov.b64 	%fd25, %rd2;
	selp.f64 	%fd120, %fd1, %fd25, %p6;
	bra.uni 	BB64_11;

BB64_4:
	neg.f64 	%fd120, %fd2;
	bra.uni 	BB64_11;

BB64_5:
	add.f64 	%fd120, %fd1, %fd1;
	bra.uni 	BB64_11;

BB64_6:
	setp.gt.u32 	%p7, %r27, 1048575;
	mov.u32 	%r29, -1023;
	@%p7 bra 	BB64_8;

	mul.f64 	%fd26, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd26;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd26;
	}
	mov.u32 	%r29, -1077;

BB64_8:
	shr.s32 	%r13, %r27, 20;
	add.s32 	%r30, %r29, %r13;
	and.b32  	%r14, %r27, -2146435073;
	or.b32  	%r15, %r14, 1072693248;
	mov.b64 	%fd119, {%r28, %r15};
	setp.lt.u32 	%p8, %r15, 1073127583;
	@%p8 bra 	BB64_10;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd119;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd119;
	}
	add.s32 	%r18, %r17, -1048576;
	mov.b64 	%fd119, {%r16, %r18};
	add.s32 	%r30, %r30, 1;

BB64_10:
	add.f64 	%fd27, %fd119, 0d3FF0000000000000;
	mov.f64 	%fd29, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd27;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd28,%f2;
	
	neg.f64 	%fd30, %fd27;
	fma.rn.f64 	%fd31, %fd30, %fd28, %fd29;
	fma.rn.f64 	%fd32, %fd31, %fd31, %fd31;
	fma.rn.f64 	%fd33, %fd32, %fd28, %fd28;
	add.f64 	%fd34, %fd119, 0dBFF0000000000000;
	mul.f64 	%fd35, %fd34, %fd33;
	fma.rn.f64 	%fd36, %fd34, %fd33, %fd35;
	mul.f64 	%fd37, %fd36, %fd36;
	mov.f64 	%fd38, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd39, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd40, %fd39, %fd37, %fd38;
	mov.f64 	%fd41, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd42, %fd40, %fd37, %fd41;
	mov.f64 	%fd43, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd44, %fd42, %fd37, %fd43;
	mov.f64 	%fd45, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd46, %fd44, %fd37, %fd45;
	mov.f64 	%fd47, 0d3F624924923BE72D;
	fma.rn.f64 	%fd48, %fd46, %fd37, %fd47;
	mov.f64 	%fd49, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd50, %fd48, %fd37, %fd49;
	mov.f64 	%fd51, 0d3FB5555555555554;
	fma.rn.f64 	%fd52, %fd50, %fd37, %fd51;
	sub.f64 	%fd53, %fd34, %fd36;
	add.f64 	%fd54, %fd53, %fd53;
	neg.f64 	%fd55, %fd36;
	fma.rn.f64 	%fd56, %fd55, %fd34, %fd54;
	mul.f64 	%fd57, %fd33, %fd56;
	mul.f64 	%fd58, %fd52, %fd37;
	fma.rn.f64 	%fd59, %fd58, %fd36, %fd57;
	cvt.rn.f64.s32 	%fd60, %r30;
	mov.f64 	%fd61, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd62, %fd60, %fd61, %fd36;
	neg.s32 	%r19, %r30;
	cvt.rn.f64.s32 	%fd63, %r19;
	fma.rn.f64 	%fd64, %fd63, %fd61, %fd62;
	sub.f64 	%fd65, %fd64, %fd36;
	sub.f64 	%fd66, %fd59, %fd65;
	mov.f64 	%fd67, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd68, %fd60, %fd67, %fd66;
	add.f64 	%fd120, %fd62, %fd68;

BB64_11:
	abs.f64 	%fd11, %fd21;
	setp.gtu.f64 	%p9, %fd11, %fd2;
	@%p9 bra 	BB64_20;

	abs.f64 	%fd12, %fd20;
	setp.gtu.f64 	%p10, %fd12, %fd2;
	@%p10 bra 	BB64_20;

	setp.eq.f64 	%p11, %fd12, 0d0000000000000000;
	setp.eq.f64 	%p12, %fd11, 0d0000000000000000;
	and.pred  	%p13, %p11, %p12;
	@%p13 bra 	BB64_18;

	abs.f64 	%fd69, %fd12;
	setp.neu.f64 	%p14, %fd69, %fd2;
	@%p14 bra 	BB64_16;

	abs.f64 	%fd70, %fd11;
	setp.eq.f64 	%p15, %fd70, %fd2;
	@%p15 bra 	BB64_17;

BB64_16:
	max.f64 	%fd71, %fd11, %fd12;
	min.f64 	%fd72, %fd11, %fd12;
	div.rn.f64 	%fd73, %fd72, %fd71;
	mul.f64 	%fd74, %fd73, %fd73;
	mov.f64 	%fd75, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd76, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd77, %fd76, %fd74, %fd75;
	mov.f64 	%fd78, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd79, %fd77, %fd74, %fd78;
	mov.f64 	%fd80, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd81, %fd79, %fd74, %fd80;
	mov.f64 	%fd82, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd83, %fd81, %fd74, %fd82;
	mov.f64 	%fd84, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd85, %fd83, %fd74, %fd84;
	mov.f64 	%fd86, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd87, %fd85, %fd74, %fd86;
	mov.f64 	%fd88, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd89, %fd87, %fd74, %fd88;
	mov.f64 	%fd90, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd91, %fd89, %fd74, %fd90;
	mov.f64 	%fd92, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd93, %fd91, %fd74, %fd92;
	mov.f64 	%fd94, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd95, %fd93, %fd74, %fd94;
	mov.f64 	%fd96, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd97, %fd95, %fd74, %fd96;
	mov.f64 	%fd98, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd99, %fd97, %fd74, %fd98;
	mov.f64 	%fd100, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd101, %fd99, %fd74, %fd100;
	mov.f64 	%fd102, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd103, %fd101, %fd74, %fd102;
	mov.f64 	%fd104, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd105, %fd103, %fd74, %fd104;
	mov.f64 	%fd106, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd107, %fd105, %fd74, %fd106;
	mov.f64 	%fd108, 0d3FC99999999840D2;
	fma.rn.f64 	%fd109, %fd107, %fd74, %fd108;
	mov.f64 	%fd110, 0dBFD555555555544C;
	fma.rn.f64 	%fd111, %fd109, %fd74, %fd110;
	mul.f64 	%fd112, %fd111, %fd74;
	fma.rn.f64 	%fd113, %fd112, %fd73, %fd73;
	mov.f64 	%fd114, 0d3FF921FB54442D18;
	sub.f64 	%fd115, %fd114, %fd113;
	setp.gt.f64 	%p16, %fd11, %fd12;
	selp.f64 	%fd116, %fd115, %fd113, %p16;
	mov.f64 	%fd117, 0d400921FB54442D18;
	sub.f64 	%fd118, %fd117, %fd116;
	setp.lt.f64 	%p17, %fd20, 0d0000000000000000;
	selp.f64 	%fd121, %fd118, %fd116, %p17;
	bra.uni 	BB64_19;

BB64_17:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd20;
	}
	setp.lt.s32 	%p18, %r20, 0;
	selp.f64 	 %fd121, 0d4002D97C7F3321D2, 0d3FE921FB54442D18, %p18;
	bra.uni 	BB64_19;

BB64_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd20;
	}
	setp.lt.s32 	%p19, %r21, 0;
	selp.f64 	 %fd121, 0d400921FB54442D18, 0d0000000000000000, %p19;

BB64_19:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd21;
	}
	and.b32  	%r23, %r22, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd121;
	}
	or.b32  	%r25, %r24, %r23;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r26, %temp}, %fd121;
	}
	mov.b64 	%fd122, {%r26, %r25};
	bra.uni 	BB64_21;

BB64_20:
	add.f64 	%fd122, %fd21, %fd20;

BB64_21:
	st.param.f64	[func_retval0+0], %fd120;
	st.param.f64	[func_retval0+8], %fd122;
	ret;
}

.visible .func  (.param .b32 func_retval0) log10f(
	.param .b32 log10f_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<30>;


	ld.param.f32 	%f4, [log10f_param_0];
	mov.b32 	%r1, %f4;
	mov.u32 	%r2, 2139095040;
	mov.b32 	%f5, %r2;
	setp.gt.f32 	%p1, %f5, %f4;
	setp.gt.f32 	%p2, %f4, 0f00000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB65_2;

	lg2.approx.f32 	%f6, %f4;
	mul.f32 	%f29, %f6, 0f3F317218;
	bra.uni 	BB65_3;

BB65_2:
	setp.lt.u32 	%p4, %r1, 8388608;
	mul.f32 	%f7, %f4, 0f4B800000;
	mov.b32 	%r3, %f7;
	selp.b32 	%r4, %r3, %r1, %p4;
	selp.b32 	%r5, -151, -127, %p4;
	and.b32  	%r6, %r4, -2139095041;
	or.b32  	%r7, %r6, 1065353216;
	mov.b32 	%f8, %r7;
	shr.u32 	%r8, %r4, 23;
	setp.gt.f32 	%p5, %f8, 0f3FB504F3;
	mul.f32 	%f9, %f8, 0f3F000000;
	selp.f32 	%f10, %f9, %f8, %p5;
	selp.u32 	%r9, 1, 0, %p5;
	add.s32 	%r10, %r8, %r5;
	add.s32 	%r11, %r10, %r9;
	add.f32 	%f11, %f10, 0fBF800000;
	add.f32 	%f12, %f10, 0f3F800000;
	div.approx.f32 	%f13, %f11, %f12;
	neg.f32 	%f14, %f11;
	mul.rn.f32 	%f15, %f14, %f13;
	add.rn.f32 	%f16, %f11, %f15;
	mul.f32 	%f17, %f16, %f16;
	mov.f32 	%f18, 0f3C4C4BE0;
	mov.f32 	%f19, 0f3B2063C3;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0f3DAAAB50;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mul.f32 	%f23, %f22, %f17;
	fma.rn.f32 	%f24, %f23, %f16, %f15;
	add.f32 	%f25, %f24, %f11;
	cvt.rn.f32.s32 	%f26, %r11;
	mov.f32 	%f27, 0f3F317218;
	fma.rn.f32 	%f29, %f26, %f27, %f25;

BB65_3:
	mul.f32 	%f28, %f29, 0f3EDE5BD9;
	st.param.f32	[func_retval0+0], %f28;
	ret;
}

.visible .func  (.param .b64 func_retval0) log10(
	.param .b64 log10_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<24>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<3>;
	.reg .f64 	%fd<61>;


	ld.param.f64 	%fd10, [log10_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd10;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd10;
	}
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd1, %rd1;
	setp.gt.f64 	%p1, %fd1, %fd10;
	setp.gt.f64 	%p2, %fd10, 0d0000000000000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB66_6;

	abs.f64 	%fd11, %fd10;
	setp.gtu.f64 	%p4, %fd11, %fd1;
	@%p4 bra 	BB66_5;

	setp.eq.f64 	%p5, %fd10, 0d0000000000000000;
	@%p5 bra 	BB66_4;

	setp.eq.f64 	%p6, %fd1, %fd10;
	mov.u64 	%rd2, -2251799813685248;
	mov.b64 	%fd12, %rd2;
	selp.f64 	%fd60, %fd10, %fd12, %p6;
	bra.uni 	BB66_11;

BB66_4:
	neg.f64 	%fd60, %fd1;
	bra.uni 	BB66_11;

BB66_5:
	add.f64 	%fd60, %fd10, %fd10;
	bra.uni 	BB66_11;

BB66_6:
	setp.gt.u32 	%p7, %r20, 1048575;
	mov.u32 	%r22, -1023;
	@%p7 bra 	BB66_8;

	mul.f64 	%fd13, %fd10, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd13;
	}
	mov.u32 	%r22, -1077;

BB66_8:
	shr.s32 	%r13, %r20, 20;
	add.s32 	%r23, %r22, %r13;
	and.b32  	%r14, %r20, -2146435073;
	or.b32  	%r15, %r14, 1072693248;
	mov.b64 	%fd59, {%r21, %r15};
	setp.lt.u32 	%p8, %r15, 1073127583;
	@%p8 bra 	BB66_10;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd59;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd59;
	}
	add.s32 	%r18, %r17, -1048576;
	mov.b64 	%fd59, {%r16, %r18};
	add.s32 	%r23, %r23, 1;

BB66_10:
	add.f64 	%fd14, %fd59, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd14;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd15,%f2;
	
	neg.f64 	%fd17, %fd14;
	fma.rn.f64 	%fd18, %fd17, %fd15, %fd16;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;
	add.f64 	%fd21, %fd59, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd26, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F624924923BE72D;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	mov.f64 	%fd38, 0d3FB5555555555554;
	fma.rn.f64 	%fd39, %fd37, %fd24, %fd38;
	sub.f64 	%fd40, %fd21, %fd23;
	add.f64 	%fd41, %fd40, %fd40;
	neg.f64 	%fd42, %fd23;
	fma.rn.f64 	%fd43, %fd42, %fd21, %fd41;
	mul.f64 	%fd44, %fd20, %fd43;
	mul.f64 	%fd45, %fd39, %fd24;
	fma.rn.f64 	%fd46, %fd45, %fd23, %fd44;
	cvt.rn.f64.s32 	%fd47, %r23;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd23;
	neg.s32 	%r19, %r23;
	cvt.rn.f64.s32 	%fd50, %r19;
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	sub.f64 	%fd52, %fd51, %fd23;
	sub.f64 	%fd53, %fd46, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	add.f64 	%fd60, %fd49, %fd55;

BB66_11:
	mul.f64 	%fd56, %fd60, 0d3C695355BAAAFAD3;
	mov.f64 	%fd57, 0d3FDBCB7B1526E50E;
	fma.rn.f64 	%fd58, %fd60, %fd57, %fd56;
	st.param.f64	[func_retval0+0], %fd58;
	ret;
}

.visible .func  (.param .b32 func_retval0) _CHABS(
	.param .b32 _CHABS_param_0,
	.param .b32 _CHABS_param_1
)
{
	.reg .f32 	%f<6>;


	ld.param.f32 	%f1, [_CHABS_param_0];
	ld.param.f32 	%f2, [_CHABS_param_1];
	mul.f32 	%f3, %f2, %f2;
	fma.rn.f32 	%f4, %f1, %f1, %f3;
	sqrt.rn.f32 	%f5, %f4;
	st.param.f32	[func_retval0+0], %f5;
	ret;
}

.visible .func  (.param .b64 func_retval0) _CABS(
	.param .b64 _CABS_param_0,
	.param .b64 _CABS_param_1
)
{
	.reg .f64 	%fd<6>;


	ld.param.f64 	%fd1, [_CABS_param_0];
	ld.param.f64 	%fd2, [_CABS_param_1];
	mul.f64 	%fd3, %fd2, %fd2;
	fma.rn.f64 	%fd4, %fd1, %fd1, %fd3;
	sqrt.rn.f64 	%fd5, %fd4;
	st.param.f64	[func_retval0+0], %fd5;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) cpow(
	.param .b64 cpow_param_0,
	.param .b64 cpow_param_1,
	.param .b64 cpow_param_2,
	.param .b64 cpow_param_3
)
{
	.local .align 4 .b8 	__local_depot69[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<37>;
	.reg .s32 	%r<53>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<6>;
	.reg .f64 	%fd<232>;


	mov.u64 	%SPL, __local_depot69;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd38, [cpow_param_0];
	ld.param.f64 	%fd39, [cpow_param_1];
	ld.param.f64 	%fd40, [cpow_param_2];
	ld.param.f64 	%fd41, [cpow_param_3];
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd2;
	setp.eq.f64 	%p1, %fd39, 0d0000000000000000;
	setp.eq.f64 	%p2, %fd38, 0d0000000000000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB69_32;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd38;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd39;
	.param .b64 retval0;
	call.uni (retval0), 
	_CABS, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd1, [retval0+0];
	}
	
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r48}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd1;
	}
	setp.gt.f64 	%p4, %fd1, 0d0000000000000000;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd2, %rd3;
	setp.lt.f64 	%p5, %fd1, %fd2;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB69_7;

	abs.f64 	%fd42, %fd1;
	setp.gtu.f64 	%p7, %fd42, %fd2;
	@%p7 bra 	BB69_6;

	setp.eq.f64 	%p8, %fd1, 0d0000000000000000;
	@%p8 bra 	BB69_5;

	setp.eq.f64 	%p9, %fd1, %fd2;
	mov.u64 	%rd4, -2251799813685248;
	mov.b64 	%fd43, %rd4;
	selp.f64 	%fd224, %fd1, %fd43, %p9;
	bra.uni 	BB69_12;

BB69_5:
	neg.f64 	%fd224, %fd2;
	bra.uni 	BB69_12;

BB69_6:
	add.f64 	%fd224, %fd1, %fd1;
	bra.uni 	BB69_12;

BB69_7:
	setp.gt.u32 	%p10, %r48, 1048575;
	mov.u32 	%r50, -1023;
	@%p10 bra 	BB69_9;

	mul.f64 	%fd44, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r48}, %fd44;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd44;
	}
	mov.u32 	%r50, -1077;

BB69_9:
	shr.s32 	%r20, %r48, 20;
	add.s32 	%r51, %r50, %r20;
	and.b32  	%r21, %r48, -2146435073;
	or.b32  	%r22, %r21, 1072693248;
	mov.b64 	%fd223, {%r49, %r22};
	setp.lt.u32 	%p11, %r22, 1073127583;
	@%p11 bra 	BB69_11;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd223;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd223;
	}
	add.s32 	%r25, %r24, -1048576;
	mov.b64 	%fd223, {%r23, %r25};
	add.s32 	%r51, %r51, 1;

BB69_11:
	add.f64 	%fd45, %fd223, 0d3FF0000000000000;
	mov.f64 	%fd47, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd45;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd46,%f2;
	
	neg.f64 	%fd48, %fd45;
	fma.rn.f64 	%fd49, %fd48, %fd46, %fd47;
	fma.rn.f64 	%fd50, %fd49, %fd49, %fd49;
	fma.rn.f64 	%fd51, %fd50, %fd46, %fd46;
	add.f64 	%fd52, %fd223, 0dBFF0000000000000;
	mul.f64 	%fd53, %fd52, %fd51;
	fma.rn.f64 	%fd54, %fd52, %fd51, %fd53;
	mul.f64 	%fd55, %fd54, %fd54;
	mov.f64 	%fd56, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd57, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd58, %fd57, %fd55, %fd56;
	mov.f64 	%fd59, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd60, %fd58, %fd55, %fd59;
	mov.f64 	%fd61, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd62, %fd60, %fd55, %fd61;
	mov.f64 	%fd63, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd64, %fd62, %fd55, %fd63;
	mov.f64 	%fd65, 0d3F624924923BE72D;
	fma.rn.f64 	%fd66, %fd64, %fd55, %fd65;
	mov.f64 	%fd67, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd68, %fd66, %fd55, %fd67;
	mov.f64 	%fd69, 0d3FB5555555555554;
	fma.rn.f64 	%fd70, %fd68, %fd55, %fd69;
	sub.f64 	%fd71, %fd52, %fd54;
	add.f64 	%fd72, %fd71, %fd71;
	neg.f64 	%fd73, %fd54;
	fma.rn.f64 	%fd74, %fd73, %fd52, %fd72;
	mul.f64 	%fd75, %fd51, %fd74;
	mul.f64 	%fd76, %fd70, %fd55;
	fma.rn.f64 	%fd77, %fd76, %fd54, %fd75;
	cvt.rn.f64.s32 	%fd78, %r51;
	mov.f64 	%fd79, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd80, %fd78, %fd79, %fd54;
	neg.s32 	%r26, %r51;
	cvt.rn.f64.s32 	%fd81, %r26;
	fma.rn.f64 	%fd82, %fd81, %fd79, %fd80;
	sub.f64 	%fd83, %fd82, %fd54;
	sub.f64 	%fd84, %fd77, %fd83;
	mov.f64 	%fd85, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd86, %fd78, %fd85, %fd84;
	add.f64 	%fd224, %fd80, %fd86;

BB69_12:
	abs.f64 	%fd11, %fd39;
	setp.gtu.f64 	%p12, %fd11, %fd2;
	@%p12 bra 	BB69_21;

	abs.f64 	%fd12, %fd38;
	setp.gtu.f64 	%p13, %fd12, %fd2;
	@%p13 bra 	BB69_21;

	setp.eq.f64 	%p14, %fd12, 0d0000000000000000;
	setp.eq.f64 	%p15, %fd11, 0d0000000000000000;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	BB69_19;

	abs.f64 	%fd87, %fd12;
	setp.neu.f64 	%p17, %fd87, %fd2;
	@%p17 bra 	BB69_17;

	abs.f64 	%fd88, %fd11;
	setp.eq.f64 	%p18, %fd88, %fd2;
	@%p18 bra 	BB69_18;

BB69_17:
	max.f64 	%fd89, %fd11, %fd12;
	min.f64 	%fd90, %fd11, %fd12;
	div.rn.f64 	%fd91, %fd90, %fd89;
	mul.f64 	%fd92, %fd91, %fd91;
	mov.f64 	%fd93, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd94, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd95, %fd94, %fd92, %fd93;
	mov.f64 	%fd96, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd97, %fd95, %fd92, %fd96;
	mov.f64 	%fd98, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd99, %fd97, %fd92, %fd98;
	mov.f64 	%fd100, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd101, %fd99, %fd92, %fd100;
	mov.f64 	%fd102, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd103, %fd101, %fd92, %fd102;
	mov.f64 	%fd104, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd105, %fd103, %fd92, %fd104;
	mov.f64 	%fd106, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd107, %fd105, %fd92, %fd106;
	mov.f64 	%fd108, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd109, %fd107, %fd92, %fd108;
	mov.f64 	%fd110, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd111, %fd109, %fd92, %fd110;
	mov.f64 	%fd112, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd113, %fd111, %fd92, %fd112;
	mov.f64 	%fd114, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd115, %fd113, %fd92, %fd114;
	mov.f64 	%fd116, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd117, %fd115, %fd92, %fd116;
	mov.f64 	%fd118, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd119, %fd117, %fd92, %fd118;
	mov.f64 	%fd120, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd121, %fd119, %fd92, %fd120;
	mov.f64 	%fd122, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd123, %fd121, %fd92, %fd122;
	mov.f64 	%fd124, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd125, %fd123, %fd92, %fd124;
	mov.f64 	%fd126, 0d3FC99999999840D2;
	fma.rn.f64 	%fd127, %fd125, %fd92, %fd126;
	mov.f64 	%fd128, 0dBFD555555555544C;
	fma.rn.f64 	%fd129, %fd127, %fd92, %fd128;
	mul.f64 	%fd130, %fd129, %fd92;
	fma.rn.f64 	%fd131, %fd130, %fd91, %fd91;
	mov.f64 	%fd132, 0d3FF921FB54442D18;
	sub.f64 	%fd133, %fd132, %fd131;
	setp.gt.f64 	%p19, %fd11, %fd12;
	selp.f64 	%fd134, %fd133, %fd131, %p19;
	mov.f64 	%fd135, 0d400921FB54442D18;
	sub.f64 	%fd136, %fd135, %fd134;
	setp.lt.f64 	%p20, %fd38, 0d0000000000000000;
	selp.f64 	%fd225, %fd136, %fd134, %p20;
	bra.uni 	BB69_20;

BB69_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd38;
	}
	setp.lt.s32 	%p21, %r27, 0;
	selp.f64 	 %fd225, 0d4002D97C7F3321D2, 0d3FE921FB54442D18, %p21;
	bra.uni 	BB69_20;

BB69_19:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd38;
	}
	setp.lt.s32 	%p22, %r28, 0;
	selp.f64 	 %fd225, 0d400921FB54442D18, 0d0000000000000000, %p22;

BB69_20:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd39;
	}
	and.b32  	%r30, %r29, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd225;
	}
	or.b32  	%r32, %r31, %r30;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r33, %temp}, %fd225;
	}
	mov.b64 	%fd226, {%r33, %r32};
	bra.uni 	BB69_22;

BB69_21:
	add.f64 	%fd226, %fd39, %fd38;

BB69_22:
	mul.f64 	%fd137, %fd226, %fd40;
	fma.rn.f64 	%fd228, %fd224, %fd41, %fd137;
	mul.f64 	%fd138, %fd226, %fd41;
	mul.f64 	%fd139, %fd224, %fd40;
	sub.f64 	%fd21, %fd139, %fd138;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd21;
	}
	setp.lt.u32 	%p23, %r11, 1082535491;
	setp.lt.s32 	%p24, %r11, -1064875759;
	or.pred  	%p25, %p23, %p24;
	@%p25 bra 	BB69_24;

	setp.lt.s32 	%p26, %r11, 0;
	selp.f64 	%fd140, 0d0000000000000000, %fd2, %p26;
	abs.f64 	%fd141, %fd21;
	setp.gtu.f64 	%p27, %fd141, %fd2;
	add.f64 	%fd142, %fd21, %fd21;
	selp.f64 	%fd227, %fd142, %fd140, %p27;
	bra.uni 	BB69_27;

BB69_24:
	mul.f64 	%fd143, %fd21, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd144, %fd143;
	cvt.rzi.s32.f64 	%r12, %fd144;
	mov.f64 	%fd145, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd146, %fd144, %fd145, %fd21;
	mov.f64 	%fd147, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd148, %fd144, %fd147, %fd146;
	mov.f64 	%fd149, 0d3E928A27E30F5561;
	mov.f64 	%fd150, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd151, %fd150, %fd148, %fd149;
	mov.f64 	%fd152, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd153, %fd151, %fd148, %fd152;
	mov.f64 	%fd154, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd155, %fd153, %fd148, %fd154;
	mov.f64 	%fd156, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd157, %fd155, %fd148, %fd156;
	mov.f64 	%fd158, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd159, %fd157, %fd148, %fd158;
	mov.f64 	%fd160, 0d3F8111111111A24E;
	fma.rn.f64 	%fd161, %fd159, %fd148, %fd160;
	mov.f64 	%fd162, 0d3FA555555555211D;
	fma.rn.f64 	%fd163, %fd161, %fd148, %fd162;
	mov.f64 	%fd164, 0d3FC5555555555530;
	fma.rn.f64 	%fd165, %fd163, %fd148, %fd164;
	mov.f64 	%fd166, 0d3FE0000000000005;
	fma.rn.f64 	%fd167, %fd165, %fd148, %fd166;
	mov.f64 	%fd168, 0d3FF0000000000000;
	fma.rn.f64 	%fd169, %fd167, %fd148, %fd168;
	fma.rn.f64 	%fd23, %fd169, %fd148, %fd168;
	shl.b32 	%r13, %r12, 20;
	add.s32 	%r14, %r13, 1072693248;
	abs.s32 	%r34, %r12;
	setp.lt.s32 	%p28, %r34, 1021;
	@%p28 bra 	BB69_26;

	add.s32 	%r35, %r13, 1130364928;
	setp.lt.s32 	%p29, %r12, 0;
	mov.u32 	%r36, 0;
	selp.b32 	%r37, %r35, %r14, %p29;
	shr.s32 	%r38, %r12, 31;
	add.s32 	%r39, %r38, 1073741824;
	and.b32  	%r40, %r39, -57671680;
	add.s32 	%r41, %r37, -1048576;
	mov.b64 	%fd170, {%r36, %r40};
	mul.f64 	%fd171, %fd23, %fd170;
	mov.b64 	%fd172, {%r36, %r41};
	mul.f64 	%fd227, %fd171, %fd172;
	bra.uni 	BB69_27;

BB69_26:
	mov.u32 	%r42, 0;
	mov.b64 	%fd173, {%r42, %r14};
	mul.f64 	%fd227, %fd173, %fd23;

BB69_27:
	abs.f64 	%fd174, %fd228;
	setp.neu.f64 	%p30, %fd174, %fd2;
	@%p30 bra 	BB69_29;

	mov.f64 	%fd175, 0d0000000000000000;
	mul.rn.f64 	%fd228, %fd228, %fd175;

BB69_29:
	mul.f64 	%fd176, %fd228, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r52, %fd176;
	st.local.u32 	[%rd1], %r52;
	cvt.rn.f64.s32 	%fd177, %r52;
	neg.f64 	%fd178, %fd177;
	mov.f64 	%fd179, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd180, %fd178, %fd179, %fd228;
	mov.f64 	%fd181, 0d3C91A62633145C00;
	fma.rn.f64 	%fd182, %fd178, %fd181, %fd180;
	mov.f64 	%fd183, 0d397B839A252049C0;
	fma.rn.f64 	%fd229, %fd178, %fd183, %fd182;
	abs.f64 	%fd184, %fd228;
	setp.leu.f64 	%p31, %fd184, 0d41E0000000000000;
	@%p31 bra 	BB69_31;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd228;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd229, [retval0+0];
	}
	
	ld.local.u32 	%r52, [%rd1];

BB69_31:
	mul.rn.f64 	%fd185, %fd229, %fd229;
	mov.f64 	%fd186, 0d3E21EEA7C1EF8528;
	mov.f64 	%fd187, 0dBDA8FF8320FD8164;
	fma.rn.f64 	%fd188, %fd187, %fd185, %fd186;
	mov.f64 	%fd189, 0dBE927E4F8E06E6D9;
	fma.rn.f64 	%fd190, %fd188, %fd185, %fd189;
	mov.f64 	%fd191, 0d3EFA01A019DDBCE9;
	fma.rn.f64 	%fd192, %fd190, %fd185, %fd191;
	mov.f64 	%fd193, 0dBF56C16C16C15D47;
	fma.rn.f64 	%fd194, %fd192, %fd185, %fd193;
	mov.f64 	%fd195, 0d3FA5555555555551;
	fma.rn.f64 	%fd196, %fd194, %fd185, %fd195;
	mov.f64 	%fd197, 0dBFE0000000000000;
	fma.rn.f64 	%fd198, %fd196, %fd185, %fd197;
	mov.f64 	%fd199, 0d3FF0000000000000;
	fma.rn.f64 	%fd200, %fd198, %fd185, %fd199;
	mov.f64 	%fd201, 0dBE5AE5F12CB0D246;
	mov.f64 	%fd202, 0d3DE5DB65F9785EBA;
	fma.rn.f64 	%fd203, %fd202, %fd185, %fd201;
	mov.f64 	%fd204, 0d3EC71DE369ACE392;
	fma.rn.f64 	%fd205, %fd203, %fd185, %fd204;
	mov.f64 	%fd206, 0dBF2A01A019DB62A1;
	fma.rn.f64 	%fd207, %fd205, %fd185, %fd206;
	mov.f64 	%fd208, 0d3F81111111110818;
	fma.rn.f64 	%fd209, %fd207, %fd185, %fd208;
	mov.f64 	%fd210, 0dBFC5555555555554;
	fma.rn.f64 	%fd211, %fd209, %fd185, %fd210;
	mov.f64 	%fd212, 0d0000000000000000;
	fma.rn.f64 	%fd213, %fd211, %fd185, %fd212;
	fma.rn.f64 	%fd214, %fd213, %fd229, %fd229;
	{
	.reg .b32 temp;
	and.b32	 temp, %r52, 1;
	setp.b32.eq 	 %p32, temp, 1;
	}
	not.pred 	%p33, %p32;
	selp.f64 	%fd215, %fd214, %fd200, %p33;
	selp.f64 	%fd216, %fd200, %fd214, %p33;
	and.b32  	%r45, %r52, 2;
	setp.eq.s32 	%p34, %r45, 0;
	neg.f64 	%fd217, %fd215;
	selp.f64 	%fd218, %fd215, %fd217, %p34;
	add.s32 	%r46, %r52, 1;
	and.b32  	%r47, %r46, 2;
	setp.eq.s32 	%p35, %r47, 0;
	neg.f64 	%fd219, %fd216;
	selp.f64 	%fd220, %fd216, %fd219, %p35;
	mul.f64 	%fd230, %fd227, %fd220;
	mul.f64 	%fd231, %fd227, %fd218;
	bra.uni 	BB69_34;

BB69_32:
	mov.f64 	%fd231, 0d0000000000000000;
	setp.neu.f64 	%p36, %fd41, 0d0000000000000000;
	mov.f64 	%fd230, %fd231;
	@%p36 bra 	BB69_34;

	mov.f64 	%fd230, 0d7FFFFFFFFFFFFFFF;
	mov.f64 	%fd231, %fd230;

BB69_34:
	st.param.f64	[func_retval0+0], %fd230;
	st.param.f64	[func_retval0+8], %fd231;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) cpowf(
	.param .b32 cpowf_param_0,
	.param .b32 cpowf_param_1,
	.param .b32 cpowf_param_2,
	.param .b32 cpowf_param_3
)
{
	.local .align 4 .b8 	__local_depot70[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<37>;
	.reg .s32 	%r<113>;
	.reg .f32 	%f<138>;
	.reg .s64 	%rd<12>;


	mov.u64 	%SPL, __local_depot70;
	ld.param.f32 	%f25, [cpowf_param_0];
	ld.param.f32 	%f26, [cpowf_param_1];
	ld.param.f32 	%f27, [cpowf_param_2];
	ld.param.f32 	%f28, [cpowf_param_3];
	add.u64 	%rd5, %SPL, 0;
	setp.eq.f32 	%p1, %f26, 0f00000000;
	setp.eq.f32 	%p2, %f25, 0f00000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB70_20;

	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f25;
	.param .b32 param1;
	st.param.f32	[param1+0], %f26;
	.param .b32 retval0;
	call.uni (retval0), 
	_CHABS, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f1, [retval0+0];
	}
	
	mov.b32 	%r1, %f1;
	setp.gt.f32 	%p4, %f1, 0f00000000;
	mov.u32 	%r28, 2139095040;
	mov.b32 	%f2, %r28;
	setp.lt.f32 	%p5, %f1, %f2;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB70_3;

	lg2.approx.f32 	%f29, %f1;
	mul.f32 	%f132, %f29, 0f3F317218;
	bra.uni 	BB70_4;

BB70_3:
	setp.lt.u32 	%p7, %r1, 8388608;
	mul.f32 	%f30, %f1, 0f4B800000;
	mov.b32 	%r29, %f30;
	selp.b32 	%r30, %r29, %r1, %p7;
	selp.b32 	%r31, -151, -127, %p7;
	and.b32  	%r32, %r30, -2139095041;
	or.b32  	%r33, %r32, 1065353216;
	mov.b32 	%f31, %r33;
	shr.u32 	%r34, %r30, 23;
	setp.gt.f32 	%p8, %f31, 0f3FB504F3;
	mul.f32 	%f32, %f31, 0f3F000000;
	selp.f32 	%f33, %f32, %f31, %p8;
	selp.u32 	%r35, 1, 0, %p8;
	add.s32 	%r36, %r34, %r31;
	add.s32 	%r37, %r36, %r35;
	add.f32 	%f34, %f33, 0fBF800000;
	add.f32 	%f35, %f33, 0f3F800000;
	div.approx.f32 	%f36, %f34, %f35;
	neg.f32 	%f37, %f34;
	mul.rn.f32 	%f38, %f37, %f36;
	add.rn.f32 	%f39, %f34, %f38;
	mul.f32 	%f40, %f39, %f39;
	mov.f32 	%f41, 0f3C4C4BE0;
	mov.f32 	%f42, 0f3B2063C3;
	fma.rn.f32 	%f43, %f42, %f40, %f41;
	mov.f32 	%f44, 0f3DAAAB50;
	fma.rn.f32 	%f45, %f43, %f40, %f44;
	mul.f32 	%f46, %f45, %f40;
	fma.rn.f32 	%f47, %f46, %f39, %f38;
	add.f32 	%f48, %f47, %f34;
	cvt.rn.f32.s32 	%f49, %r37;
	mov.f32 	%f50, 0f3F317218;
	fma.rn.f32 	%f132, %f49, %f50, %f48;

BB70_4:
	abs.f32 	%f6, %f26;
	setp.eq.f32 	%p9, %f6, 0f00000000;
	abs.f32 	%f7, %f25;
	setp.eq.f32 	%p10, %f7, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	mov.b32 	%r38, %f26;
	and.b32  	%r2, %r38, -2147483648;
	@%p11 bra 	BB70_8;

	setp.eq.f32 	%p12, %f6, %f2;
	setp.eq.f32 	%p13, %f7, %f2;
	and.pred  	%p14, %p12, %p13;
	@%p14 bra 	BB70_7;

	min.f32 	%f51, %f6, %f7;
	max.f32 	%f52, %f6, %f7;
	div.rn.f32 	%f53, %f51, %f52;
	mul.rn.f32 	%f54, %f53, %f53;
	mov.f32 	%f55, 0fC0B59883;
	mov.f32 	%f56, 0fBF52C7EA;
	fma.rn.f32 	%f57, %f54, %f56, %f55;
	mov.f32 	%f58, 0fC0D21907;
	fma.rn.f32 	%f59, %f57, %f54, %f58;
	mul.f32 	%f60, %f59, %f54;
	mul.f32 	%f61, %f60, %f53;
	add.f32 	%f62, %f54, 0f41355DC0;
	mov.f32 	%f63, 0f41E6BD60;
	fma.rn.f32 	%f64, %f62, %f54, %f63;
	mov.f32 	%f65, 0f419D92C8;
	fma.rn.f32 	%f66, %f64, %f54, %f65;
	rcp.rn.f32 	%f67, %f66;
	fma.rn.f32 	%f68, %f61, %f67, %f53;
	mov.f32 	%f69, 0f3FC90FDB;
	sub.f32 	%f70, %f69, %f68;
	setp.gt.f32 	%p15, %f6, %f7;
	selp.f32 	%f71, %f70, %f68, %p15;
	mov.f32 	%f72, 0f40490FDB;
	sub.f32 	%f73, %f72, %f71;
	setp.lt.f32 	%p16, %f25, 0f00000000;
	selp.f32 	%f74, %f73, %f71, %p16;
	mov.b32 	%r39, %f74;
	or.b32  	%r40, %r2, %r39;
	mov.b32 	%f75, %r40;
	add.f32 	%f76, %f26, %f25;
	setp.gtu.f32 	%p17, %f76, %f2;
	selp.f32 	%f133, %f76, %f75, %p17;
	bra.uni 	BB70_9;

BB70_7:
	mov.b32 	%r41, %f25;
	setp.lt.s32 	%p18, %r41, 0;
	selp.f32 	%f77, 0f4016CBE4, 0f3F490FDB, %p18;
	mov.b32 	%r42, %f77;
	or.b32  	%r43, %r2, %r42;
	mov.b32 	%f133, %r43;
	bra.uni 	BB70_9;

BB70_8:
	mov.b32 	%r44, %f25;
	setp.lt.s32 	%p19, %r44, 0;
	selp.f32 	%f78, 0f40490FDB, 0f00000000, %p19;
	mov.b32 	%r45, %f78;
	or.b32  	%r46, %r2, %r45;
	mov.b32 	%f133, %r46;

BB70_9:
	mul.f32 	%f79, %f133, %f27;
	fma.rn.f32 	%f134, %f132, %f28, %f79;
	mul.f32 	%f80, %f133, %f28;
	mul.f32 	%f81, %f132, %f27;
	sub.f32 	%f82, %f81, %f80;
	mul.f32 	%f83, %f82, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f84, %f83;
	mov.f32 	%f85, 0fBF317200;
	fma.rn.f32 	%f86, %f84, %f85, %f82;
	mov.f32 	%f87, 0fB5BFBE8E;
	fma.rn.f32 	%f88, %f84, %f87, %f86;
	mul.f32 	%f89, %f88, 0f3FB8AA3B;
	ex2.approx.f32 	%f90, %f89;
	add.f32 	%f91, %f84, 0f00000000;
	ex2.approx.f32 	%f92, %f91;
	mul.f32 	%f93, %f90, %f92;
	setp.lt.f32 	%p20, %f82, 0fC2D20000;
	selp.f32 	%f94, 0f00000000, %f93, %p20;
	setp.gt.f32 	%p21, %f82, 0f42D20000;
	selp.f32 	%f13, %f2, %f94, %p21;
	abs.f32 	%f95, %f134;
	setp.neu.f32 	%p22, %f95, %f2;
	@%p22 bra 	BB70_11;

	mov.f32 	%f96, 0f00000000;
	mul.rn.f32 	%f134, %f134, %f96;

BB70_11:
	mul.f32 	%f97, %f134, 0f3F22F983;
	cvt.rni.s32.f32 	%r112, %f97;
	cvt.rn.f32.s32 	%f98, %r112;
	neg.f32 	%f99, %f98;
	mov.f32 	%f100, 0f3FC90FDA;
	fma.rn.f32 	%f101, %f99, %f100, %f134;
	mov.f32 	%f102, 0f33A22168;
	fma.rn.f32 	%f103, %f99, %f102, %f101;
	mov.f32 	%f104, 0f27C234C5;
	fma.rn.f32 	%f135, %f99, %f104, %f103;
	abs.f32 	%f105, %f134;
	setp.leu.f32 	%p23, %f105, 0f47CE4780;
	@%p23 bra 	BB70_19;

	mov.b32 	%r4, %f134;
	shr.u32 	%r5, %r4, 23;
	and.b32  	%r48, %r5, 255;
	add.s32 	%r49, %r48, -128;
	shl.b32 	%r50, %r4, 8;
	or.b32  	%r6, %r50, -2147483648;
	shr.u32 	%r7, %r49, 5;
	mov.u32 	%r106, 0;
	mov.u64 	%rd11, 0;

BB70_13:
	.pragma "nounroll";
	mov.u64 	%rd7, __cudart_i2opi_f;
	add.s64 	%rd8, %rd7, %rd11;
	ld.const.u32 	%r51, [%rd8];
	mul.hi.u32 	%r53, %r51, %r6;
	mad.lo.s32 	%r54, %r51, %r6, %r106;
	setp.lt.u32 	%p24, %r54, %r106;
	selp.u32 	%r55, 1, 0, %p24;
	add.s32 	%r106, %r55, %r53;
	add.s64 	%rd9, %rd5, %rd11;
	st.local.u32 	[%rd9], %r54;
	add.s64 	%rd11, %rd11, 4;
	setp.ne.s64 	%p25, %rd11, 24;
	@%p25 bra 	BB70_13;

	and.b32  	%r109, %r4, -2147483648;
	st.local.u32 	[%rd5+24], %r106;
	mov.u32 	%r58, 6;
	sub.s32 	%r59, %r58, %r7;
	mul.wide.s32 	%rd10, %r59, 4;
	add.s64 	%rd4, %rd5, %rd10;
	ld.local.u32 	%r107, [%rd4];
	ld.local.u32 	%r108, [%rd4+-4];
	and.b32  	%r13, %r5, 31;
	setp.eq.s32 	%p26, %r13, 0;
	@%p26 bra 	BB70_16;

	mov.u32 	%r62, 32;
	sub.s32 	%r63, %r62, %r13;
	shr.u32 	%r64, %r108, %r63;
	shl.b32 	%r65, %r107, %r13;
	add.s32 	%r107, %r64, %r65;
	ld.local.u32 	%r66, [%rd4+-8];
	shr.u32 	%r68, %r66, %r63;
	shl.b32 	%r69, %r108, %r13;
	add.s32 	%r108, %r68, %r69;

BB70_16:
	shr.u32 	%r70, %r108, 30;
	shl.b32 	%r71, %r107, 2;
	add.s32 	%r110, %r70, %r71;
	shl.b32 	%r19, %r108, 2;
	shr.u32 	%r72, %r110, 31;
	shr.u32 	%r73, %r107, 30;
	add.s32 	%r74, %r72, %r73;
	neg.s32 	%r75, %r74;
	setp.eq.s32 	%p27, %r109, 0;
	selp.b32 	%r112, %r74, %r75, %p27;
	setp.eq.s32 	%p28, %r72, 0;
	mov.u32 	%r111, %r19;
	@%p28 bra 	BB70_18;

	not.b32 	%r76, %r110;
	neg.s32 	%r21, %r19;
	setp.eq.s32 	%p29, %r19, 0;
	selp.u32 	%r77, 1, 0, %p29;
	add.s32 	%r110, %r77, %r76;
	xor.b32  	%r109, %r109, -2147483648;
	mov.u32 	%r111, %r21;

BB70_18:
	clz.b32 	%r78, %r110;
	setp.eq.s32 	%p30, %r78, 0;
	shl.b32 	%r79, %r110, %r78;
	mov.u32 	%r80, 32;
	sub.s32 	%r81, %r80, %r78;
	shr.u32 	%r82, %r111, %r81;
	add.s32 	%r83, %r82, %r79;
	selp.b32 	%r84, %r110, %r83, %p30;
	mul.lo.s32 	%r85, %r84, -921707870;
	mov.u32 	%r86, -921707870;
	mul.hi.u32 	%r87, %r84, %r86;
	setp.gt.s32 	%p31, %r87, 0;
	shl.b32 	%r88, %r87, 1;
	shr.u32 	%r89, %r85, 31;
	add.s32 	%r90, %r89, %r88;
	selp.b32 	%r91, %r90, %r87, %p31;
	selp.b32 	%r92, -1, 0, %p31;
	mov.u32 	%r93, 126;
	sub.s32 	%r94, %r93, %r78;
	add.s32 	%r95, %r94, %r92;
	shl.b32 	%r96, %r95, 23;
	add.s32 	%r97, %r91, 1;
	shr.u32 	%r98, %r97, 7;
	add.s32 	%r99, %r98, 1;
	shr.u32 	%r100, %r99, 1;
	add.s32 	%r101, %r100, %r96;
	or.b32  	%r102, %r101, %r109;
	mov.b32 	%f135, %r102;

BB70_19:
	mul.f32 	%f106, %f135, %f135;
	mov.f32 	%f107, 0fBAB6061A;
	mov.f32 	%f108, 0f37CCF5CE;
	fma.rn.f32 	%f109, %f108, %f106, %f107;
	mov.f32 	%f110, 0f3D2AAAA5;
	fma.rn.f32 	%f111, %f109, %f106, %f110;
	mov.f32 	%f112, 0fBF000000;
	fma.rn.f32 	%f113, %f111, %f106, %f112;
	mov.f32 	%f114, 0f3F800000;
	fma.rn.f32 	%f115, %f113, %f106, %f114;
	mov.f32 	%f116, 0f3C08839E;
	mov.f32 	%f117, 0fB94CA1F9;
	fma.rn.f32 	%f118, %f117, %f106, %f116;
	mov.f32 	%f119, 0fBE2AAAA3;
	fma.rn.f32 	%f120, %f118, %f106, %f119;
	mov.f32 	%f121, 0f00000000;
	fma.rn.f32 	%f122, %f120, %f106, %f121;
	fma.rn.f32 	%f123, %f122, %f135, %f135;
	{
	.reg .b32 temp;
	and.b32	 temp, %r112, 1;
	setp.b32.eq 	 %p32, temp, 1;
	}
	not.pred 	%p33, %p32;
	selp.f32 	%f124, %f123, %f115, %p33;
	selp.f32 	%f125, %f115, %f123, %p33;
	and.b32  	%r103, %r112, 2;
	setp.eq.s32 	%p34, %r103, 0;
	neg.f32 	%f126, %f124;
	selp.f32 	%f127, %f124, %f126, %p34;
	add.s32 	%r104, %r112, 1;
	and.b32  	%r105, %r104, 2;
	setp.eq.s32 	%p35, %r105, 0;
	neg.f32 	%f128, %f125;
	selp.f32 	%f129, %f125, %f128, %p35;
	mul.f32 	%f136, %f13, %f129;
	mul.f32 	%f137, %f13, %f127;
	bra.uni 	BB70_22;

BB70_20:
	mov.f32 	%f137, 0f00000000;
	setp.neu.f32 	%p36, %f28, 0f00000000;
	mov.f32 	%f136, %f137;
	@%p36 bra 	BB70_22;

	mov.f32 	%f136, 0f7FFFFFFF;
	mov.f32 	%f137, %f136;

BB70_22:
	st.param.f32	[func_retval0+0], %f136;
	st.param.f32	[func_retval0+4], %f137;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHSQRT(
	.param .b32 _CHSQRT_param_0,
	.param .b32 _CHSQRT_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<21>;


	ld.param.f32 	%f6, [_CHSQRT_param_0];
	ld.param.f32 	%f7, [_CHSQRT_param_1];
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.f32	[param0+0], %f6;
	.param .b32 param1;
	st.param.f32	[param1+0], %f7;
	.param .b32 retval0;
	call.uni (retval0), 
	_CHABS, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f10, [retval0+0];
	}
	
	abs.f32 	%f11, %f6;
	mul.f32 	%f12, %f11, 0f3F000000;
	fma.rn.f32 	%f13, %f10, 0f3F000000, %f12;
	sqrt.rn.f32 	%f1, %f13;
	setp.eq.f32 	%p1, %f1, 0f00000000;
	mov.f32 	%f20, 0f00000000;
	mov.f32 	%f19, %f20;
	@%p1 bra 	BB71_2;

	abs.f32 	%f14, %f7;
	add.f32 	%f15, %f1, %f1;
	div.rn.f32 	%f16, %f14, %f15;
	setp.lt.f32 	%p2, %f6, 0f00000000;
	selp.f32 	%f19, %f16, %f1, %p2;
	selp.f32 	%f17, %f1, %f16, %p2;
	setp.neu.f32 	%p3, %f19, 0f00000000;
	setp.lt.f32 	%p4, %f7, 0f00000000;
	and.pred  	%p5, %p4, %p3;
	neg.f32 	%f18, %f17;
	selp.f32 	%f20, %f18, %f17, %p5;

BB71_2:
	st.param.f32	[func_retval0+0], %f19;
	st.param.f32	[func_retval0+4], %f20;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _CSQRT(
	.param .b64 _CSQRT_param_0,
	.param .b64 _CSQRT_param_1
)
{
	.reg .pred 	%p<6>;
	.reg .f64 	%fd<21>;


	ld.param.f64 	%fd6, [_CSQRT_param_0];
	ld.param.f64 	%fd7, [_CSQRT_param_1];
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd6;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd7;
	.param .b64 retval0;
	call.uni (retval0), 
	_CABS, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd10, [retval0+0];
	}
	
	abs.f64 	%fd11, %fd6;
	mul.f64 	%fd12, %fd11, 0d3FE0000000000000;
	fma.rn.f64 	%fd13, %fd10, 0d3FE0000000000000, %fd12;
	sqrt.rn.f64 	%fd1, %fd13;
	setp.eq.f64 	%p1, %fd1, 0d0000000000000000;
	mov.f64 	%fd20, 0d0000000000000000;
	mov.f64 	%fd19, %fd20;
	@%p1 bra 	BB72_2;

	abs.f64 	%fd14, %fd7;
	add.f64 	%fd15, %fd1, %fd1;
	div.rn.f64 	%fd16, %fd14, %fd15;
	setp.lt.f64 	%p2, %fd6, 0d0000000000000000;
	selp.f64 	%fd19, %fd16, %fd1, %p2;
	selp.f64 	%fd17, %fd1, %fd16, %p2;
	setp.neu.f64 	%p3, %fd19, 0d0000000000000000;
	setp.lt.f64 	%p4, %fd7, 0d0000000000000000;
	and.pred  	%p5, %p4, %p3;
	neg.f64 	%fd18, %fd17;
	selp.f64 	%fd20, %fd18, %fd17, %p5;

BB72_2:
	st.param.f64	[func_retval0+0], %fd19;
	st.param.f64	[func_retval0+8], %fd20;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _CSIN(
	.param .b64 _CSIN_param_0,
	.param .b64 _CSIN_param_1
)
{
	.local .align 4 .b8 	__local_depot73[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<20>;
	.reg .s32 	%r<63>;
	.reg .f32 	%f<6>;
	.reg .s64 	%rd<14>;
	.reg .f64 	%fd<201>;


	mov.u64 	%SPL, __local_depot73;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd41, [_CSIN_param_0];
	ld.param.f64 	%fd42, [_CSIN_param_1];
	add.u64 	%rd3, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd3;
	add.u64 	%rd4, %SP, 4;
	cvta.to.local.u64 	%rd2, %rd4;
	mov.u64 	%rd5, 9218868437227405312;
	mov.b64 	%fd1, %rd5;
	abs.f64 	%fd2, %fd41;
	setp.neu.f64 	%p1, %fd2, %fd1;
	mov.f64 	%fd197, %fd41;
	@%p1 bra 	BB73_2;

	mov.f64 	%fd43, 0d0000000000000000;
	mul.rn.f64 	%fd3, %fd41, %fd43;
	mov.f64 	%fd197, %fd3;

BB73_2:
	mov.f64 	%fd4, %fd197;
	mul.f64 	%fd44, %fd4, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r61, %fd44;
	st.local.u32 	[%rd2], %r61;
	cvt.rn.f64.s32 	%fd45, %r61;
	neg.f64 	%fd46, %fd45;
	mov.f64 	%fd47, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd48, %fd46, %fd47, %fd4;
	mov.f64 	%fd49, 0d3C91A62633145C00;
	fma.rn.f64 	%fd50, %fd46, %fd49, %fd48;
	mov.f64 	%fd51, 0d397B839A252049C0;
	fma.rn.f64 	%fd190, %fd46, %fd51, %fd50;
	abs.f64 	%fd52, %fd4;
	setp.leu.f64 	%p2, %fd52, 0d41E0000000000000;
	@%p2 bra 	BB73_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd190, [retval0+0];
	}
	
	ld.local.u32 	%r61, [%rd2];

BB73_4:
	shl.b32 	%r13, %r61, 3;
	and.b32  	%r14, %r13, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r61, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	not.pred 	%p4, %p3;
	selp.f64 	 %fd53, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p4;
	mul.wide.u32 	%rd7, %r14, 8;
	mov.u64 	%rd8, __cudart_sin_cos_coeffs;
	add.s64 	%rd9, %rd7, %rd8;
	ld.const.f64 	%fd54, [%rd9+8];
	mul.rn.f64 	%fd8, %fd190, %fd190;
	fma.rn.f64 	%fd55, %fd53, %fd8, %fd54;
	ld.const.f64 	%fd56, [%rd9+16];
	fma.rn.f64 	%fd57, %fd55, %fd8, %fd56;
	ld.const.f64 	%fd58, [%rd9+24];
	fma.rn.f64 	%fd59, %fd57, %fd8, %fd58;
	ld.const.f64 	%fd60, [%rd9+32];
	fma.rn.f64 	%fd61, %fd59, %fd8, %fd60;
	ld.const.f64 	%fd62, [%rd9+40];
	fma.rn.f64 	%fd63, %fd61, %fd8, %fd62;
	ld.const.f64 	%fd64, [%rd9+48];
	fma.rn.f64 	%fd9, %fd63, %fd8, %fd64;
	fma.rn.f64 	%fd191, %fd9, %fd190, %fd190;
	@%p4 bra 	BB73_6;

	mov.f64 	%fd65, 0d3FF0000000000000;
	fma.rn.f64 	%fd191, %fd9, %fd8, %fd65;

BB73_6:
	and.b32  	%r21, %r61, 2;
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	BB73_8;

	mov.f64 	%fd66, 0d0000000000000000;
	mov.f64 	%fd67, 0dBFF0000000000000;
	fma.rn.f64 	%fd191, %fd191, %fd67, %fd66;

BB73_8:
	abs.f64 	%fd15, %fd42;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd15;
	}
	setp.lt.u32 	%p6, %r4, 1082536911;
	@%p6 bra 	BB73_12;

	setp.leu.f64 	%p7, %fd15, 0d0000000000000000;
	mov.f64 	%fd192, %fd42;
	@%p7 bra 	BB73_11;

	mov.u32 	%r22, 2139095040;
	mov.b32 	%f1, %r22;
	cvt.f64.f32 	%fd16, %f1;
	mov.f64 	%fd192, %fd16;

BB73_11:
	mov.f64 	%fd17, %fd192;
	add.f64 	%fd194, %fd17, %fd17;
	bra.uni 	BB73_16;

BB73_12:
	mul.f64 	%fd68, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd69, %fd68;
	cvt.rzi.s32.f64 	%r23, %fd69;
	mov.f64 	%fd70, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd71, %fd69, %fd70, %fd15;
	mov.f64 	%fd72, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd73, %fd69, %fd72, %fd71;
	mov.f64 	%fd74, 0d3E928A27E30F5561;
	mov.f64 	%fd75, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd76, %fd75, %fd73, %fd74;
	mov.f64 	%fd77, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd78, %fd76, %fd73, %fd77;
	mov.f64 	%fd79, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd80, %fd78, %fd73, %fd79;
	mov.f64 	%fd81, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd82, %fd80, %fd73, %fd81;
	mov.f64 	%fd83, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd84, %fd82, %fd73, %fd83;
	mov.f64 	%fd85, 0d3F8111111111A24E;
	fma.rn.f64 	%fd86, %fd84, %fd73, %fd85;
	mov.f64 	%fd87, 0d3FA555555555211D;
	fma.rn.f64 	%fd88, %fd86, %fd73, %fd87;
	mov.f64 	%fd89, 0d3FC5555555555530;
	fma.rn.f64 	%fd90, %fd88, %fd73, %fd89;
	mov.f64 	%fd91, 0d3FE0000000000005;
	fma.rn.f64 	%fd92, %fd90, %fd73, %fd91;
	mov.f64 	%fd93, 0d3FF0000000000000;
	fma.rn.f64 	%fd94, %fd92, %fd73, %fd93;
	fma.rn.f64 	%fd19, %fd94, %fd73, %fd93;
	add.s32 	%r5, %r23, -2;
	shl.b32 	%r24, %r5, 20;
	add.s32 	%r6, %r24, 1072693248;
	abs.s32 	%r25, %r5;
	setp.lt.s32 	%p8, %r25, 1021;
	@%p8 bra 	BB73_14;

	add.s32 	%r27, %r24, 1130364928;
	setp.lt.s32 	%p9, %r5, 0;
	mov.u32 	%r28, 0;
	selp.b32 	%r29, %r27, %r6, %p9;
	shr.s32 	%r30, %r5, 31;
	add.s32 	%r31, %r30, 1073741824;
	and.b32  	%r32, %r31, -57671680;
	add.s32 	%r33, %r29, -1048576;
	mov.b64 	%fd95, {%r28, %r32};
	mul.f64 	%fd96, %fd19, %fd95;
	mov.b64 	%fd97, {%r28, %r33};
	mul.f64 	%fd193, %fd96, %fd97;
	bra.uni 	BB73_15;

BB73_14:
	mov.u32 	%r34, 0;
	mov.b64 	%fd98, {%r34, %r6};
	mul.f64 	%fd193, %fd98, %fd19;

BB73_15:
	
	cvt.rn.f32.f64     %f2,%fd193;
	
	
	rcp.approx.f32.ftz %f3,%f2;
	
	
	cvt.f64.f32        %fd100,%f3;
	
	neg.f64 	%fd101, %fd193;
	fma.rn.f64 	%fd103, %fd101, %fd100, %fd93;
	fma.rn.f64 	%fd104, %fd103, %fd103, %fd103;
	fma.rn.f64 	%fd105, %fd104, %fd100, %fd100;
	mul.f64 	%fd106, %fd105, 0d3FC0000000000000;
	mov.f64 	%fd107, 0d4000000000000000;
	fma.rn.f64 	%fd194, %fd107, %fd193, %fd106;

BB73_16:
	mul.f64 	%fd25, %fd191, %fd194;
	mov.f64 	%fd196, %fd41;
	@%p1 bra 	BB73_18;

	mov.f64 	%fd108, 0d0000000000000000;
	mul.rn.f64 	%fd196, %fd41, %fd108;

BB73_18:
	mul.f64 	%fd109, %fd196, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r62, %fd109;
	st.local.u32 	[%rd1], %r62;
	cvt.rn.f64.s32 	%fd110, %r62;
	neg.f64 	%fd111, %fd110;
	fma.rn.f64 	%fd113, %fd111, %fd47, %fd196;
	fma.rn.f64 	%fd115, %fd111, %fd49, %fd113;
	fma.rn.f64 	%fd198, %fd111, %fd51, %fd115;
	abs.f64 	%fd117, %fd196;
	setp.leu.f64 	%p11, %fd117, 0d41E0000000000000;
	@%p11 bra 	BB73_20;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd196;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd198, [retval0+0];
	}
	
	ld.local.u32 	%r62, [%rd1];

BB73_20:
	add.s32 	%r10, %r62, 1;
	shl.b32 	%r37, %r10, 3;
	and.b32  	%r38, %r37, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r10, 1;
	setp.b32.eq 	 %p12, temp, 1;
	}
	not.pred 	%p13, %p12;
	selp.f64 	 %fd118, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p13;
	mul.wide.u32 	%rd11, %r38, 8;
	add.s64 	%rd13, %rd11, %rd8;
	ld.const.f64 	%fd119, [%rd13+8];
	mul.rn.f64 	%fd31, %fd198, %fd198;
	fma.rn.f64 	%fd120, %fd118, %fd31, %fd119;
	ld.const.f64 	%fd121, [%rd13+16];
	fma.rn.f64 	%fd122, %fd120, %fd31, %fd121;
	ld.const.f64 	%fd123, [%rd13+24];
	fma.rn.f64 	%fd124, %fd122, %fd31, %fd123;
	ld.const.f64 	%fd125, [%rd13+32];
	fma.rn.f64 	%fd126, %fd124, %fd31, %fd125;
	ld.const.f64 	%fd127, [%rd13+40];
	fma.rn.f64 	%fd128, %fd126, %fd31, %fd127;
	ld.const.f64 	%fd129, [%rd13+48];
	fma.rn.f64 	%fd32, %fd128, %fd31, %fd129;
	fma.rn.f64 	%fd199, %fd32, %fd198, %fd198;
	@%p13 bra 	BB73_22;

	mov.f64 	%fd130, 0d3FF0000000000000;
	fma.rn.f64 	%fd199, %fd32, %fd31, %fd130;

BB73_22:
	and.b32  	%r45, %r10, 2;
	setp.eq.s32 	%p14, %r45, 0;
	@%p14 bra 	BB73_24;

	mov.f64 	%fd131, 0d0000000000000000;
	mov.f64 	%fd132, 0dBFF0000000000000;
	fma.rn.f64 	%fd199, %fd199, %fd132, %fd131;

BB73_24:
	setp.lt.s32 	%p15, %r4, 1072693248;
	@%p15 bra 	BB73_26;

	mul.f64 	%fd133, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd134, %fd133;
	cvt.rzi.s32.f64 	%r46, %fd134;
	add.s32 	%r47, %r46, -1;
	mov.f64 	%fd135, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd136, %fd134, %fd135, %fd15;
	mov.f64 	%fd137, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd138, %fd134, %fd137, %fd136;
	shl.b32 	%r48, %r4, 1;
	setp.lt.u32 	%p16, %r48, 2142496327;
	selp.f64 	%fd139, %fd15, %fd138, %p16;
	selp.b32 	%r49, 0, %r47, %p16;
	mov.u32 	%r50, 0;
	mov.f64 	%fd140, 0d3E5AFD81DA6C3BAF;
	mov.f64 	%fd141, 0d3E21F07FCCF58BAD;
	fma.rn.f64 	%fd142, %fd141, %fd139, %fd140;
	mov.f64 	%fd143, 0d3E927E55F60F80E6;
	fma.rn.f64 	%fd144, %fd142, %fd139, %fd143;
	mov.f64 	%fd145, 0d3EC71DDA8F02D666;
	fma.rn.f64 	%fd146, %fd144, %fd139, %fd145;
	mov.f64 	%fd147, 0d3EFA01A013B894E0;
	fma.rn.f64 	%fd148, %fd146, %fd139, %fd147;
	mov.f64 	%fd149, 0d3F2A01A01D3AF788;
	fma.rn.f64 	%fd150, %fd148, %fd139, %fd149;
	mov.f64 	%fd151, 0d3F56C16C16C3A1EC;
	fma.rn.f64 	%fd152, %fd150, %fd139, %fd151;
	mov.f64 	%fd153, 0d3F81111111109161;
	fma.rn.f64 	%fd154, %fd152, %fd139, %fd153;
	mov.f64 	%fd155, 0d3FA55555555554C1;
	fma.rn.f64 	%fd156, %fd154, %fd139, %fd155;
	mov.f64 	%fd157, 0d3FC555555555556F;
	fma.rn.f64 	%fd158, %fd156, %fd139, %fd157;
	mov.f64 	%fd159, 0d3FE0000000000000;
	fma.rn.f64 	%fd160, %fd158, %fd139, %fd159;
	mul.f64 	%fd161, %fd160, %fd139;
	fma.rn.f64 	%fd162, %fd161, %fd139, %fd139;
	setp.eq.s32 	%p17, %r49, 1024;
	selp.b32 	%r51, -1, 0, %p17;
	add.s32 	%r52, %r51, %r49;
	shl.b32 	%r53, %r52, 20;
	add.s32 	%r54, %r53, 1072693248;
	mov.b64 	%fd163, {%r50, %r54};
	mov.u32 	%r55, 1071644672;
	mov.b64 	%fd164, {%r50, %r55};
	sub.f64 	%fd165, %fd163, %fd164;
	fma.rn.f64 	%fd166, %fd162, %fd163, %fd165;
	add.f64 	%fd167, %fd166, %fd166;
	selp.f64 	%fd168, %fd167, %fd166, %p17;
	setp.eq.s32 	%p18, %r48, 0;
	selp.f64 	%fd169, %fd139, %fd168, %p18;
	mov.f64 	%fd170, 0d3FF0000000000000;
	mov.f64 	%fd171, 0d4000000000000000;
	fma.rn.f64 	%fd172, %fd171, %fd169, %fd170;
	div.rn.f64 	%fd173, %fd169, %fd172;
	add.f64 	%fd174, %fd169, %fd173;
	setp.ltu.f64 	%p19, %fd15, 0d408633CE8FB9F87E;
	selp.f64 	%fd200, %fd174, %fd1, %p19;
	bra.uni 	BB73_27;

BB73_26:
	mul.f64 	%fd175, %fd15, %fd15;
	mov.f64 	%fd176, 0d3E5AE54AA7F65A50;
	mov.f64 	%fd177, 0d3DE66F72AF4891C2;
	fma.rn.f64 	%fd178, %fd177, %fd175, %fd176;
	mov.f64 	%fd179, 0d3EC71DE4F068906D;
	fma.rn.f64 	%fd180, %fd178, %fd175, %fd179;
	mov.f64 	%fd181, 0d3F2A01A01848AC60;
	fma.rn.f64 	%fd182, %fd180, %fd175, %fd181;
	mov.f64 	%fd183, 0d3F81111111121E55;
	fma.rn.f64 	%fd184, %fd182, %fd175, %fd183;
	mov.f64 	%fd185, 0d3FC555555555547B;
	fma.rn.f64 	%fd186, %fd184, %fd175, %fd185;
	mul.f64 	%fd187, %fd186, %fd175;
	fma.rn.f64 	%fd200, %fd187, %fd15, %fd15;

BB73_27:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r56}, %fd42;
	}
	and.b32  	%r57, %r56, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r58}, %fd200;
	}
	or.b32  	%r59, %r58, %r57;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r60, %temp}, %fd200;
	}
	mov.b64 	%fd188, {%r60, %r59};
	mul.f64 	%fd189, %fd199, %fd188;
	st.param.f64	[func_retval0+0], %fd25;
	st.param.f64	[func_retval0+8], %fd189;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHSIN(
	.param .b32 _CHSIN_param_0,
	.param .b32 _CHSIN_param_1
)
{
	.local .align 4 .b8 	__local_depot74[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<32>;
	.reg .s32 	%r<188>;
	.reg .f32 	%f<132>;
	.reg .s64 	%rd<24>;


	mov.u64 	%SPL, __local_depot74;
	ld.param.f32 	%f44, [_CHSIN_param_0];
	ld.param.f32 	%f45, [_CHSIN_param_1];
	add.u64 	%rd9, %SPL, 0;
	mov.u32 	%r53, 2139095040;
	mov.b32 	%f1, %r53;
	abs.f32 	%f2, %f44;
	setp.neu.f32 	%p1, %f2, %f1;
	mov.f32 	%f126, %f44;
	@%p1 bra 	BB74_2;

	mov.f32 	%f46, 0f00000000;
	mul.rn.f32 	%f3, %f44, %f46;
	mov.f32 	%f126, %f3;

BB74_2:
	mov.f32 	%f4, %f126;
	mul.f32 	%f47, %f4, 0f3F22F983;
	cvt.rni.s32.f32 	%r180, %f47;
	cvt.rn.f32.s32 	%f48, %r180;
	neg.f32 	%f49, %f48;
	mov.f32 	%f50, 0f3FC90FDA;
	fma.rn.f32 	%f51, %f49, %f50, %f4;
	mov.f32 	%f52, 0f33A22168;
	fma.rn.f32 	%f53, %f49, %f52, %f51;
	mov.f32 	%f54, 0f27C234C5;
	fma.rn.f32 	%f120, %f49, %f54, %f53;
	abs.f32 	%f55, %f4;
	add.s64 	%rd2, %rd9, 24;
	setp.leu.f32 	%p2, %f55, 0f47CE4780;
	@%p2 bra 	BB74_10;

	mov.b32 	%r2, %f4;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r55, %r3, 255;
	add.s32 	%r56, %r55, -128;
	shl.b32 	%r57, %r2, 8;
	or.b32  	%r4, %r57, -2147483648;
	shr.u32 	%r5, %r56, 5;
	mov.u32 	%r174, 0;
	mov.u64 	%rd22, 0;

BB74_4:
	.pragma "nounroll";
	mov.u64 	%rd11, __cudart_i2opi_f;
	add.s64 	%rd12, %rd11, %rd22;
	ld.const.u32 	%r58, [%rd12];
	mul.hi.u32 	%r60, %r58, %r4;
	mad.lo.s32 	%r61, %r58, %r4, %r174;
	setp.lt.u32 	%p3, %r61, %r174;
	selp.u32 	%r62, 1, 0, %p3;
	add.s32 	%r174, %r62, %r60;
	add.s64 	%rd13, %rd9, %rd22;
	st.local.u32 	[%rd13], %r61;
	add.s64 	%rd22, %rd22, 4;
	setp.ne.s64 	%p4, %rd22, 24;
	@%p4 bra 	BB74_4;

	and.b32  	%r177, %r2, -2147483648;
	st.local.u32 	[%rd2], %r174;
	mov.u32 	%r65, 6;
	sub.s32 	%r66, %r65, %r5;
	mul.wide.s32 	%rd14, %r66, 4;
	add.s64 	%rd5, %rd9, %rd14;
	ld.local.u32 	%r175, [%rd5];
	ld.local.u32 	%r176, [%rd5+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB74_7;

	mov.u32 	%r69, 32;
	sub.s32 	%r70, %r69, %r11;
	shr.u32 	%r71, %r176, %r70;
	shl.b32 	%r72, %r175, %r11;
	add.s32 	%r175, %r71, %r72;
	ld.local.u32 	%r73, [%rd5+-8];
	shr.u32 	%r75, %r73, %r70;
	shl.b32 	%r76, %r176, %r11;
	add.s32 	%r176, %r75, %r76;

BB74_7:
	shr.u32 	%r77, %r176, 30;
	shl.b32 	%r78, %r175, 2;
	add.s32 	%r178, %r77, %r78;
	shl.b32 	%r17, %r176, 2;
	shr.u32 	%r79, %r178, 31;
	shr.u32 	%r80, %r175, 30;
	add.s32 	%r81, %r79, %r80;
	neg.s32 	%r82, %r81;
	setp.eq.s32 	%p6, %r177, 0;
	selp.b32 	%r180, %r81, %r82, %p6;
	setp.eq.s32 	%p7, %r79, 0;
	mov.u32 	%r179, %r17;
	@%p7 bra 	BB74_9;

	not.b32 	%r83, %r178;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r84, 1, 0, %p8;
	add.s32 	%r178, %r84, %r83;
	xor.b32  	%r177, %r177, -2147483648;
	mov.u32 	%r179, %r19;

BB74_9:
	clz.b32 	%r85, %r178;
	setp.eq.s32 	%p9, %r85, 0;
	shl.b32 	%r86, %r178, %r85;
	mov.u32 	%r87, 32;
	sub.s32 	%r88, %r87, %r85;
	shr.u32 	%r89, %r179, %r88;
	add.s32 	%r90, %r89, %r86;
	selp.b32 	%r91, %r178, %r90, %p9;
	mul.lo.s32 	%r92, %r91, -921707870;
	mov.u32 	%r93, -921707870;
	mul.hi.u32 	%r94, %r91, %r93;
	setp.gt.s32 	%p10, %r94, 0;
	shl.b32 	%r95, %r94, 1;
	shr.u32 	%r96, %r92, 31;
	add.s32 	%r97, %r96, %r95;
	selp.b32 	%r98, %r97, %r94, %p10;
	selp.b32 	%r99, -1, 0, %p10;
	mov.u32 	%r100, 126;
	sub.s32 	%r101, %r100, %r85;
	add.s32 	%r102, %r101, %r99;
	shl.b32 	%r103, %r102, 23;
	add.s32 	%r104, %r98, 1;
	shr.u32 	%r105, %r104, 7;
	add.s32 	%r106, %r105, 1;
	shr.u32 	%r107, %r106, 1;
	add.s32 	%r108, %r107, %r103;
	or.b32  	%r109, %r108, %r177;
	mov.b32 	%f120, %r109;

BB74_10:
	mul.rn.f32 	%f8, %f120, %f120;
	and.b32  	%r26, %r180, 1;
	setp.eq.s32 	%p11, %r26, 0;
	@%p11 bra 	BB74_12;

	mov.f32 	%f56, 0fBAB6061A;
	mov.f32 	%f57, 0f37CCF5CE;
	fma.rn.f32 	%f121, %f57, %f8, %f56;
	bra.uni 	BB74_13;

BB74_12:
	mov.f32 	%f58, 0f3C08839E;
	mov.f32 	%f59, 0fB94CA1F9;
	fma.rn.f32 	%f121, %f59, %f8, %f58;

BB74_13:
	@%p11 bra 	BB74_15;

	mov.f32 	%f60, 0f3D2AAAA5;
	fma.rn.f32 	%f61, %f121, %f8, %f60;
	mov.f32 	%f62, 0fBF000000;
	fma.rn.f32 	%f122, %f61, %f8, %f62;
	bra.uni 	BB74_16;

BB74_15:
	mov.f32 	%f63, 0fBE2AAAA3;
	fma.rn.f32 	%f64, %f121, %f8, %f63;
	mov.f32 	%f65, 0f00000000;
	fma.rn.f32 	%f122, %f64, %f8, %f65;

BB74_16:
	fma.rn.f32 	%f123, %f122, %f120, %f120;
	@%p11 bra 	BB74_18;

	mov.f32 	%f66, 0f3F800000;
	fma.rn.f32 	%f123, %f122, %f8, %f66;

BB74_18:
	and.b32  	%r110, %r180, 2;
	setp.eq.s32 	%p14, %r110, 0;
	@%p14 bra 	BB74_20;

	mov.f32 	%f67, 0f00000000;
	mov.f32 	%f68, 0fBF800000;
	fma.rn.f32 	%f123, %f123, %f68, %f67;

BB74_20:
	abs.f32 	%f20, %f45;
	mul.f32 	%f69, %f20, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f70, %f69;
	mov.f32 	%f71, 0fBF317200;
	fma.rn.f32 	%f72, %f70, %f71, %f20;
	mov.f32 	%f73, 0fB5BFBE8E;
	fma.rn.f32 	%f74, %f70, %f73, %f72;
	mul.f32 	%f75, %f74, 0f3FB8AA3B;
	ex2.approx.f32 	%f76, %f75;
	add.f32 	%f77, %f70, 0fC0000000;
	ex2.approx.f32 	%f78, %f77;
	mul.f32 	%f21, %f76, %f78;
	mov.f32 	%f79, 0f3E000000;
	div.approx.f32 	%f22, %f79, %f21;
	mov.f32 	%f80, 0f40000000;
	fma.rn.f32 	%f81, %f80, %f21, %f22;
	setp.ltu.f32 	%p15, %f20, 0f42B40000;
	selp.f32 	%f82, %f81, %f1, %p15;
	mul.f32 	%f23, %f123, %f82;
	mov.f32 	%f125, %f44;
	@%p1 bra 	BB74_22;

	mov.f32 	%f83, 0f00000000;
	mul.rn.f32 	%f125, %f44, %f83;

BB74_22:
	mul.f32 	%f84, %f125, 0f3F22F983;
	cvt.rni.s32.f32 	%r187, %f84;
	cvt.rn.f32.s32 	%f85, %r187;
	neg.f32 	%f86, %f85;
	fma.rn.f32 	%f88, %f86, %f50, %f125;
	fma.rn.f32 	%f90, %f86, %f52, %f88;
	fma.rn.f32 	%f127, %f86, %f54, %f90;
	abs.f32 	%f92, %f125;
	setp.leu.f32 	%p17, %f92, 0f47CE4780;
	@%p17 bra 	BB74_30;

	mov.b32 	%r28, %f125;
	shr.u32 	%r112, %r28, 23;
	and.b32  	%r113, %r112, 255;
	add.s32 	%r114, %r113, -128;
	shl.b32 	%r115, %r28, 8;
	or.b32  	%r29, %r115, -2147483648;
	shr.u32 	%r30, %r114, 5;
	mov.u32 	%r181, 0;
	mov.u64 	%rd23, 0;

BB74_24:
	.pragma "nounroll";
	mov.u64 	%rd16, __cudart_i2opi_f;
	add.s64 	%rd17, %rd16, %rd23;
	ld.const.u32 	%r116, [%rd17];
	mul.hi.u32 	%r118, %r116, %r29;
	mad.lo.s32 	%r119, %r116, %r29, %r181;
	setp.lt.u32 	%p18, %r119, %r181;
	selp.u32 	%r120, 1, 0, %p18;
	add.s32 	%r181, %r120, %r118;
	add.s64 	%rd18, %rd9, %rd23;
	st.local.u32 	[%rd18], %r119;
	add.s64 	%rd23, %rd23, 4;
	setp.ne.s64 	%p19, %rd23, 24;
	@%p19 bra 	BB74_24;

	and.b32  	%r184, %r28, -2147483648;
	st.local.u32 	[%rd9+24], %r181;
	and.b32  	%r34, %r112, 31;
	mov.u32 	%r124, 6;
	sub.s32 	%r125, %r124, %r30;
	mul.wide.s32 	%rd21, %r125, 4;
	add.s64 	%rd8, %rd9, %rd21;
	ld.local.u32 	%r182, [%rd8];
	ld.local.u32 	%r183, [%rd8+-4];
	setp.eq.s32 	%p20, %r34, 0;
	@%p20 bra 	BB74_27;

	mov.u32 	%r128, 32;
	sub.s32 	%r129, %r128, %r34;
	shr.u32 	%r130, %r183, %r129;
	shl.b32 	%r131, %r182, %r34;
	add.s32 	%r182, %r130, %r131;
	ld.local.u32 	%r132, [%rd8+-8];
	shr.u32 	%r134, %r132, %r129;
	shl.b32 	%r135, %r183, %r34;
	add.s32 	%r183, %r134, %r135;

BB74_27:
	shr.u32 	%r136, %r183, 30;
	shl.b32 	%r137, %r182, 2;
	add.s32 	%r185, %r136, %r137;
	shl.b32 	%r42, %r183, 2;
	shr.u32 	%r138, %r185, 31;
	shr.u32 	%r139, %r182, 30;
	add.s32 	%r140, %r138, %r139;
	neg.s32 	%r141, %r140;
	setp.eq.s32 	%p21, %r184, 0;
	selp.b32 	%r187, %r140, %r141, %p21;
	setp.eq.s32 	%p22, %r138, 0;
	mov.u32 	%r186, %r42;
	@%p22 bra 	BB74_29;

	not.b32 	%r142, %r185;
	neg.s32 	%r44, %r42;
	setp.eq.s32 	%p23, %r42, 0;
	selp.u32 	%r143, 1, 0, %p23;
	add.s32 	%r185, %r143, %r142;
	xor.b32  	%r184, %r184, -2147483648;
	mov.u32 	%r186, %r44;

BB74_29:
	clz.b32 	%r144, %r185;
	setp.eq.s32 	%p24, %r144, 0;
	shl.b32 	%r145, %r185, %r144;
	mov.u32 	%r146, 32;
	sub.s32 	%r147, %r146, %r144;
	shr.u32 	%r148, %r186, %r147;
	add.s32 	%r149, %r148, %r145;
	selp.b32 	%r150, %r185, %r149, %p24;
	mul.lo.s32 	%r151, %r150, -921707870;
	mov.u32 	%r152, -921707870;
	mul.hi.u32 	%r153, %r150, %r152;
	setp.gt.s32 	%p25, %r153, 0;
	shl.b32 	%r154, %r153, 1;
	shr.u32 	%r155, %r151, 31;
	add.s32 	%r156, %r155, %r154;
	selp.b32 	%r157, %r156, %r153, %p25;
	selp.b32 	%r158, -1, 0, %p25;
	mov.u32 	%r159, 126;
	sub.s32 	%r160, %r159, %r144;
	add.s32 	%r161, %r160, %r158;
	shl.b32 	%r162, %r161, 23;
	add.s32 	%r163, %r157, 1;
	shr.u32 	%r164, %r163, 7;
	add.s32 	%r165, %r164, 1;
	shr.u32 	%r166, %r165, 1;
	add.s32 	%r167, %r166, %r162;
	or.b32  	%r168, %r167, %r184;
	mov.b32 	%f127, %r168;

BB74_30:
	mul.rn.f32 	%f29, %f127, %f127;
	add.s32 	%r51, %r187, 1;
	and.b32  	%r52, %r51, 1;
	setp.eq.s32 	%p26, %r52, 0;
	@%p26 bra 	BB74_32;

	mov.f32 	%f93, 0fBAB6061A;
	mov.f32 	%f94, 0f37CCF5CE;
	fma.rn.f32 	%f128, %f94, %f29, %f93;
	bra.uni 	BB74_33;

BB74_32:
	mov.f32 	%f95, 0f3C08839E;
	mov.f32 	%f96, 0fB94CA1F9;
	fma.rn.f32 	%f128, %f96, %f29, %f95;

BB74_33:
	@%p26 bra 	BB74_35;

	mov.f32 	%f97, 0f3D2AAAA5;
	fma.rn.f32 	%f98, %f128, %f29, %f97;
	mov.f32 	%f99, 0fBF000000;
	fma.rn.f32 	%f129, %f98, %f29, %f99;
	bra.uni 	BB74_36;

BB74_35:
	mov.f32 	%f100, 0fBE2AAAA3;
	fma.rn.f32 	%f101, %f128, %f29, %f100;
	mov.f32 	%f102, 0f00000000;
	fma.rn.f32 	%f129, %f101, %f29, %f102;

BB74_36:
	fma.rn.f32 	%f130, %f129, %f127, %f127;
	@%p26 bra 	BB74_38;

	mov.f32 	%f103, 0f3F800000;
	fma.rn.f32 	%f130, %f129, %f29, %f103;

BB74_38:
	and.b32  	%r169, %r51, 2;
	setp.eq.s32 	%p29, %r169, 0;
	@%p29 bra 	BB74_40;

	mov.f32 	%f104, 0f00000000;
	mov.f32 	%f105, 0fBF800000;
	fma.rn.f32 	%f130, %f130, %f105, %f104;

BB74_40:
	setp.ltu.f32 	%p30, %f20, 0f3F800000;
	@%p30 bra 	BB74_42;

	neg.f32 	%f106, %f22;
	fma.rn.f32 	%f108, %f80, %f21, %f106;
	selp.f32 	%f109, %f108, %f1, %p15;
	mov.b32 	%r170, %f109;
	mov.b32 	%r171, %f45;
	and.b32  	%r172, %r171, -2147483648;
	or.b32  	%r173, %r172, %r170;
	mov.b32 	%f131, %r173;
	bra.uni 	BB74_43;

BB74_42:
	mul.f32 	%f110, %f45, %f45;
	mov.f32 	%f111, 0f394FFF49;
	mov.f32 	%f112, 0f363D0ADA;
	fma.rn.f32 	%f113, %f112, %f110, %f111;
	mov.f32 	%f114, 0f3C08889A;
	fma.rn.f32 	%f115, %f113, %f110, %f114;
	mov.f32 	%f116, 0f3E2AAAAB;
	fma.rn.f32 	%f117, %f115, %f110, %f116;
	mul.f32 	%f118, %f117, %f110;
	fma.rn.f32 	%f131, %f118, %f45, %f45;

BB74_43:
	mul.f32 	%f119, %f130, %f131;
	st.param.f32	[func_retval0+0], %f23;
	st.param.f32	[func_retval0+4], %f119;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _CCOS(
	.param .b64 _CCOS_param_0,
	.param .b64 _CCOS_param_1
)
{
	.local .align 4 .b8 	__local_depot75[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<20>;
	.reg .s32 	%r<63>;
	.reg .f32 	%f<6>;
	.reg .s64 	%rd<14>;
	.reg .f64 	%fd<202>;


	mov.u64 	%SPL, __local_depot75;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd42, [_CCOS_param_0];
	ld.param.f64 	%fd43, [_CCOS_param_1];
	add.u64 	%rd3, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd3;
	add.u64 	%rd4, %SP, 4;
	cvta.to.local.u64 	%rd2, %rd4;
	mov.u64 	%rd5, 9218868437227405312;
	mov.b64 	%fd1, %rd5;
	abs.f64 	%fd2, %fd42;
	setp.neu.f64 	%p1, %fd2, %fd1;
	mov.f64 	%fd198, %fd42;
	@%p1 bra 	BB75_2;

	mov.f64 	%fd44, 0d0000000000000000;
	mul.rn.f64 	%fd3, %fd42, %fd44;
	mov.f64 	%fd198, %fd3;

BB75_2:
	mov.f64 	%fd4, %fd198;
	mul.f64 	%fd45, %fd4, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r61, %fd45;
	st.local.u32 	[%rd2], %r61;
	cvt.rn.f64.s32 	%fd46, %r61;
	neg.f64 	%fd47, %fd46;
	mov.f64 	%fd48, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd4;
	mov.f64 	%fd50, 0d3C91A62633145C00;
	fma.rn.f64 	%fd51, %fd47, %fd50, %fd49;
	mov.f64 	%fd52, 0d397B839A252049C0;
	fma.rn.f64 	%fd191, %fd47, %fd52, %fd51;
	abs.f64 	%fd53, %fd4;
	setp.leu.f64 	%p2, %fd53, 0d41E0000000000000;
	@%p2 bra 	BB75_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd191, [retval0+0];
	}
	
	ld.local.u32 	%r61, [%rd2];

BB75_4:
	add.s32 	%r4, %r61, 1;
	shl.b32 	%r13, %r4, 3;
	and.b32  	%r14, %r13, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r4, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	not.pred 	%p4, %p3;
	selp.f64 	 %fd54, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p4;
	mul.wide.u32 	%rd7, %r14, 8;
	mov.u64 	%rd8, __cudart_sin_cos_coeffs;
	add.s64 	%rd9, %rd7, %rd8;
	ld.const.f64 	%fd55, [%rd9+8];
	mul.rn.f64 	%fd8, %fd191, %fd191;
	fma.rn.f64 	%fd56, %fd54, %fd8, %fd55;
	ld.const.f64 	%fd57, [%rd9+16];
	fma.rn.f64 	%fd58, %fd56, %fd8, %fd57;
	ld.const.f64 	%fd59, [%rd9+24];
	fma.rn.f64 	%fd60, %fd58, %fd8, %fd59;
	ld.const.f64 	%fd61, [%rd9+32];
	fma.rn.f64 	%fd62, %fd60, %fd8, %fd61;
	ld.const.f64 	%fd63, [%rd9+40];
	fma.rn.f64 	%fd64, %fd62, %fd8, %fd63;
	ld.const.f64 	%fd65, [%rd9+48];
	fma.rn.f64 	%fd9, %fd64, %fd8, %fd65;
	fma.rn.f64 	%fd192, %fd9, %fd191, %fd191;
	@%p4 bra 	BB75_6;

	mov.f64 	%fd66, 0d3FF0000000000000;
	fma.rn.f64 	%fd192, %fd9, %fd8, %fd66;

BB75_6:
	and.b32  	%r21, %r4, 2;
	setp.eq.s32 	%p5, %r21, 0;
	@%p5 bra 	BB75_8;

	mov.f64 	%fd67, 0d0000000000000000;
	mov.f64 	%fd68, 0dBFF0000000000000;
	fma.rn.f64 	%fd192, %fd192, %fd68, %fd67;

BB75_8:
	abs.f64 	%fd15, %fd43;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd15;
	}
	setp.lt.u32 	%p6, %r5, 1082536911;
	@%p6 bra 	BB75_12;

	setp.leu.f64 	%p7, %fd15, 0d0000000000000000;
	mov.f64 	%fd193, %fd43;
	@%p7 bra 	BB75_11;

	mov.u32 	%r22, 2139095040;
	mov.b32 	%f1, %r22;
	cvt.f64.f32 	%fd16, %f1;
	mov.f64 	%fd193, %fd16;

BB75_11:
	mov.f64 	%fd17, %fd193;
	add.f64 	%fd195, %fd17, %fd17;
	bra.uni 	BB75_16;

BB75_12:
	mul.f64 	%fd69, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd70, %fd69;
	cvt.rzi.s32.f64 	%r23, %fd70;
	mov.f64 	%fd71, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd72, %fd70, %fd71, %fd15;
	mov.f64 	%fd73, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd74, %fd70, %fd73, %fd72;
	mov.f64 	%fd75, 0d3E928A27E30F5561;
	mov.f64 	%fd76, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd77, %fd76, %fd74, %fd75;
	mov.f64 	%fd78, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd79, %fd77, %fd74, %fd78;
	mov.f64 	%fd80, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd81, %fd79, %fd74, %fd80;
	mov.f64 	%fd82, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd83, %fd81, %fd74, %fd82;
	mov.f64 	%fd84, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd85, %fd83, %fd74, %fd84;
	mov.f64 	%fd86, 0d3F8111111111A24E;
	fma.rn.f64 	%fd87, %fd85, %fd74, %fd86;
	mov.f64 	%fd88, 0d3FA555555555211D;
	fma.rn.f64 	%fd89, %fd87, %fd74, %fd88;
	mov.f64 	%fd90, 0d3FC5555555555530;
	fma.rn.f64 	%fd91, %fd89, %fd74, %fd90;
	mov.f64 	%fd92, 0d3FE0000000000005;
	fma.rn.f64 	%fd93, %fd91, %fd74, %fd92;
	mov.f64 	%fd94, 0d3FF0000000000000;
	fma.rn.f64 	%fd95, %fd93, %fd74, %fd94;
	fma.rn.f64 	%fd19, %fd95, %fd74, %fd94;
	add.s32 	%r6, %r23, -2;
	shl.b32 	%r24, %r6, 20;
	add.s32 	%r7, %r24, 1072693248;
	abs.s32 	%r25, %r6;
	setp.lt.s32 	%p8, %r25, 1021;
	@%p8 bra 	BB75_14;

	add.s32 	%r27, %r24, 1130364928;
	setp.lt.s32 	%p9, %r6, 0;
	mov.u32 	%r28, 0;
	selp.b32 	%r29, %r27, %r7, %p9;
	shr.s32 	%r30, %r6, 31;
	add.s32 	%r31, %r30, 1073741824;
	and.b32  	%r32, %r31, -57671680;
	add.s32 	%r33, %r29, -1048576;
	mov.b64 	%fd96, {%r28, %r32};
	mul.f64 	%fd97, %fd19, %fd96;
	mov.b64 	%fd98, {%r28, %r33};
	mul.f64 	%fd194, %fd97, %fd98;
	bra.uni 	BB75_15;

BB75_14:
	mov.u32 	%r34, 0;
	mov.b64 	%fd99, {%r34, %r7};
	mul.f64 	%fd194, %fd99, %fd19;

BB75_15:
	
	cvt.rn.f32.f64     %f2,%fd194;
	
	
	rcp.approx.f32.ftz %f3,%f2;
	
	
	cvt.f64.f32        %fd101,%f3;
	
	neg.f64 	%fd102, %fd194;
	fma.rn.f64 	%fd104, %fd102, %fd101, %fd94;
	fma.rn.f64 	%fd105, %fd104, %fd104, %fd104;
	fma.rn.f64 	%fd106, %fd105, %fd101, %fd101;
	mul.f64 	%fd107, %fd106, 0d3FC0000000000000;
	mov.f64 	%fd108, 0d4000000000000000;
	fma.rn.f64 	%fd195, %fd108, %fd194, %fd107;

BB75_16:
	mul.f64 	%fd25, %fd192, %fd195;
	mov.f64 	%fd197, %fd42;
	@%p1 bra 	BB75_18;

	mov.f64 	%fd109, 0d0000000000000000;
	mul.rn.f64 	%fd197, %fd42, %fd109;

BB75_18:
	mul.f64 	%fd110, %fd197, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r62, %fd110;
	st.local.u32 	[%rd1], %r62;
	cvt.rn.f64.s32 	%fd111, %r62;
	neg.f64 	%fd112, %fd111;
	fma.rn.f64 	%fd114, %fd112, %fd48, %fd197;
	fma.rn.f64 	%fd116, %fd112, %fd50, %fd114;
	fma.rn.f64 	%fd199, %fd112, %fd52, %fd116;
	abs.f64 	%fd118, %fd197;
	setp.leu.f64 	%p11, %fd118, 0d41E0000000000000;
	@%p11 bra 	BB75_20;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd197;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd199, [retval0+0];
	}
	
	ld.local.u32 	%r62, [%rd1];

BB75_20:
	shl.b32 	%r37, %r62, 3;
	and.b32  	%r38, %r37, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r62, 1;
	setp.b32.eq 	 %p12, temp, 1;
	}
	not.pred 	%p13, %p12;
	selp.f64 	 %fd119, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p13;
	mul.wide.u32 	%rd11, %r38, 8;
	add.s64 	%rd13, %rd11, %rd8;
	ld.const.f64 	%fd120, [%rd13+8];
	mul.rn.f64 	%fd31, %fd199, %fd199;
	fma.rn.f64 	%fd121, %fd119, %fd31, %fd120;
	ld.const.f64 	%fd122, [%rd13+16];
	fma.rn.f64 	%fd123, %fd121, %fd31, %fd122;
	ld.const.f64 	%fd124, [%rd13+24];
	fma.rn.f64 	%fd125, %fd123, %fd31, %fd124;
	ld.const.f64 	%fd126, [%rd13+32];
	fma.rn.f64 	%fd127, %fd125, %fd31, %fd126;
	ld.const.f64 	%fd128, [%rd13+40];
	fma.rn.f64 	%fd129, %fd127, %fd31, %fd128;
	ld.const.f64 	%fd130, [%rd13+48];
	fma.rn.f64 	%fd32, %fd129, %fd31, %fd130;
	fma.rn.f64 	%fd200, %fd32, %fd199, %fd199;
	@%p13 bra 	BB75_22;

	mov.f64 	%fd131, 0d3FF0000000000000;
	fma.rn.f64 	%fd200, %fd32, %fd31, %fd131;

BB75_22:
	and.b32  	%r45, %r62, 2;
	setp.eq.s32 	%p14, %r45, 0;
	@%p14 bra 	BB75_24;

	mov.f64 	%fd132, 0d0000000000000000;
	mov.f64 	%fd133, 0dBFF0000000000000;
	fma.rn.f64 	%fd200, %fd200, %fd133, %fd132;

BB75_24:
	neg.f64 	%fd38, %fd200;
	setp.lt.s32 	%p15, %r5, 1072693248;
	@%p15 bra 	BB75_26;

	mul.f64 	%fd134, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd135, %fd134;
	cvt.rzi.s32.f64 	%r46, %fd135;
	add.s32 	%r47, %r46, -1;
	mov.f64 	%fd136, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd137, %fd135, %fd136, %fd15;
	mov.f64 	%fd138, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd139, %fd135, %fd138, %fd137;
	shl.b32 	%r48, %r5, 1;
	setp.lt.u32 	%p16, %r48, 2142496327;
	selp.f64 	%fd140, %fd15, %fd139, %p16;
	selp.b32 	%r49, 0, %r47, %p16;
	mov.u32 	%r50, 0;
	mov.f64 	%fd141, 0d3E5AFD81DA6C3BAF;
	mov.f64 	%fd142, 0d3E21F07FCCF58BAD;
	fma.rn.f64 	%fd143, %fd142, %fd140, %fd141;
	mov.f64 	%fd144, 0d3E927E55F60F80E6;
	fma.rn.f64 	%fd145, %fd143, %fd140, %fd144;
	mov.f64 	%fd146, 0d3EC71DDA8F02D666;
	fma.rn.f64 	%fd147, %fd145, %fd140, %fd146;
	mov.f64 	%fd148, 0d3EFA01A013B894E0;
	fma.rn.f64 	%fd149, %fd147, %fd140, %fd148;
	mov.f64 	%fd150, 0d3F2A01A01D3AF788;
	fma.rn.f64 	%fd151, %fd149, %fd140, %fd150;
	mov.f64 	%fd152, 0d3F56C16C16C3A1EC;
	fma.rn.f64 	%fd153, %fd151, %fd140, %fd152;
	mov.f64 	%fd154, 0d3F81111111109161;
	fma.rn.f64 	%fd155, %fd153, %fd140, %fd154;
	mov.f64 	%fd156, 0d3FA55555555554C1;
	fma.rn.f64 	%fd157, %fd155, %fd140, %fd156;
	mov.f64 	%fd158, 0d3FC555555555556F;
	fma.rn.f64 	%fd159, %fd157, %fd140, %fd158;
	mov.f64 	%fd160, 0d3FE0000000000000;
	fma.rn.f64 	%fd161, %fd159, %fd140, %fd160;
	mul.f64 	%fd162, %fd161, %fd140;
	fma.rn.f64 	%fd163, %fd162, %fd140, %fd140;
	setp.eq.s32 	%p17, %r49, 1024;
	selp.b32 	%r51, -1, 0, %p17;
	add.s32 	%r52, %r51, %r49;
	shl.b32 	%r53, %r52, 20;
	add.s32 	%r54, %r53, 1072693248;
	mov.b64 	%fd164, {%r50, %r54};
	mov.u32 	%r55, 1071644672;
	mov.b64 	%fd165, {%r50, %r55};
	sub.f64 	%fd166, %fd164, %fd165;
	fma.rn.f64 	%fd167, %fd163, %fd164, %fd166;
	add.f64 	%fd168, %fd167, %fd167;
	selp.f64 	%fd169, %fd168, %fd167, %p17;
	setp.eq.s32 	%p18, %r48, 0;
	selp.f64 	%fd170, %fd140, %fd169, %p18;
	mov.f64 	%fd171, 0d3FF0000000000000;
	mov.f64 	%fd172, 0d4000000000000000;
	fma.rn.f64 	%fd173, %fd172, %fd170, %fd171;
	div.rn.f64 	%fd174, %fd170, %fd173;
	add.f64 	%fd175, %fd170, %fd174;
	setp.ltu.f64 	%p19, %fd15, 0d408633CE8FB9F87E;
	selp.f64 	%fd201, %fd175, %fd1, %p19;
	bra.uni 	BB75_27;

BB75_26:
	mul.f64 	%fd176, %fd15, %fd15;
	mov.f64 	%fd177, 0d3E5AE54AA7F65A50;
	mov.f64 	%fd178, 0d3DE66F72AF4891C2;
	fma.rn.f64 	%fd179, %fd178, %fd176, %fd177;
	mov.f64 	%fd180, 0d3EC71DE4F068906D;
	fma.rn.f64 	%fd181, %fd179, %fd176, %fd180;
	mov.f64 	%fd182, 0d3F2A01A01848AC60;
	fma.rn.f64 	%fd183, %fd181, %fd176, %fd182;
	mov.f64 	%fd184, 0d3F81111111121E55;
	fma.rn.f64 	%fd185, %fd183, %fd176, %fd184;
	mov.f64 	%fd186, 0d3FC555555555547B;
	fma.rn.f64 	%fd187, %fd185, %fd176, %fd186;
	mul.f64 	%fd188, %fd187, %fd176;
	fma.rn.f64 	%fd201, %fd188, %fd15, %fd15;

BB75_27:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r56}, %fd43;
	}
	and.b32  	%r57, %r56, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r58}, %fd201;
	}
	or.b32  	%r59, %r58, %r57;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r60, %temp}, %fd201;
	}
	mov.b64 	%fd189, {%r60, %r59};
	mul.f64 	%fd190, %fd38, %fd189;
	st.param.f64	[func_retval0+0], %fd25;
	st.param.f64	[func_retval0+8], %fd190;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHCOS(
	.param .b32 _CHCOS_param_0,
	.param .b32 _CHCOS_param_1
)
{
	.local .align 4 .b8 	__local_depot76[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<32>;
	.reg .s32 	%r<188>;
	.reg .f32 	%f<132>;
	.reg .s64 	%rd<24>;
	.reg .f64 	%fd<5>;


	mov.u64 	%SPL, __local_depot76;
	ld.param.f32 	%f44, [_CHCOS_param_0];
	ld.param.f32 	%f45, [_CHCOS_param_1];
	add.u64 	%rd9, %SPL, 0;
	mov.u32 	%r53, 2139095040;
	mov.b32 	%f1, %r53;
	abs.f32 	%f2, %f44;
	setp.neu.f32 	%p1, %f2, %f1;
	mov.f32 	%f126, %f44;
	@%p1 bra 	BB76_2;

	mov.f32 	%f46, 0f00000000;
	mul.rn.f32 	%f3, %f44, %f46;
	mov.f32 	%f126, %f3;

BB76_2:
	mov.f32 	%f4, %f126;
	mul.f32 	%f47, %f4, 0f3F22F983;
	cvt.rni.s32.f32 	%r180, %f47;
	cvt.rn.f32.s32 	%f48, %r180;
	neg.f32 	%f49, %f48;
	mov.f32 	%f50, 0f3FC90FDA;
	fma.rn.f32 	%f51, %f49, %f50, %f4;
	mov.f32 	%f52, 0f33A22168;
	fma.rn.f32 	%f53, %f49, %f52, %f51;
	mov.f32 	%f54, 0f27C234C5;
	fma.rn.f32 	%f120, %f49, %f54, %f53;
	abs.f32 	%f55, %f4;
	add.s64 	%rd2, %rd9, 24;
	setp.leu.f32 	%p2, %f55, 0f47CE4780;
	@%p2 bra 	BB76_10;

	mov.b32 	%r2, %f4;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r55, %r3, 255;
	add.s32 	%r56, %r55, -128;
	shl.b32 	%r57, %r2, 8;
	or.b32  	%r4, %r57, -2147483648;
	shr.u32 	%r5, %r56, 5;
	mov.u32 	%r174, 0;
	mov.u64 	%rd22, 0;

BB76_4:
	.pragma "nounroll";
	mov.u64 	%rd11, __cudart_i2opi_f;
	add.s64 	%rd12, %rd11, %rd22;
	ld.const.u32 	%r58, [%rd12];
	mul.hi.u32 	%r60, %r58, %r4;
	mad.lo.s32 	%r61, %r58, %r4, %r174;
	setp.lt.u32 	%p3, %r61, %r174;
	selp.u32 	%r62, 1, 0, %p3;
	add.s32 	%r174, %r62, %r60;
	add.s64 	%rd13, %rd9, %rd22;
	st.local.u32 	[%rd13], %r61;
	add.s64 	%rd22, %rd22, 4;
	setp.ne.s64 	%p4, %rd22, 24;
	@%p4 bra 	BB76_4;

	and.b32  	%r177, %r2, -2147483648;
	st.local.u32 	[%rd2], %r174;
	mov.u32 	%r65, 6;
	sub.s32 	%r66, %r65, %r5;
	mul.wide.s32 	%rd14, %r66, 4;
	add.s64 	%rd5, %rd9, %rd14;
	ld.local.u32 	%r175, [%rd5];
	ld.local.u32 	%r176, [%rd5+-4];
	and.b32  	%r11, %r3, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB76_7;

	mov.u32 	%r69, 32;
	sub.s32 	%r70, %r69, %r11;
	shr.u32 	%r71, %r176, %r70;
	shl.b32 	%r72, %r175, %r11;
	add.s32 	%r175, %r71, %r72;
	ld.local.u32 	%r73, [%rd5+-8];
	shr.u32 	%r75, %r73, %r70;
	shl.b32 	%r76, %r176, %r11;
	add.s32 	%r176, %r75, %r76;

BB76_7:
	shr.u32 	%r77, %r176, 30;
	shl.b32 	%r78, %r175, 2;
	add.s32 	%r178, %r77, %r78;
	shl.b32 	%r17, %r176, 2;
	shr.u32 	%r79, %r178, 31;
	shr.u32 	%r80, %r175, 30;
	add.s32 	%r81, %r79, %r80;
	neg.s32 	%r82, %r81;
	setp.eq.s32 	%p6, %r177, 0;
	selp.b32 	%r180, %r81, %r82, %p6;
	setp.eq.s32 	%p7, %r79, 0;
	mov.u32 	%r179, %r17;
	@%p7 bra 	BB76_9;

	not.b32 	%r83, %r178;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r84, 1, 0, %p8;
	add.s32 	%r178, %r84, %r83;
	xor.b32  	%r177, %r177, -2147483648;
	mov.u32 	%r179, %r19;

BB76_9:
	clz.b32 	%r85, %r178;
	setp.eq.s32 	%p9, %r85, 0;
	shl.b32 	%r86, %r178, %r85;
	mov.u32 	%r87, 32;
	sub.s32 	%r88, %r87, %r85;
	shr.u32 	%r89, %r179, %r88;
	add.s32 	%r90, %r89, %r86;
	selp.b32 	%r91, %r178, %r90, %p9;
	mul.lo.s32 	%r92, %r91, -921707870;
	mov.u32 	%r93, -921707870;
	mul.hi.u32 	%r94, %r91, %r93;
	setp.gt.s32 	%p10, %r94, 0;
	shl.b32 	%r95, %r94, 1;
	shr.u32 	%r96, %r92, 31;
	add.s32 	%r97, %r96, %r95;
	selp.b32 	%r98, %r97, %r94, %p10;
	selp.b32 	%r99, -1, 0, %p10;
	mov.u32 	%r100, 126;
	sub.s32 	%r101, %r100, %r85;
	add.s32 	%r102, %r101, %r99;
	shl.b32 	%r103, %r102, 23;
	add.s32 	%r104, %r98, 1;
	shr.u32 	%r105, %r104, 7;
	add.s32 	%r106, %r105, 1;
	shr.u32 	%r107, %r106, 1;
	add.s32 	%r108, %r107, %r103;
	or.b32  	%r109, %r108, %r177;
	mov.b32 	%f120, %r109;

BB76_10:
	mul.rn.f32 	%f8, %f120, %f120;
	add.s32 	%r26, %r180, 1;
	and.b32  	%r27, %r26, 1;
	setp.eq.s32 	%p11, %r27, 0;
	@%p11 bra 	BB76_12;

	mov.f32 	%f56, 0fBAB6061A;
	mov.f32 	%f57, 0f37CCF5CE;
	fma.rn.f32 	%f121, %f57, %f8, %f56;
	bra.uni 	BB76_13;

BB76_12:
	mov.f32 	%f58, 0f3C08839E;
	mov.f32 	%f59, 0fB94CA1F9;
	fma.rn.f32 	%f121, %f59, %f8, %f58;

BB76_13:
	@%p11 bra 	BB76_15;

	mov.f32 	%f60, 0f3D2AAAA5;
	fma.rn.f32 	%f61, %f121, %f8, %f60;
	mov.f32 	%f62, 0fBF000000;
	fma.rn.f32 	%f122, %f61, %f8, %f62;
	bra.uni 	BB76_16;

BB76_15:
	mov.f32 	%f63, 0fBE2AAAA3;
	fma.rn.f32 	%f64, %f121, %f8, %f63;
	mov.f32 	%f65, 0f00000000;
	fma.rn.f32 	%f122, %f64, %f8, %f65;

BB76_16:
	fma.rn.f32 	%f123, %f122, %f120, %f120;
	@%p11 bra 	BB76_18;

	mov.f32 	%f66, 0f3F800000;
	fma.rn.f32 	%f123, %f122, %f8, %f66;

BB76_18:
	and.b32  	%r110, %r26, 2;
	setp.eq.s32 	%p14, %r110, 0;
	@%p14 bra 	BB76_20;

	mov.f32 	%f67, 0f00000000;
	mov.f32 	%f68, 0fBF800000;
	fma.rn.f32 	%f123, %f123, %f68, %f67;

BB76_20:
	abs.f32 	%f20, %f45;
	mul.f32 	%f69, %f20, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f70, %f69;
	mov.f32 	%f71, 0fBF317200;
	fma.rn.f32 	%f72, %f70, %f71, %f20;
	mov.f32 	%f73, 0fB5BFBE8E;
	fma.rn.f32 	%f74, %f70, %f73, %f72;
	mul.f32 	%f75, %f74, 0f3FB8AA3B;
	ex2.approx.f32 	%f76, %f75;
	add.f32 	%f77, %f70, 0fC0000000;
	ex2.approx.f32 	%f78, %f77;
	mul.f32 	%f21, %f76, %f78;
	mov.f32 	%f79, 0f3E000000;
	div.approx.f32 	%f22, %f79, %f21;
	mov.f32 	%f80, 0f40000000;
	fma.rn.f32 	%f81, %f80, %f21, %f22;
	setp.ltu.f32 	%p15, %f20, 0f42B40000;
	selp.f32 	%f82, %f81, %f1, %p15;
	mul.f32 	%f23, %f123, %f82;
	mov.f32 	%f125, %f44;
	@%p1 bra 	BB76_22;

	mov.f32 	%f83, 0f00000000;
	mul.rn.f32 	%f125, %f44, %f83;

BB76_22:
	mul.f32 	%f84, %f125, 0f3F22F983;
	cvt.rni.s32.f32 	%r187, %f84;
	cvt.rn.f32.s32 	%f85, %r187;
	neg.f32 	%f86, %f85;
	fma.rn.f32 	%f88, %f86, %f50, %f125;
	fma.rn.f32 	%f90, %f86, %f52, %f88;
	fma.rn.f32 	%f127, %f86, %f54, %f90;
	abs.f32 	%f92, %f125;
	setp.leu.f32 	%p17, %f92, 0f47CE4780;
	@%p17 bra 	BB76_30;

	mov.b32 	%r29, %f125;
	shr.u32 	%r112, %r29, 23;
	and.b32  	%r113, %r112, 255;
	add.s32 	%r114, %r113, -128;
	shl.b32 	%r115, %r29, 8;
	or.b32  	%r30, %r115, -2147483648;
	shr.u32 	%r31, %r114, 5;
	mov.u32 	%r181, 0;
	mov.u64 	%rd23, 0;

BB76_24:
	.pragma "nounroll";
	mov.u64 	%rd16, __cudart_i2opi_f;
	add.s64 	%rd17, %rd16, %rd23;
	ld.const.u32 	%r116, [%rd17];
	mul.hi.u32 	%r118, %r116, %r30;
	mad.lo.s32 	%r119, %r116, %r30, %r181;
	setp.lt.u32 	%p18, %r119, %r181;
	selp.u32 	%r120, 1, 0, %p18;
	add.s32 	%r181, %r120, %r118;
	add.s64 	%rd18, %rd9, %rd23;
	st.local.u32 	[%rd18], %r119;
	add.s64 	%rd23, %rd23, 4;
	setp.ne.s64 	%p19, %rd23, 24;
	@%p19 bra 	BB76_24;

	and.b32  	%r184, %r29, -2147483648;
	st.local.u32 	[%rd9+24], %r181;
	and.b32  	%r35, %r112, 31;
	mov.u32 	%r124, 6;
	sub.s32 	%r125, %r124, %r31;
	mul.wide.s32 	%rd21, %r125, 4;
	add.s64 	%rd8, %rd9, %rd21;
	ld.local.u32 	%r182, [%rd8];
	ld.local.u32 	%r183, [%rd8+-4];
	setp.eq.s32 	%p20, %r35, 0;
	@%p20 bra 	BB76_27;

	mov.u32 	%r128, 32;
	sub.s32 	%r129, %r128, %r35;
	shr.u32 	%r130, %r183, %r129;
	shl.b32 	%r131, %r182, %r35;
	add.s32 	%r182, %r130, %r131;
	ld.local.u32 	%r132, [%rd8+-8];
	shr.u32 	%r134, %r132, %r129;
	shl.b32 	%r135, %r183, %r35;
	add.s32 	%r183, %r134, %r135;

BB76_27:
	shr.u32 	%r136, %r183, 30;
	shl.b32 	%r137, %r182, 2;
	add.s32 	%r185, %r136, %r137;
	shl.b32 	%r43, %r183, 2;
	shr.u32 	%r138, %r185, 31;
	shr.u32 	%r139, %r182, 30;
	add.s32 	%r140, %r138, %r139;
	neg.s32 	%r141, %r140;
	setp.eq.s32 	%p21, %r184, 0;
	selp.b32 	%r187, %r140, %r141, %p21;
	setp.eq.s32 	%p22, %r138, 0;
	mov.u32 	%r186, %r43;
	@%p22 bra 	BB76_29;

	not.b32 	%r142, %r185;
	neg.s32 	%r45, %r43;
	setp.eq.s32 	%p23, %r43, 0;
	selp.u32 	%r143, 1, 0, %p23;
	add.s32 	%r185, %r143, %r142;
	xor.b32  	%r184, %r184, -2147483648;
	mov.u32 	%r186, %r45;

BB76_29:
	clz.b32 	%r144, %r185;
	setp.eq.s32 	%p24, %r144, 0;
	shl.b32 	%r145, %r185, %r144;
	mov.u32 	%r146, 32;
	sub.s32 	%r147, %r146, %r144;
	shr.u32 	%r148, %r186, %r147;
	add.s32 	%r149, %r148, %r145;
	selp.b32 	%r150, %r185, %r149, %p24;
	mul.lo.s32 	%r151, %r150, -921707870;
	mov.u32 	%r152, -921707870;
	mul.hi.u32 	%r153, %r150, %r152;
	setp.gt.s32 	%p25, %r153, 0;
	shl.b32 	%r154, %r153, 1;
	shr.u32 	%r155, %r151, 31;
	add.s32 	%r156, %r155, %r154;
	selp.b32 	%r157, %r156, %r153, %p25;
	selp.b32 	%r158, -1, 0, %p25;
	mov.u32 	%r159, 126;
	sub.s32 	%r160, %r159, %r144;
	add.s32 	%r161, %r160, %r158;
	shl.b32 	%r162, %r161, 23;
	add.s32 	%r163, %r157, 1;
	shr.u32 	%r164, %r163, 7;
	add.s32 	%r165, %r164, 1;
	shr.u32 	%r166, %r165, 1;
	add.s32 	%r167, %r166, %r162;
	or.b32  	%r168, %r167, %r184;
	mov.b32 	%f127, %r168;

BB76_30:
	mul.rn.f32 	%f29, %f127, %f127;
	and.b32  	%r52, %r187, 1;
	setp.eq.s32 	%p26, %r52, 0;
	@%p26 bra 	BB76_32;

	mov.f32 	%f93, 0fBAB6061A;
	mov.f32 	%f94, 0f37CCF5CE;
	fma.rn.f32 	%f128, %f94, %f29, %f93;
	bra.uni 	BB76_33;

BB76_32:
	mov.f32 	%f95, 0f3C08839E;
	mov.f32 	%f96, 0fB94CA1F9;
	fma.rn.f32 	%f128, %f96, %f29, %f95;

BB76_33:
	@%p26 bra 	BB76_35;

	mov.f32 	%f97, 0f3D2AAAA5;
	fma.rn.f32 	%f98, %f128, %f29, %f97;
	mov.f32 	%f99, 0fBF000000;
	fma.rn.f32 	%f129, %f98, %f29, %f99;
	bra.uni 	BB76_36;

BB76_35:
	mov.f32 	%f100, 0fBE2AAAA3;
	fma.rn.f32 	%f101, %f128, %f29, %f100;
	mov.f32 	%f102, 0f00000000;
	fma.rn.f32 	%f129, %f101, %f29, %f102;

BB76_36:
	fma.rn.f32 	%f130, %f129, %f127, %f127;
	@%p26 bra 	BB76_38;

	mov.f32 	%f103, 0f3F800000;
	fma.rn.f32 	%f130, %f129, %f29, %f103;

BB76_38:
	and.b32  	%r169, %r187, 2;
	setp.eq.s32 	%p29, %r169, 0;
	@%p29 bra 	BB76_40;

	mov.f32 	%f104, 0f00000000;
	mov.f32 	%f105, 0fBF800000;
	fma.rn.f32 	%f130, %f130, %f105, %f104;

BB76_40:
	cvt.f64.f32 	%fd2, %f130;
	neg.f64 	%fd1, %fd2;
	setp.ltu.f32 	%p30, %f20, 0f3F800000;
	@%p30 bra 	BB76_42;

	neg.f32 	%f106, %f22;
	fma.rn.f32 	%f108, %f80, %f21, %f106;
	selp.f32 	%f109, %f108, %f1, %p15;
	mov.b32 	%r170, %f109;
	mov.b32 	%r171, %f45;
	and.b32  	%r172, %r171, -2147483648;
	or.b32  	%r173, %r172, %r170;
	mov.b32 	%f131, %r173;
	bra.uni 	BB76_43;

BB76_42:
	mul.f32 	%f110, %f45, %f45;
	mov.f32 	%f111, 0f394FFF49;
	mov.f32 	%f112, 0f363D0ADA;
	fma.rn.f32 	%f113, %f112, %f110, %f111;
	mov.f32 	%f114, 0f3C08889A;
	fma.rn.f32 	%f115, %f113, %f110, %f114;
	mov.f32 	%f116, 0f3E2AAAAB;
	fma.rn.f32 	%f117, %f115, %f110, %f116;
	mul.f32 	%f118, %f117, %f110;
	fma.rn.f32 	%f131, %f118, %f45, %f45;

BB76_43:
	cvt.f64.f32 	%fd3, %f131;
	mul.f64 	%fd4, %fd1, %fd3;
	cvt.rn.f32.f64 	%f119, %fd4;
	st.param.f32	[func_retval0+0], %f23;
	st.param.f32	[func_retval0+4], %f119;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _CTAN(
	.param .b64 _CTAN_param_0,
	.param .b64 _CTAN_param_1
)
{
	.local .align 4 .b8 	__local_depot77[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<39>;
	.reg .s32 	%r<123>;
	.reg .f32 	%f<11>;
	.reg .s64 	%rd<29>;
	.reg .f64 	%fd<407>;


	mov.u64 	%SPL, __local_depot77;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd80, [_CTAN_param_0];
	ld.param.f64 	%fd81, [_CTAN_param_1];
	add.u64 	%rd2, %SP, 12;
	cvta.to.local.u64 	%rd1, %rd2;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd1, %rd3;
	abs.f64 	%fd2, %fd80;
	setp.neu.f64 	%p1, %fd2, %fd1;
	mov.f64 	%fd403, %fd80;
	@%p1 bra 	BB77_2;

	mov.f64 	%fd82, 0d0000000000000000;
	mul.rn.f64 	%fd3, %fd80, %fd82;
	mov.f64 	%fd403, %fd3;

BB77_2:
	mov.f64 	%fd4, %fd403;
	mul.f64 	%fd83, %fd4, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r119, %fd83;
	st.local.u32 	[%rd1], %r119;
	cvt.rn.f64.s32 	%fd84, %r119;
	neg.f64 	%fd85, %fd84;
	mov.f64 	%fd86, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd87, %fd85, %fd86, %fd4;
	mov.f64 	%fd88, 0d3C91A62633145C00;
	fma.rn.f64 	%fd89, %fd85, %fd88, %fd87;
	mov.f64 	%fd90, 0d397B839A252049C0;
	fma.rn.f64 	%fd383, %fd85, %fd90, %fd89;
	abs.f64 	%fd91, %fd4;
	setp.leu.f64 	%p2, %fd91, 0d41E0000000000000;
	@%p2 bra 	BB77_4;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd383, [retval0+0];
	}
	
	ld.local.u32 	%r119, [%rd1];

BB77_4:
	shl.b32 	%r23, %r119, 3;
	and.b32  	%r24, %r23, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r119, 1;
	setp.b32.eq 	 %p3, temp, 1;
	}
	not.pred 	%p4, %p3;
	selp.f64 	 %fd92, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p4;
	mul.wide.u32 	%rd5, %r24, 8;
	mov.u64 	%rd6, __cudart_sin_cos_coeffs;
	add.s64 	%rd7, %rd5, %rd6;
	ld.const.f64 	%fd93, [%rd7+8];
	mul.rn.f64 	%fd8, %fd383, %fd383;
	fma.rn.f64 	%fd94, %fd92, %fd8, %fd93;
	ld.const.f64 	%fd95, [%rd7+16];
	fma.rn.f64 	%fd96, %fd94, %fd8, %fd95;
	ld.const.f64 	%fd97, [%rd7+24];
	fma.rn.f64 	%fd98, %fd96, %fd8, %fd97;
	ld.const.f64 	%fd99, [%rd7+32];
	fma.rn.f64 	%fd100, %fd98, %fd8, %fd99;
	ld.const.f64 	%fd101, [%rd7+40];
	fma.rn.f64 	%fd102, %fd100, %fd8, %fd101;
	ld.const.f64 	%fd103, [%rd7+48];
	fma.rn.f64 	%fd9, %fd102, %fd8, %fd103;
	fma.rn.f64 	%fd384, %fd9, %fd383, %fd383;
	@%p4 bra 	BB77_6;

	mov.f64 	%fd104, 0d3FF0000000000000;
	fma.rn.f64 	%fd384, %fd9, %fd8, %fd104;

BB77_6:
	and.b32  	%r31, %r119, 2;
	setp.eq.s32 	%p5, %r31, 0;
	@%p5 bra 	BB77_8;

	mov.f64 	%fd105, 0d0000000000000000;
	mov.f64 	%fd106, 0dBFF0000000000000;
	fma.rn.f64 	%fd384, %fd384, %fd106, %fd105;

BB77_8:
	abs.f64 	%fd15, %fd81;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd15;
	}
	setp.lt.u32 	%p6, %r4, 1082536911;
	@%p6 bra 	BB77_12;

	setp.leu.f64 	%p7, %fd15, 0d0000000000000000;
	mov.f64 	%fd394, %fd81;
	@%p7 bra 	BB77_11;

	mov.u32 	%r32, 2139095040;
	mov.b32 	%f1, %r32;
	cvt.f64.f32 	%fd16, %f1;
	mov.f64 	%fd394, %fd16;

BB77_11:
	mov.f64 	%fd17, %fd394;
	add.f64 	%fd386, %fd17, %fd17;
	bra.uni 	BB77_16;

BB77_12:
	mul.f64 	%fd107, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd108, %fd107;
	cvt.rzi.s32.f64 	%r33, %fd108;
	mov.f64 	%fd109, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd110, %fd108, %fd109, %fd15;
	mov.f64 	%fd111, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd112, %fd108, %fd111, %fd110;
	mov.f64 	%fd113, 0d3E928A27E30F5561;
	mov.f64 	%fd114, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd115, %fd114, %fd112, %fd113;
	mov.f64 	%fd116, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd117, %fd115, %fd112, %fd116;
	mov.f64 	%fd118, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd119, %fd117, %fd112, %fd118;
	mov.f64 	%fd120, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd121, %fd119, %fd112, %fd120;
	mov.f64 	%fd122, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd123, %fd121, %fd112, %fd122;
	mov.f64 	%fd124, 0d3F8111111111A24E;
	fma.rn.f64 	%fd125, %fd123, %fd112, %fd124;
	mov.f64 	%fd126, 0d3FA555555555211D;
	fma.rn.f64 	%fd127, %fd125, %fd112, %fd126;
	mov.f64 	%fd128, 0d3FC5555555555530;
	fma.rn.f64 	%fd129, %fd127, %fd112, %fd128;
	mov.f64 	%fd130, 0d3FE0000000000005;
	fma.rn.f64 	%fd131, %fd129, %fd112, %fd130;
	mov.f64 	%fd132, 0d3FF0000000000000;
	fma.rn.f64 	%fd133, %fd131, %fd112, %fd132;
	fma.rn.f64 	%fd19, %fd133, %fd112, %fd132;
	add.s32 	%r5, %r33, -2;
	shl.b32 	%r34, %r5, 20;
	add.s32 	%r6, %r34, 1072693248;
	abs.s32 	%r35, %r5;
	setp.lt.s32 	%p8, %r35, 1021;
	@%p8 bra 	BB77_14;

	add.s32 	%r37, %r34, 1130364928;
	setp.lt.s32 	%p9, %r5, 0;
	mov.u32 	%r38, 0;
	selp.b32 	%r39, %r37, %r6, %p9;
	shr.s32 	%r40, %r5, 31;
	add.s32 	%r41, %r40, 1073741824;
	and.b32  	%r42, %r41, -57671680;
	add.s32 	%r43, %r39, -1048576;
	mov.b64 	%fd134, {%r38, %r42};
	mul.f64 	%fd135, %fd19, %fd134;
	mov.b64 	%fd136, {%r38, %r43};
	mul.f64 	%fd385, %fd135, %fd136;
	bra.uni 	BB77_15;

BB77_14:
	mov.u32 	%r44, 0;
	mov.b64 	%fd137, {%r44, %r6};
	mul.f64 	%fd385, %fd137, %fd19;

BB77_15:
	
	cvt.rn.f32.f64     %f2,%fd385;
	
	
	rcp.approx.f32.ftz %f3,%f2;
	
	
	cvt.f64.f32        %fd139,%f3;
	
	neg.f64 	%fd140, %fd385;
	fma.rn.f64 	%fd142, %fd140, %fd139, %fd132;
	fma.rn.f64 	%fd143, %fd142, %fd142, %fd142;
	fma.rn.f64 	%fd144, %fd143, %fd139, %fd139;
	mul.f64 	%fd145, %fd144, 0d3FC0000000000000;
	mov.f64 	%fd146, 0d4000000000000000;
	fma.rn.f64 	%fd386, %fd146, %fd385, %fd145;

BB77_16:
	mul.f64 	%fd25, %fd384, %fd386;
	mov.f64 	%fd402, %fd80;
	@%p1 bra 	BB77_18;

	mov.f64 	%fd147, 0d0000000000000000;
	mul.rn.f64 	%fd402, %fd80, %fd147;

BB77_18:
	add.u64 	%rd8, %SP, 8;
	mul.f64 	%fd148, %fd402, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r120, %fd148;
	cvta.to.local.u64 	%rd9, %rd8;
	st.local.u32 	[%rd9], %r120;
	cvt.rn.f64.s32 	%fd149, %r120;
	neg.f64 	%fd150, %fd149;
	fma.rn.f64 	%fd152, %fd150, %fd86, %fd402;
	fma.rn.f64 	%fd154, %fd150, %fd88, %fd152;
	fma.rn.f64 	%fd387, %fd150, %fd90, %fd154;
	abs.f64 	%fd156, %fd402;
	setp.leu.f64 	%p11, %fd156, 0d41E0000000000000;
	@%p11 bra 	BB77_20;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd402;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd387, [retval0+0];
	}
	
	ld.local.u32 	%r120, [%rd9];

BB77_20:
	add.s32 	%r10, %r120, 1;
	shl.b32 	%r47, %r10, 3;
	and.b32  	%r48, %r47, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r10, 1;
	setp.b32.eq 	 %p12, temp, 1;
	}
	not.pred 	%p13, %p12;
	selp.f64 	 %fd157, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p13;
	mul.wide.u32 	%rd12, %r48, 8;
	add.s64 	%rd14, %rd12, %rd6;
	ld.const.f64 	%fd158, [%rd14+8];
	mul.rn.f64 	%fd31, %fd387, %fd387;
	fma.rn.f64 	%fd159, %fd157, %fd31, %fd158;
	ld.const.f64 	%fd160, [%rd14+16];
	fma.rn.f64 	%fd161, %fd159, %fd31, %fd160;
	ld.const.f64 	%fd162, [%rd14+24];
	fma.rn.f64 	%fd163, %fd161, %fd31, %fd162;
	ld.const.f64 	%fd164, [%rd14+32];
	fma.rn.f64 	%fd165, %fd163, %fd31, %fd164;
	ld.const.f64 	%fd166, [%rd14+40];
	fma.rn.f64 	%fd167, %fd165, %fd31, %fd166;
	ld.const.f64 	%fd168, [%rd14+48];
	fma.rn.f64 	%fd32, %fd167, %fd31, %fd168;
	fma.rn.f64 	%fd388, %fd32, %fd387, %fd387;
	@%p13 bra 	BB77_22;

	mov.f64 	%fd169, 0d3FF0000000000000;
	fma.rn.f64 	%fd388, %fd32, %fd31, %fd169;

BB77_22:
	and.b32  	%r55, %r10, 2;
	setp.eq.s32 	%p14, %r55, 0;
	@%p14 bra 	BB77_24;

	mov.f64 	%fd170, 0d0000000000000000;
	mov.f64 	%fd171, 0dBFF0000000000000;
	fma.rn.f64 	%fd388, %fd388, %fd171, %fd170;

BB77_24:
	setp.lt.s32 	%p15, %r4, 1072693248;
	@%p15 bra 	BB77_26;

	mul.f64 	%fd172, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd173, %fd172;
	cvt.rzi.s32.f64 	%r56, %fd173;
	add.s32 	%r57, %r56, -1;
	mov.f64 	%fd174, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd175, %fd173, %fd174, %fd15;
	mov.f64 	%fd176, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd177, %fd173, %fd176, %fd175;
	shl.b32 	%r58, %r4, 1;
	setp.lt.u32 	%p16, %r58, 2142496327;
	selp.f64 	%fd178, %fd15, %fd177, %p16;
	selp.b32 	%r59, 0, %r57, %p16;
	mov.u32 	%r60, 0;
	mov.f64 	%fd179, 0d3E5AFD81DA6C3BAF;
	mov.f64 	%fd180, 0d3E21F07FCCF58BAD;
	fma.rn.f64 	%fd181, %fd180, %fd178, %fd179;
	mov.f64 	%fd182, 0d3E927E55F60F80E6;
	fma.rn.f64 	%fd183, %fd181, %fd178, %fd182;
	mov.f64 	%fd184, 0d3EC71DDA8F02D666;
	fma.rn.f64 	%fd185, %fd183, %fd178, %fd184;
	mov.f64 	%fd186, 0d3EFA01A013B894E0;
	fma.rn.f64 	%fd187, %fd185, %fd178, %fd186;
	mov.f64 	%fd188, 0d3F2A01A01D3AF788;
	fma.rn.f64 	%fd189, %fd187, %fd178, %fd188;
	mov.f64 	%fd190, 0d3F56C16C16C3A1EC;
	fma.rn.f64 	%fd191, %fd189, %fd178, %fd190;
	mov.f64 	%fd192, 0d3F81111111109161;
	fma.rn.f64 	%fd193, %fd191, %fd178, %fd192;
	mov.f64 	%fd194, 0d3FA55555555554C1;
	fma.rn.f64 	%fd195, %fd193, %fd178, %fd194;
	mov.f64 	%fd196, 0d3FC555555555556F;
	fma.rn.f64 	%fd197, %fd195, %fd178, %fd196;
	mov.f64 	%fd198, 0d3FE0000000000000;
	fma.rn.f64 	%fd199, %fd197, %fd178, %fd198;
	mul.f64 	%fd200, %fd199, %fd178;
	fma.rn.f64 	%fd201, %fd200, %fd178, %fd178;
	setp.eq.s32 	%p17, %r59, 1024;
	selp.b32 	%r61, -1, 0, %p17;
	add.s32 	%r62, %r61, %r59;
	shl.b32 	%r63, %r62, 20;
	add.s32 	%r64, %r63, 1072693248;
	mov.b64 	%fd202, {%r60, %r64};
	mov.u32 	%r65, 1071644672;
	mov.b64 	%fd203, {%r60, %r65};
	sub.f64 	%fd204, %fd202, %fd203;
	fma.rn.f64 	%fd205, %fd201, %fd202, %fd204;
	add.f64 	%fd206, %fd205, %fd205;
	selp.f64 	%fd207, %fd206, %fd205, %p17;
	setp.eq.s32 	%p18, %r58, 0;
	selp.f64 	%fd208, %fd178, %fd207, %p18;
	mov.f64 	%fd209, 0d3FF0000000000000;
	mov.f64 	%fd210, 0d4000000000000000;
	fma.rn.f64 	%fd211, %fd210, %fd208, %fd209;
	div.rn.f64 	%fd212, %fd208, %fd211;
	add.f64 	%fd213, %fd208, %fd212;
	setp.ltu.f64 	%p19, %fd15, 0d408633CE8FB9F87E;
	selp.f64 	%fd389, %fd213, %fd1, %p19;
	bra.uni 	BB77_27;

BB77_26:
	mul.f64 	%fd214, %fd15, %fd15;
	mov.f64 	%fd215, 0d3E5AE54AA7F65A50;
	mov.f64 	%fd216, 0d3DE66F72AF4891C2;
	fma.rn.f64 	%fd217, %fd216, %fd214, %fd215;
	mov.f64 	%fd218, 0d3EC71DE4F068906D;
	fma.rn.f64 	%fd219, %fd217, %fd214, %fd218;
	mov.f64 	%fd220, 0d3F2A01A01848AC60;
	fma.rn.f64 	%fd221, %fd219, %fd214, %fd220;
	mov.f64 	%fd222, 0d3F81111111121E55;
	fma.rn.f64 	%fd223, %fd221, %fd214, %fd222;
	mov.f64 	%fd224, 0d3FC555555555547B;
	fma.rn.f64 	%fd225, %fd223, %fd214, %fd224;
	mul.f64 	%fd226, %fd225, %fd214;
	fma.rn.f64 	%fd389, %fd226, %fd15, %fd15;

BB77_27:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r66}, %fd81;
	}
	and.b32  	%r11, %r66, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r67}, %fd389;
	}
	or.b32  	%r68, %r67, %r11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r69, %temp}, %fd389;
	}
	mov.b64 	%fd227, {%r69, %r68};
	mul.f64 	%fd41, %fd388, %fd227;
	mov.f64 	%fd401, %fd80;
	@%p1 bra 	BB77_29;

	mov.f64 	%fd228, 0d0000000000000000;
	mul.rn.f64 	%fd401, %fd80, %fd228;

BB77_29:
	add.u64 	%rd15, %SP, 4;
	mul.f64 	%fd229, %fd401, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r121, %fd229;
	cvta.to.local.u64 	%rd16, %rd15;
	st.local.u32 	[%rd16], %r121;
	cvt.rn.f64.s32 	%fd230, %r121;
	neg.f64 	%fd231, %fd230;
	fma.rn.f64 	%fd233, %fd231, %fd86, %fd401;
	fma.rn.f64 	%fd235, %fd231, %fd88, %fd233;
	fma.rn.f64 	%fd390, %fd231, %fd90, %fd235;
	abs.f64 	%fd237, %fd401;
	setp.leu.f64 	%p21, %fd237, 0d41E0000000000000;
	@%p21 bra 	BB77_31;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd401;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd390, [retval0+0];
	}
	
	ld.local.u32 	%r121, [%rd16];

BB77_31:
	add.s32 	%r15, %r121, 1;
	shl.b32 	%r72, %r15, 3;
	and.b32  	%r73, %r72, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r15, 1;
	setp.b32.eq 	 %p22, temp, 1;
	}
	not.pred 	%p23, %p22;
	selp.f64 	 %fd238, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p23;
	mul.wide.u32 	%rd19, %r73, 8;
	add.s64 	%rd21, %rd19, %rd6;
	ld.const.f64 	%fd239, [%rd21+8];
	mul.rn.f64 	%fd47, %fd390, %fd390;
	fma.rn.f64 	%fd240, %fd238, %fd47, %fd239;
	ld.const.f64 	%fd241, [%rd21+16];
	fma.rn.f64 	%fd242, %fd240, %fd47, %fd241;
	ld.const.f64 	%fd243, [%rd21+24];
	fma.rn.f64 	%fd244, %fd242, %fd47, %fd243;
	ld.const.f64 	%fd245, [%rd21+32];
	fma.rn.f64 	%fd246, %fd244, %fd47, %fd245;
	ld.const.f64 	%fd247, [%rd21+40];
	fma.rn.f64 	%fd248, %fd246, %fd47, %fd247;
	ld.const.f64 	%fd249, [%rd21+48];
	fma.rn.f64 	%fd48, %fd248, %fd47, %fd249;
	fma.rn.f64 	%fd391, %fd48, %fd390, %fd390;
	@%p23 bra 	BB77_33;

	mov.f64 	%fd250, 0d3FF0000000000000;
	fma.rn.f64 	%fd391, %fd48, %fd47, %fd250;

BB77_33:
	and.b32  	%r80, %r15, 2;
	setp.eq.s32 	%p24, %r80, 0;
	@%p24 bra 	BB77_35;

	mov.f64 	%fd251, 0d0000000000000000;
	mov.f64 	%fd252, 0dBFF0000000000000;
	fma.rn.f64 	%fd391, %fd391, %fd252, %fd251;

BB77_35:
	@%p6 bra 	BB77_39;

	setp.leu.f64 	%p26, %fd15, 0d0000000000000000;
	mov.f64 	%fd393, %fd81;
	@%p26 bra 	BB77_38;

	mov.u32 	%r81, 2139095040;
	mov.b32 	%f6, %r81;
	cvt.f64.f32 	%fd393, %f6;

BB77_38:
	add.f64 	%fd396, %fd393, %fd393;
	bra.uni 	BB77_43;

BB77_39:
	mul.f64 	%fd253, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd254, %fd253;
	cvt.rzi.s32.f64 	%r82, %fd254;
	mov.f64 	%fd255, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd256, %fd254, %fd255, %fd15;
	mov.f64 	%fd257, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd258, %fd254, %fd257, %fd256;
	mov.f64 	%fd259, 0d3E928A27E30F5561;
	mov.f64 	%fd260, 0d3E5AE6449C0686C0;
	fma.rn.f64 	%fd261, %fd260, %fd258, %fd259;
	mov.f64 	%fd262, 0d3EC71DE8E6486D6B;
	fma.rn.f64 	%fd263, %fd261, %fd258, %fd262;
	mov.f64 	%fd264, 0d3EFA019A6B2464C5;
	fma.rn.f64 	%fd265, %fd263, %fd258, %fd264;
	mov.f64 	%fd266, 0d3F2A01A0171064A5;
	fma.rn.f64 	%fd267, %fd265, %fd258, %fd266;
	mov.f64 	%fd268, 0d3F56C16C17F29C8D;
	fma.rn.f64 	%fd269, %fd267, %fd258, %fd268;
	mov.f64 	%fd270, 0d3F8111111111A24E;
	fma.rn.f64 	%fd271, %fd269, %fd258, %fd270;
	mov.f64 	%fd272, 0d3FA555555555211D;
	fma.rn.f64 	%fd273, %fd271, %fd258, %fd272;
	mov.f64 	%fd274, 0d3FC5555555555530;
	fma.rn.f64 	%fd275, %fd273, %fd258, %fd274;
	mov.f64 	%fd276, 0d3FE0000000000005;
	fma.rn.f64 	%fd277, %fd275, %fd258, %fd276;
	mov.f64 	%fd278, 0d3FF0000000000000;
	fma.rn.f64 	%fd279, %fd277, %fd258, %fd278;
	fma.rn.f64 	%fd57, %fd279, %fd258, %fd278;
	add.s32 	%r16, %r82, -2;
	shl.b32 	%r83, %r16, 20;
	add.s32 	%r17, %r83, 1072693248;
	abs.s32 	%r84, %r16;
	setp.lt.s32 	%p27, %r84, 1021;
	@%p27 bra 	BB77_41;

	add.s32 	%r86, %r83, 1130364928;
	setp.lt.s32 	%p28, %r16, 0;
	mov.u32 	%r88, 0;
	selp.b32 	%r89, %r86, %r17, %p28;
	shr.s32 	%r90, %r16, 31;
	add.s32 	%r91, %r90, 1073741824;
	and.b32  	%r92, %r91, -57671680;
	add.s32 	%r93, %r89, -1048576;
	mov.b64 	%fd280, {%r88, %r92};
	mul.f64 	%fd281, %fd57, %fd280;
	mov.b64 	%fd282, {%r88, %r93};
	mul.f64 	%fd395, %fd281, %fd282;
	bra.uni 	BB77_42;

BB77_41:
	mov.u32 	%r94, 0;
	mov.b64 	%fd283, {%r94, %r17};
	mul.f64 	%fd395, %fd283, %fd57;

BB77_42:
	
	cvt.rn.f32.f64     %f7,%fd395;
	
	
	rcp.approx.f32.ftz %f8,%f7;
	
	
	cvt.f64.f32        %fd285,%f8;
	
	neg.f64 	%fd286, %fd395;
	fma.rn.f64 	%fd288, %fd286, %fd285, %fd278;
	fma.rn.f64 	%fd289, %fd288, %fd288, %fd288;
	fma.rn.f64 	%fd290, %fd289, %fd285, %fd285;
	mul.f64 	%fd291, %fd290, 0d3FC0000000000000;
	mov.f64 	%fd292, 0d4000000000000000;
	fma.rn.f64 	%fd396, %fd292, %fd395, %fd291;

BB77_43:
	mul.f64 	%fd63, %fd391, %fd396;
	mov.f64 	%fd400, %fd80;
	@%p1 bra 	BB77_45;

	mov.f64 	%fd293, 0d0000000000000000;
	mul.rn.f64 	%fd400, %fd80, %fd293;

BB77_45:
	add.u64 	%rd22, %SP, 0;
	mul.f64 	%fd294, %fd400, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64 	%r122, %fd294;
	cvta.to.local.u64 	%rd23, %rd22;
	st.local.u32 	[%rd23], %r122;
	cvt.rn.f64.s32 	%fd295, %r122;
	neg.f64 	%fd296, %fd295;
	fma.rn.f64 	%fd298, %fd296, %fd86, %fd400;
	fma.rn.f64 	%fd300, %fd296, %fd88, %fd298;
	fma.rn.f64 	%fd404, %fd296, %fd90, %fd300;
	abs.f64 	%fd302, %fd400;
	setp.leu.f64 	%p30, %fd302, 0d41E0000000000000;
	@%p30 bra 	BB77_47;

	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd400;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd404, [retval0+0];
	}
	
	ld.local.u32 	%r122, [%rd23];

BB77_47:
	shl.b32 	%r97, %r122, 3;
	and.b32  	%r98, %r97, 8;
	{
	.reg .b32 temp;
	and.b32	 temp, %r122, 1;
	setp.b32.eq 	 %p31, temp, 1;
	}
	not.pred 	%p32, %p31;
	selp.f64 	 %fd303, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p32;
	mul.wide.u32 	%rd26, %r98, 8;
	add.s64 	%rd28, %rd26, %rd6;
	ld.const.f64 	%fd304, [%rd28+8];
	mul.rn.f64 	%fd69, %fd404, %fd404;
	fma.rn.f64 	%fd305, %fd303, %fd69, %fd304;
	ld.const.f64 	%fd306, [%rd28+16];
	fma.rn.f64 	%fd307, %fd305, %fd69, %fd306;
	ld.const.f64 	%fd308, [%rd28+24];
	fma.rn.f64 	%fd309, %fd307, %fd69, %fd308;
	ld.const.f64 	%fd310, [%rd28+32];
	fma.rn.f64 	%fd311, %fd309, %fd69, %fd310;
	ld.const.f64 	%fd312, [%rd28+40];
	fma.rn.f64 	%fd313, %fd311, %fd69, %fd312;
	ld.const.f64 	%fd314, [%rd28+48];
	fma.rn.f64 	%fd70, %fd313, %fd69, %fd314;
	fma.rn.f64 	%fd405, %fd70, %fd404, %fd404;
	@%p32 bra 	BB77_49;

	mov.f64 	%fd315, 0d3FF0000000000000;
	fma.rn.f64 	%fd405, %fd70, %fd69, %fd315;

BB77_49:
	and.b32  	%r105, %r122, 2;
	setp.eq.s32 	%p33, %r105, 0;
	@%p33 bra 	BB77_51;

	mov.f64 	%fd316, 0d0000000000000000;
	mov.f64 	%fd317, 0dBFF0000000000000;
	fma.rn.f64 	%fd405, %fd405, %fd317, %fd316;

BB77_51:
	neg.f64 	%fd76, %fd405;
	@%p15 bra 	BB77_53;

	mul.f64 	%fd318, %fd15, 0d3FF71547652B82FE;
	cvt.rni.f64.f64 	%fd319, %fd318;
	cvt.rzi.s32.f64 	%r106, %fd319;
	add.s32 	%r107, %r106, -1;
	mov.f64 	%fd320, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd321, %fd319, %fd320, %fd15;
	mov.f64 	%fd322, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd323, %fd319, %fd322, %fd321;
	shl.b32 	%r108, %r4, 1;
	setp.lt.u32 	%p35, %r108, 2142496327;
	selp.f64 	%fd324, %fd15, %fd323, %p35;
	selp.b32 	%r109, 0, %r107, %p35;
	mov.u32 	%r110, 0;
	mov.f64 	%fd325, 0d3E5AFD81DA6C3BAF;
	mov.f64 	%fd326, 0d3E21F07FCCF58BAD;
	fma.rn.f64 	%fd327, %fd326, %fd324, %fd325;
	mov.f64 	%fd328, 0d3E927E55F60F80E6;
	fma.rn.f64 	%fd329, %fd327, %fd324, %fd328;
	mov.f64 	%fd330, 0d3EC71DDA8F02D666;
	fma.rn.f64 	%fd331, %fd329, %fd324, %fd330;
	mov.f64 	%fd332, 0d3EFA01A013B894E0;
	fma.rn.f64 	%fd333, %fd331, %fd324, %fd332;
	mov.f64 	%fd334, 0d3F2A01A01D3AF788;
	fma.rn.f64 	%fd335, %fd333, %fd324, %fd334;
	mov.f64 	%fd336, 0d3F56C16C16C3A1EC;
	fma.rn.f64 	%fd337, %fd335, %fd324, %fd336;
	mov.f64 	%fd338, 0d3F81111111109161;
	fma.rn.f64 	%fd339, %fd337, %fd324, %fd338;
	mov.f64 	%fd340, 0d3FA55555555554C1;
	fma.rn.f64 	%fd341, %fd339, %fd324, %fd340;
	mov.f64 	%fd342, 0d3FC555555555556F;
	fma.rn.f64 	%fd343, %fd341, %fd324, %fd342;
	mov.f64 	%fd344, 0d3FE0000000000000;
	fma.rn.f64 	%fd345, %fd343, %fd324, %fd344;
	mul.f64 	%fd346, %fd345, %fd324;
	fma.rn.f64 	%fd347, %fd346, %fd324, %fd324;
	setp.eq.s32 	%p36, %r109, 1024;
	selp.b32 	%r111, -1, 0, %p36;
	add.s32 	%r112, %r111, %r109;
	shl.b32 	%r113, %r112, 20;
	add.s32 	%r114, %r113, 1072693248;
	mov.b64 	%fd348, {%r110, %r114};
	mov.u32 	%r115, 1071644672;
	mov.b64 	%fd349, {%r110, %r115};
	sub.f64 	%fd350, %fd348, %fd349;
	fma.rn.f64 	%fd351, %fd347, %fd348, %fd350;
	add.f64 	%fd352, %fd351, %fd351;
	selp.f64 	%fd353, %fd352, %fd351, %p36;
	setp.eq.s32 	%p37, %r108, 0;
	selp.f64 	%fd354, %fd324, %fd353, %p37;
	mov.f64 	%fd355, 0d3FF0000000000000;
	mov.f64 	%fd356, 0d4000000000000000;
	fma.rn.f64 	%fd357, %fd356, %fd354, %fd355;
	div.rn.f64 	%fd358, %fd354, %fd357;
	add.f64 	%fd359, %fd354, %fd358;
	setp.ltu.f64 	%p38, %fd15, 0d408633CE8FB9F87E;
	selp.f64 	%fd406, %fd359, %fd1, %p38;
	bra.uni 	BB77_54;

BB77_53:
	mul.f64 	%fd360, %fd15, %fd15;
	mov.f64 	%fd361, 0d3E5AE54AA7F65A50;
	mov.f64 	%fd362, 0d3DE66F72AF4891C2;
	fma.rn.f64 	%fd363, %fd362, %fd360, %fd361;
	mov.f64 	%fd364, 0d3EC71DE4F068906D;
	fma.rn.f64 	%fd365, %fd363, %fd360, %fd364;
	mov.f64 	%fd366, 0d3F2A01A01848AC60;
	fma.rn.f64 	%fd367, %fd365, %fd360, %fd366;
	mov.f64 	%fd368, 0d3F81111111121E55;
	fma.rn.f64 	%fd369, %fd367, %fd360, %fd368;
	mov.f64 	%fd370, 0d3FC555555555547B;
	fma.rn.f64 	%fd371, %fd369, %fd360, %fd370;
	mul.f64 	%fd372, %fd371, %fd360;
	fma.rn.f64 	%fd406, %fd372, %fd15, %fd15;

BB77_54:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r116}, %fd406;
	}
	or.b32  	%r117, %r116, %r11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r118, %temp}, %fd406;
	}
	mov.b64 	%fd373, {%r118, %r117};
	mul.f64 	%fd374, %fd76, %fd373;
	mul.f64 	%fd375, %fd374, %fd374;
	fma.rn.f64 	%fd376, %fd63, %fd63, %fd375;
	mul.f64 	%fd377, %fd41, %fd374;
	fma.rn.f64 	%fd378, %fd25, %fd63, %fd377;
	mul.f64 	%fd379, %fd41, %fd63;
	fma.rn.f64 	%fd380, %fd25, %fd374, %fd379;
	div.rn.f64 	%fd381, %fd378, %fd376;
	div.rn.f64 	%fd382, %fd380, %fd376;
	st.param.f64	[func_retval0+0], %fd381;
	st.param.f64	[func_retval0+8], %fd382;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) _CHTAN(
	.param .b32 _CHTAN_param_0,
	.param .b32 _CHTAN_param_1
)
{
	.local .align 4 .b8 	__local_depot78[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<64>;
	.reg .s32 	%r<376>;
	.reg .f32 	%f<268>;
	.reg .s64 	%rd<54>;


	mov.u64 	%SPL, __local_depot78;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f32 	%f85, [_CHTAN_param_0];
	ld.param.f32 	%f86, [_CHTAN_param_1];
	add.u64 	%rd16, %SPL, 0;
	mov.u32 	%r107, 2139095040;
	mov.b32 	%f1, %r107;
	abs.f32 	%f2, %f85;
	setp.neu.f32 	%p1, %f2, %f1;
	mov.f32 	%f262, %f85;
	@%p1 bra 	BB78_2;

	mov.f32 	%f87, 0f00000000;
	mul.rn.f32 	%f3, %f85, %f87;
	mov.f32 	%f262, %f3;

BB78_2:
	mov.f32 	%f4, %f262;
	mul.f32 	%f88, %f4, 0f3F22F983;
	cvt.rni.s32.f32 	%r354, %f88;
	cvt.rn.f32.s32 	%f89, %r354;
	neg.f32 	%f90, %f89;
	mov.f32 	%f91, 0f3FC90FDA;
	fma.rn.f32 	%f92, %f90, %f91, %f4;
	mov.f32 	%f93, 0f33A22168;
	fma.rn.f32 	%f94, %f90, %f93, %f92;
	mov.f32 	%f95, 0f27C234C5;
	fma.rn.f32 	%f243, %f90, %f95, %f94;
	abs.f32 	%f96, %f4;
	setp.leu.f32 	%p2, %f96, 0f47CE4780;
	@%p2 bra 	BB78_10;

	mov.b32 	%r2, %f4;
	shr.u32 	%r3, %r2, 23;
	and.b32  	%r109, %r3, 255;
	add.s32 	%r110, %r109, -128;
	shl.b32 	%r111, %r2, 8;
	or.b32  	%r4, %r111, -2147483648;
	shr.u32 	%r5, %r110, 5;
	mov.u32 	%r348, 0;
	mov.u64 	%rd50, 0;

BB78_4:
	.pragma "nounroll";
	mov.u64 	%rd18, __cudart_i2opi_f;
	add.s64 	%rd19, %rd18, %rd50;
	ld.const.u32 	%r112, [%rd19];
	mul.hi.u32 	%r114, %r112, %r4;
	mad.lo.s32 	%r115, %r112, %r4, %r348;
	setp.lt.u32 	%p3, %r115, %r348;
	selp.u32 	%r116, 1, 0, %p3;
	add.s32 	%r348, %r116, %r114;
	add.s64 	%rd20, %rd16, %rd50;
	st.local.u32 	[%rd20], %r115;
	add.s64 	%rd50, %rd50, 4;
	setp.ne.s64 	%p4, %rd50, 24;
	@%p4 bra 	BB78_4;

	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd48, %rd49;
	add.s64 	%rd47, %rd48, 24;
	shr.u32 	%r344, %r2, 23;
	and.b32  	%r351, %r2, -2147483648;
	st.local.u32 	[%rd47], %r348;
	mov.u32 	%r119, 6;
	sub.s32 	%r120, %r119, %r5;
	mul.wide.s32 	%rd21, %r120, 4;
	add.s64 	%rd5, %rd48, %rd21;
	ld.local.u32 	%r349, [%rd5];
	ld.local.u32 	%r350, [%rd5+-4];
	and.b32  	%r11, %r344, 31;
	setp.eq.s32 	%p5, %r11, 0;
	@%p5 bra 	BB78_7;

	mov.u32 	%r123, 32;
	sub.s32 	%r124, %r123, %r11;
	shr.u32 	%r125, %r350, %r124;
	shl.b32 	%r126, %r349, %r11;
	add.s32 	%r349, %r125, %r126;
	ld.local.u32 	%r127, [%rd5+-8];
	shr.u32 	%r129, %r127, %r124;
	shl.b32 	%r130, %r350, %r11;
	add.s32 	%r350, %r129, %r130;

BB78_7:
	shr.u32 	%r131, %r350, 30;
	shl.b32 	%r132, %r349, 2;
	add.s32 	%r352, %r131, %r132;
	shl.b32 	%r17, %r350, 2;
	shr.u32 	%r133, %r352, 31;
	shr.u32 	%r134, %r349, 30;
	add.s32 	%r135, %r133, %r134;
	neg.s32 	%r136, %r135;
	setp.eq.s32 	%p6, %r351, 0;
	selp.b32 	%r354, %r135, %r136, %p6;
	setp.eq.s32 	%p7, %r133, 0;
	mov.u32 	%r353, %r17;
	@%p7 bra 	BB78_9;

	not.b32 	%r137, %r352;
	neg.s32 	%r19, %r17;
	setp.eq.s32 	%p8, %r17, 0;
	selp.u32 	%r138, 1, 0, %p8;
	add.s32 	%r352, %r138, %r137;
	xor.b32  	%r351, %r351, -2147483648;
	mov.u32 	%r353, %r19;

BB78_9:
	clz.b32 	%r139, %r352;
	setp.eq.s32 	%p9, %r139, 0;
	shl.b32 	%r140, %r352, %r139;
	mov.u32 	%r141, 32;
	sub.s32 	%r142, %r141, %r139;
	shr.u32 	%r143, %r353, %r142;
	add.s32 	%r144, %r143, %r140;
	selp.b32 	%r145, %r352, %r144, %p9;
	mul.lo.s32 	%r146, %r145, -921707870;
	mov.u32 	%r147, -921707870;
	mul.hi.u32 	%r148, %r145, %r147;
	setp.gt.s32 	%p10, %r148, 0;
	shl.b32 	%r149, %r148, 1;
	shr.u32 	%r150, %r146, 31;
	add.s32 	%r151, %r150, %r149;
	selp.b32 	%r152, %r151, %r148, %p10;
	selp.b32 	%r153, -1, 0, %p10;
	mov.u32 	%r154, 126;
	sub.s32 	%r155, %r154, %r139;
	add.s32 	%r156, %r155, %r153;
	shl.b32 	%r157, %r156, 23;
	add.s32 	%r158, %r152, 1;
	shr.u32 	%r159, %r158, 7;
	add.s32 	%r160, %r159, 1;
	shr.u32 	%r161, %r160, 1;
	add.s32 	%r162, %r161, %r157;
	or.b32  	%r163, %r162, %r351;
	mov.b32 	%f243, %r163;

BB78_10:
	mul.rn.f32 	%f8, %f243, %f243;
	and.b32  	%r26, %r354, 1;
	setp.eq.s32 	%p11, %r26, 0;
	@%p11 bra 	BB78_12;

	mov.f32 	%f97, 0fBAB6061A;
	mov.f32 	%f98, 0f37CCF5CE;
	fma.rn.f32 	%f244, %f98, %f8, %f97;
	bra.uni 	BB78_13;

BB78_12:
	mov.f32 	%f99, 0f3C08839E;
	mov.f32 	%f100, 0fB94CA1F9;
	fma.rn.f32 	%f244, %f100, %f8, %f99;

BB78_13:
	and.b32  	%r347, %r354, 1;
	setp.eq.s32 	%p63, %r347, 0;
	@%p63 bra 	BB78_15;

	mul.rn.f32 	%f241, %f243, %f243;
	mov.f32 	%f101, 0f3D2AAAA5;
	fma.rn.f32 	%f102, %f244, %f241, %f101;
	mov.f32 	%f103, 0fBF000000;
	fma.rn.f32 	%f245, %f102, %f241, %f103;
	bra.uni 	BB78_16;

BB78_15:
	mul.rn.f32 	%f242, %f243, %f243;
	mov.f32 	%f104, 0fBE2AAAA3;
	fma.rn.f32 	%f105, %f244, %f242, %f104;
	mov.f32 	%f106, 0f00000000;
	fma.rn.f32 	%f245, %f105, %f242, %f106;

BB78_16:
	and.b32  	%r345, %r354, 1;
	setp.eq.s32 	%p62, %r345, 0;
	fma.rn.f32 	%f246, %f245, %f243, %f243;
	@%p62 bra 	BB78_18;

	mul.rn.f32 	%f236, %f243, %f243;
	mov.f32 	%f107, 0f3F800000;
	fma.rn.f32 	%f246, %f245, %f236, %f107;

BB78_18:
	and.b32  	%r164, %r354, 2;
	setp.eq.s32 	%p14, %r164, 0;
	@%p14 bra 	BB78_20;

	mov.f32 	%f108, 0f00000000;
	mov.f32 	%f109, 0fBF800000;
	fma.rn.f32 	%f246, %f246, %f109, %f108;

BB78_20:
	abs.f32 	%f20, %f86;
	mul.f32 	%f110, %f20, 0f3FB8AA3B;
	cvt.rzi.f32.f32 	%f111, %f110;
	mov.f32 	%f112, 0fBF317200;
	fma.rn.f32 	%f113, %f111, %f112, %f20;
	mov.f32 	%f114, 0fB5BFBE8E;
	fma.rn.f32 	%f115, %f111, %f114, %f113;
	mul.f32 	%f116, %f115, 0f3FB8AA3B;
	ex2.approx.f32 	%f117, %f116;
	add.f32 	%f118, %f111, 0fC0000000;
	ex2.approx.f32 	%f119, %f118;
	mul.f32 	%f21, %f117, %f119;
	mov.f32 	%f120, 0f3E000000;
	div.approx.f32 	%f22, %f120, %f21;
	mov.f32 	%f121, 0f40000000;
	fma.rn.f32 	%f122, %f121, %f21, %f22;
	setp.ltu.f32 	%p15, %f20, 0f42B40000;
	selp.f32 	%f23, %f122, %f1, %p15;
	mul.f32 	%f24, %f246, %f23;
	mov.f32 	%f261, %f85;
	@%p1 bra 	BB78_22;

	mov.f32 	%f123, 0f00000000;
	mul.rn.f32 	%f261, %f85, %f123;

BB78_22:
	mov.f32 	%f229, 0f27C234C5;
	mov.f32 	%f228, 0f33A22168;
	mov.f32 	%f227, 0f3FC90FDA;
	mul.f32 	%f124, %f261, 0f3F22F983;
	cvt.rni.s32.f32 	%r361, %f124;
	cvt.rn.f32.s32 	%f125, %r361;
	neg.f32 	%f126, %f125;
	fma.rn.f32 	%f128, %f126, %f227, %f261;
	fma.rn.f32 	%f130, %f126, %f228, %f128;
	fma.rn.f32 	%f247, %f126, %f229, %f130;
	abs.f32 	%f132, %f261;
	setp.leu.f32 	%p17, %f132, 0f47CE4780;
	@%p17 bra 	BB78_30;

	mov.b32 	%r28, %f261;
	shr.u32 	%r29, %r28, 23;
	and.b32  	%r166, %r29, 255;
	add.s32 	%r167, %r166, -128;
	shl.b32 	%r168, %r28, 8;
	or.b32  	%r30, %r168, -2147483648;
	shr.u32 	%r31, %r167, 5;
	mov.u32 	%r355, 0;
	mov.u64 	%rd51, 0;

BB78_24:
	.pragma "nounroll";
	mov.u64 	%rd23, __cudart_i2opi_f;
	add.s64 	%rd24, %rd23, %rd51;
	ld.const.u32 	%r169, [%rd24];
	mul.hi.u32 	%r171, %r169, %r30;
	mad.lo.s32 	%r172, %r169, %r30, %r355;
	setp.lt.u32 	%p18, %r172, %r355;
	selp.u32 	%r173, 1, 0, %p18;
	add.s32 	%r355, %r173, %r171;
	add.s64 	%rd25, %rd16, %rd51;
	st.local.u32 	[%rd25], %r172;
	add.s64 	%rd51, %rd51, 4;
	setp.ne.s64 	%p19, %rd51, 24;
	@%p19 bra 	BB78_24;

	shr.u32 	%r346, %r28, 23;
	add.u64 	%rd46, %SP, 0;
	cvta.to.local.u64 	%rd45, %rd46;
	add.s64 	%rd44, %rd45, 24;
	and.b32  	%r358, %r28, -2147483648;
	st.local.u32 	[%rd44], %r355;
	mov.u32 	%r176, 6;
	sub.s32 	%r177, %r176, %r31;
	mul.wide.s32 	%rd26, %r177, 4;
	add.s64 	%rd8, %rd45, %rd26;
	ld.local.u32 	%r356, [%rd8];
	ld.local.u32 	%r357, [%rd8+-4];
	and.b32  	%r37, %r346, 31;
	setp.eq.s32 	%p20, %r37, 0;
	@%p20 bra 	BB78_27;

	mov.u32 	%r180, 32;
	sub.s32 	%r181, %r180, %r37;
	shr.u32 	%r182, %r357, %r181;
	shl.b32 	%r183, %r356, %r37;
	add.s32 	%r356, %r182, %r183;
	ld.local.u32 	%r184, [%rd8+-8];
	shr.u32 	%r186, %r184, %r181;
	shl.b32 	%r187, %r357, %r37;
	add.s32 	%r357, %r186, %r187;

BB78_27:
	shr.u32 	%r188, %r357, 30;
	shl.b32 	%r189, %r356, 2;
	add.s32 	%r359, %r188, %r189;
	shl.b32 	%r43, %r357, 2;
	shr.u32 	%r190, %r359, 31;
	shr.u32 	%r191, %r356, 30;
	add.s32 	%r192, %r190, %r191;
	neg.s32 	%r193, %r192;
	setp.eq.s32 	%p21, %r358, 0;
	selp.b32 	%r361, %r192, %r193, %p21;
	setp.eq.s32 	%p22, %r190, 0;
	mov.u32 	%r360, %r43;
	@%p22 bra 	BB78_29;

	not.b32 	%r194, %r359;
	neg.s32 	%r45, %r43;
	setp.eq.s32 	%p23, %r43, 0;
	selp.u32 	%r195, 1, 0, %p23;
	add.s32 	%r359, %r195, %r194;
	xor.b32  	%r358, %r358, -2147483648;
	mov.u32 	%r360, %r45;

BB78_29:
	clz.b32 	%r196, %r359;
	setp.eq.s32 	%p24, %r196, 0;
	shl.b32 	%r197, %r359, %r196;
	mov.u32 	%r198, 32;
	sub.s32 	%r199, %r198, %r196;
	shr.u32 	%r200, %r360, %r199;
	add.s32 	%r201, %r200, %r197;
	selp.b32 	%r202, %r359, %r201, %p24;
	mul.lo.s32 	%r203, %r202, -921707870;
	mov.u32 	%r204, -921707870;
	mul.hi.u32 	%r205, %r202, %r204;
	setp.gt.s32 	%p25, %r205, 0;
	shl.b32 	%r206, %r205, 1;
	shr.u32 	%r207, %r203, 31;
	add.s32 	%r208, %r207, %r206;
	selp.b32 	%r209, %r208, %r205, %p25;
	selp.b32 	%r210, -1, 0, %p25;
	mov.u32 	%r211, 126;
	sub.s32 	%r212, %r211, %r196;
	add.s32 	%r213, %r212, %r210;
	shl.b32 	%r214, %r213, 23;
	add.s32 	%r215, %r209, 1;
	shr.u32 	%r216, %r215, 7;
	add.s32 	%r217, %r216, 1;
	shr.u32 	%r218, %r217, 1;
	add.s32 	%r219, %r218, %r214;
	or.b32  	%r220, %r219, %r358;
	mov.b32 	%f247, %r220;

BB78_30:
	mul.rn.f32 	%f30, %f247, %f247;
	add.s32 	%r52, %r361, 1;
	and.b32  	%r53, %r52, 1;
	setp.eq.s32 	%p26, %r53, 0;
	@%p26 bra 	BB78_32;

	mov.f32 	%f133, 0fBAB6061A;
	mov.f32 	%f134, 0f37CCF5CE;
	fma.rn.f32 	%f248, %f134, %f30, %f133;
	bra.uni 	BB78_33;

BB78_32:
	mov.f32 	%f135, 0f3C08839E;
	mov.f32 	%f136, 0fB94CA1F9;
	fma.rn.f32 	%f248, %f136, %f30, %f135;

BB78_33:
	@%p26 bra 	BB78_35;

	mov.f32 	%f137, 0f3D2AAAA5;
	fma.rn.f32 	%f138, %f248, %f30, %f137;
	mov.f32 	%f139, 0fBF000000;
	fma.rn.f32 	%f249, %f138, %f30, %f139;
	bra.uni 	BB78_36;

BB78_35:
	mov.f32 	%f140, 0fBE2AAAA3;
	fma.rn.f32 	%f141, %f248, %f30, %f140;
	mov.f32 	%f142, 0f00000000;
	fma.rn.f32 	%f249, %f141, %f30, %f142;

BB78_36:
	fma.rn.f32 	%f250, %f249, %f247, %f247;
	@%p26 bra 	BB78_38;

	mov.f32 	%f143, 0f3F800000;
	fma.rn.f32 	%f250, %f249, %f30, %f143;

BB78_38:
	and.b32  	%r221, %r52, 2;
	setp.eq.s32 	%p29, %r221, 0;
	@%p29 bra 	BB78_40;

	mov.f32 	%f144, 0f00000000;
	mov.f32 	%f145, 0fBF800000;
	fma.rn.f32 	%f250, %f250, %f145, %f144;

BB78_40:
	ld.param.f32 	%f240, [_CHTAN_param_1];
	abs.f32 	%f239, %f240;
	setp.ltu.f32 	%p30, %f239, 0f3F800000;
	@%p30 bra 	BB78_42;

	mov.f32 	%f237, 0f40000000;
	neg.f32 	%f146, %f22;
	fma.rn.f32 	%f148, %f237, %f21, %f146;
	selp.f32 	%f149, %f148, %f1, %p15;
	mov.b32 	%r222, %f149;
	mov.b32 	%r223, %f86;
	and.b32  	%r224, %r223, -2147483648;
	or.b32  	%r225, %r224, %r222;
	mov.b32 	%f251, %r225;
	bra.uni 	BB78_43;

BB78_42:
	mul.f32 	%f150, %f86, %f86;
	mov.f32 	%f151, 0f394FFF49;
	mov.f32 	%f152, 0f363D0ADA;
	fma.rn.f32 	%f153, %f152, %f150, %f151;
	mov.f32 	%f154, 0f3C08889A;
	fma.rn.f32 	%f155, %f153, %f150, %f154;
	mov.f32 	%f156, 0f3E2AAAAB;
	fma.rn.f32 	%f157, %f155, %f150, %f156;
	mul.f32 	%f158, %f157, %f150;
	fma.rn.f32 	%f251, %f158, %f86, %f86;

BB78_43:
	mul.f32 	%f45, %f250, %f251;
	mov.f32 	%f260, %f85;
	@%p1 bra 	BB78_45;

	mov.f32 	%f159, 0f00000000;
	mul.rn.f32 	%f260, %f85, %f159;

BB78_45:
	mov.f32 	%f232, 0f27C234C5;
	mov.f32 	%f231, 0f33A22168;
	mov.f32 	%f230, 0f3FC90FDA;
	mul.f32 	%f160, %f260, 0f3F22F983;
	cvt.rni.s32.f32 	%r368, %f160;
	cvt.rn.f32.s32 	%f161, %r368;
	neg.f32 	%f162, %f161;
	fma.rn.f32 	%f164, %f162, %f230, %f260;
	fma.rn.f32 	%f166, %f162, %f231, %f164;
	fma.rn.f32 	%f252, %f162, %f232, %f166;
	abs.f32 	%f168, %f260;
	setp.leu.f32 	%p33, %f168, 0f47CE4780;
	@%p33 bra 	BB78_53;

	mov.b32 	%r55, %f260;
	shr.u32 	%r56, %r55, 23;
	and.b32  	%r227, %r56, 255;
	add.s32 	%r228, %r227, -128;
	shl.b32 	%r229, %r55, 8;
	or.b32  	%r57, %r229, -2147483648;
	shr.u32 	%r58, %r228, 5;
	mov.u32 	%r362, 0;
	mov.u64 	%rd52, 0;

BB78_47:
	.pragma "nounroll";
	mov.u64 	%rd30, __cudart_i2opi_f;
	add.s64 	%rd31, %rd30, %rd52;
	ld.const.u32 	%r230, [%rd31];
	mul.hi.u32 	%r232, %r230, %r57;
	mad.lo.s32 	%r233, %r230, %r57, %r362;
	setp.lt.u32 	%p34, %r233, %r362;
	selp.u32 	%r234, 1, 0, %p34;
	add.s32 	%r362, %r234, %r232;
	add.s64 	%rd32, %rd16, %rd52;
	st.local.u32 	[%rd32], %r233;
	add.s64 	%rd52, %rd52, 4;
	setp.ne.s64 	%p35, %rd52, 24;
	@%p35 bra 	BB78_47;

	and.b32  	%r365, %r55, -2147483648;
	st.local.u32 	[%rd16+24], %r362;
	mov.u32 	%r237, 6;
	sub.s32 	%r238, %r237, %r58;
	mul.wide.s32 	%rd35, %r238, 4;
	add.s64 	%rd11, %rd16, %rd35;
	ld.local.u32 	%r363, [%rd11];
	ld.local.u32 	%r364, [%rd11+-4];
	and.b32  	%r64, %r56, 31;
	setp.eq.s32 	%p36, %r64, 0;
	@%p36 bra 	BB78_50;

	mov.u32 	%r241, 32;
	sub.s32 	%r242, %r241, %r64;
	shr.u32 	%r243, %r364, %r242;
	shl.b32 	%r244, %r363, %r64;
	add.s32 	%r363, %r243, %r244;
	ld.local.u32 	%r245, [%rd11+-8];
	shr.u32 	%r247, %r245, %r242;
	shl.b32 	%r248, %r364, %r64;
	add.s32 	%r364, %r247, %r248;

BB78_50:
	shr.u32 	%r249, %r364, 30;
	shl.b32 	%r250, %r363, 2;
	add.s32 	%r366, %r249, %r250;
	shl.b32 	%r70, %r364, 2;
	shr.u32 	%r251, %r366, 31;
	shr.u32 	%r252, %r363, 30;
	add.s32 	%r253, %r251, %r252;
	neg.s32 	%r254, %r253;
	setp.eq.s32 	%p37, %r365, 0;
	selp.b32 	%r368, %r253, %r254, %p37;
	setp.eq.s32 	%p38, %r251, 0;
	mov.u32 	%r367, %r70;
	@%p38 bra 	BB78_52;

	not.b32 	%r255, %r366;
	neg.s32 	%r72, %r70;
	setp.eq.s32 	%p39, %r70, 0;
	selp.u32 	%r256, 1, 0, %p39;
	add.s32 	%r366, %r256, %r255;
	xor.b32  	%r365, %r365, -2147483648;
	mov.u32 	%r367, %r72;

BB78_52:
	clz.b32 	%r257, %r366;
	setp.eq.s32 	%p40, %r257, 0;
	shl.b32 	%r258, %r366, %r257;
	mov.u32 	%r259, 32;
	sub.s32 	%r260, %r259, %r257;
	shr.u32 	%r261, %r367, %r260;
	add.s32 	%r262, %r261, %r258;
	selp.b32 	%r263, %r366, %r262, %p40;
	mul.lo.s32 	%r264, %r263, -921707870;
	mov.u32 	%r265, -921707870;
	mul.hi.u32 	%r266, %r263, %r265;
	setp.gt.s32 	%p41, %r266, 0;
	shl.b32 	%r267, %r266, 1;
	shr.u32 	%r268, %r264, 31;
	add.s32 	%r269, %r268, %r267;
	selp.b32 	%r270, %r269, %r266, %p41;
	selp.b32 	%r271, -1, 0, %p41;
	mov.u32 	%r272, 126;
	sub.s32 	%r273, %r272, %r257;
	add.s32 	%r274, %r273, %r271;
	shl.b32 	%r275, %r274, 23;
	add.s32 	%r276, %r270, 1;
	shr.u32 	%r277, %r276, 7;
	add.s32 	%r278, %r277, 1;
	shr.u32 	%r279, %r278, 1;
	add.s32 	%r280, %r279, %r275;
	or.b32  	%r281, %r280, %r365;
	mov.b32 	%f252, %r281;

BB78_53:
	mul.rn.f32 	%f51, %f252, %f252;
	add.s32 	%r79, %r368, 1;
	and.b32  	%r80, %r79, 1;
	setp.eq.s32 	%p42, %r80, 0;
	@%p42 bra 	BB78_55;

	mov.f32 	%f169, 0fBAB6061A;
	mov.f32 	%f170, 0f37CCF5CE;
	fma.rn.f32 	%f253, %f170, %f51, %f169;
	bra.uni 	BB78_56;

BB78_55:
	mov.f32 	%f171, 0f3C08839E;
	mov.f32 	%f172, 0fB94CA1F9;
	fma.rn.f32 	%f253, %f172, %f51, %f171;

BB78_56:
	@%p42 bra 	BB78_58;

	mov.f32 	%f173, 0f3D2AAAA5;
	fma.rn.f32 	%f174, %f253, %f51, %f173;
	mov.f32 	%f175, 0fBF000000;
	fma.rn.f32 	%f254, %f174, %f51, %f175;
	bra.uni 	BB78_59;

BB78_58:
	mov.f32 	%f176, 0fBE2AAAA3;
	fma.rn.f32 	%f177, %f253, %f51, %f176;
	mov.f32 	%f178, 0f00000000;
	fma.rn.f32 	%f254, %f177, %f51, %f178;

BB78_59:
	fma.rn.f32 	%f255, %f254, %f252, %f252;
	@%p42 bra 	BB78_61;

	mov.f32 	%f179, 0f3F800000;
	fma.rn.f32 	%f255, %f254, %f51, %f179;

BB78_61:
	and.b32  	%r282, %r79, 2;
	setp.eq.s32 	%p45, %r282, 0;
	@%p45 bra 	BB78_63;

	mov.f32 	%f180, 0f00000000;
	mov.f32 	%f181, 0fBF800000;
	fma.rn.f32 	%f255, %f255, %f181, %f180;

BB78_63:
	mul.f32 	%f63, %f255, %f23;
	mov.f32 	%f259, %f85;
	@%p1 bra 	BB78_65;

	mov.f32 	%f182, 0f00000000;
	mul.rn.f32 	%f259, %f85, %f182;

BB78_65:
	mov.f32 	%f235, 0f27C234C5;
	mov.f32 	%f234, 0f33A22168;
	mov.f32 	%f233, 0f3FC90FDA;
	mul.f32 	%f183, %f259, 0f3F22F983;
	cvt.rni.s32.f32 	%r375, %f183;
	cvt.rn.f32.s32 	%f184, %r375;
	neg.f32 	%f185, %f184;
	fma.rn.f32 	%f187, %f185, %f233, %f259;
	fma.rn.f32 	%f189, %f185, %f234, %f187;
	fma.rn.f32 	%f263, %f185, %f235, %f189;
	abs.f32 	%f191, %f259;
	setp.leu.f32 	%p47, %f191, 0f47CE4780;
	@%p47 bra 	BB78_73;

	mov.b32 	%r82, %f259;
	shr.u32 	%r83, %r82, 23;
	and.b32  	%r284, %r83, 255;
	add.s32 	%r285, %r284, -128;
	shl.b32 	%r286, %r82, 8;
	or.b32  	%r84, %r286, -2147483648;
	shr.u32 	%r85, %r285, 5;
	mov.u32 	%r369, 0;
	mov.u64 	%rd53, 0;

BB78_67:
	.pragma "nounroll";
	mov.u64 	%rd38, __cudart_i2opi_f;
	add.s64 	%rd39, %rd38, %rd53;
	ld.const.u32 	%r287, [%rd39];
	mul.hi.u32 	%r289, %r287, %r84;
	mad.lo.s32 	%r290, %r287, %r84, %r369;
	setp.lt.u32 	%p48, %r290, %r369;
	selp.u32 	%r291, 1, 0, %p48;
	add.s32 	%r369, %r291, %r289;
	add.s64 	%rd40, %rd16, %rd53;
	st.local.u32 	[%rd40], %r290;
	add.s64 	%rd53, %rd53, 4;
	setp.ne.s64 	%p49, %rd53, 24;
	@%p49 bra 	BB78_67;

	and.b32  	%r372, %r82, -2147483648;
	st.local.u32 	[%rd16+24], %r369;
	mov.u32 	%r294, 6;
	sub.s32 	%r295, %r294, %r85;
	mul.wide.s32 	%rd43, %r295, 4;
	add.s64 	%rd15, %rd16, %rd43;
	ld.local.u32 	%r370, [%rd15];
	ld.local.u32 	%r371, [%rd15+-4];
	and.b32  	%r91, %r83, 31;
	setp.eq.s32 	%p50, %r91, 0;
	@%p50 bra 	BB78_70;

	mov.u32 	%r298, 32;
	sub.s32 	%r299, %r298, %r91;
	shr.u32 	%r300, %r371, %r299;
	shl.b32 	%r301, %r370, %r91;
	add.s32 	%r370, %r300, %r301;
	ld.local.u32 	%r302, [%rd15+-8];
	shr.u32 	%r304, %r302, %r299;
	shl.b32 	%r305, %r371, %r91;
	add.s32 	%r371, %r304, %r305;

BB78_70:
	shr.u32 	%r306, %r371, 30;
	shl.b32 	%r307, %r370, 2;
	add.s32 	%r373, %r306, %r307;
	shl.b32 	%r97, %r371, 2;
	shr.u32 	%r308, %r373, 31;
	shr.u32 	%r309, %r370, 30;
	add.s32 	%r310, %r308, %r309;
	neg.s32 	%r311, %r310;
	setp.eq.s32 	%p51, %r372, 0;
	selp.b32 	%r375, %r310, %r311, %p51;
	setp.eq.s32 	%p52, %r308, 0;
	mov.u32 	%r374, %r97;
	@%p52 bra 	BB78_72;

	not.b32 	%r312, %r373;
	neg.s32 	%r99, %r97;
	setp.eq.s32 	%p53, %r97, 0;
	selp.u32 	%r313, 1, 0, %p53;
	add.s32 	%r373, %r313, %r312;
	xor.b32  	%r372, %r372, -2147483648;
	mov.u32 	%r374, %r99;

BB78_72:
	clz.b32 	%r314, %r373;
	setp.eq.s32 	%p54, %r314, 0;
	shl.b32 	%r315, %r373, %r314;
	mov.u32 	%r316, 32;
	sub.s32 	%r317, %r316, %r314;
	shr.u32 	%r318, %r374, %r317;
	add.s32 	%r319, %r318, %r315;
	selp.b32 	%r320, %r373, %r319, %p54;
	mul.lo.s32 	%r321, %r320, -921707870;
	mov.u32 	%r322, -921707870;
	mul.hi.u32 	%r323, %r320, %r322;
	setp.gt.s32 	%p55, %r323, 0;
	shl.b32 	%r324, %r323, 1;
	shr.u32 	%r325, %r321, 31;
	add.s32 	%r326, %r325, %r324;
	selp.b32 	%r327, %r326, %r323, %p55;
	selp.b32 	%r328, -1, 0, %p55;
	mov.u32 	%r329, 126;
	sub.s32 	%r330, %r329, %r314;
	add.s32 	%r331, %r330, %r328;
	shl.b32 	%r332, %r331, 23;
	add.s32 	%r333, %r327, 1;
	shr.u32 	%r334, %r333, 7;
	add.s32 	%r335, %r334, 1;
	shr.u32 	%r336, %r335, 1;
	add.s32 	%r337, %r336, %r332;
	or.b32  	%r338, %r337, %r372;
	mov.b32 	%f263, %r338;

BB78_73:
	mul.rn.f32 	%f69, %f263, %f263;
	and.b32  	%r106, %r375, 1;
	setp.eq.s32 	%p56, %r106, 0;
	@%p56 bra 	BB78_75;

	mov.f32 	%f192, 0fBAB6061A;
	mov.f32 	%f193, 0f37CCF5CE;
	fma.rn.f32 	%f264, %f193, %f69, %f192;
	bra.uni 	BB78_76;

BB78_75:
	mov.f32 	%f194, 0f3C08839E;
	mov.f32 	%f195, 0fB94CA1F9;
	fma.rn.f32 	%f264, %f195, %f69, %f194;

BB78_76:
	@%p56 bra 	BB78_78;

	mov.f32 	%f196, 0f3D2AAAA5;
	fma.rn.f32 	%f197, %f264, %f69, %f196;
	mov.f32 	%f198, 0fBF000000;
	fma.rn.f32 	%f265, %f197, %f69, %f198;
	bra.uni 	BB78_79;

BB78_78:
	mov.f32 	%f199, 0fBE2AAAA3;
	fma.rn.f32 	%f200, %f264, %f69, %f199;
	mov.f32 	%f201, 0f00000000;
	fma.rn.f32 	%f265, %f200, %f69, %f201;

BB78_79:
	fma.rn.f32 	%f266, %f265, %f263, %f263;
	@%p56 bra 	BB78_81;

	mov.f32 	%f202, 0f3F800000;
	fma.rn.f32 	%f266, %f265, %f69, %f202;

BB78_81:
	and.b32  	%r339, %r375, 2;
	setp.eq.s32 	%p59, %r339, 0;
	@%p59 bra 	BB78_83;

	mov.f32 	%f203, 0f00000000;
	mov.f32 	%f204, 0fBF800000;
	fma.rn.f32 	%f266, %f266, %f204, %f203;

BB78_83:
	neg.f32 	%f81, %f266;
	@%p30 bra 	BB78_85;

	mov.f32 	%f238, 0f40000000;
	neg.f32 	%f205, %f22;
	fma.rn.f32 	%f207, %f238, %f21, %f205;
	selp.f32 	%f208, %f207, %f1, %p15;
	mov.b32 	%r340, %f208;
	mov.b32 	%r341, %f86;
	and.b32  	%r342, %r341, -2147483648;
	or.b32  	%r343, %r342, %r340;
	mov.b32 	%f267, %r343;
	bra.uni 	BB78_86;

BB78_85:
	mul.f32 	%f209, %f86, %f86;
	mov.f32 	%f210, 0f394FFF49;
	mov.f32 	%f211, 0f363D0ADA;
	fma.rn.f32 	%f212, %f211, %f209, %f210;
	mov.f32 	%f213, 0f3C08889A;
	fma.rn.f32 	%f214, %f212, %f209, %f213;
	mov.f32 	%f215, 0f3E2AAAAB;
	fma.rn.f32 	%f216, %f214, %f209, %f215;
	mul.f32 	%f217, %f216, %f209;
	fma.rn.f32 	%f267, %f217, %f86, %f86;

BB78_86:
	mul.f32 	%f218, %f81, %f267;
	mul.f32 	%f219, %f218, %f218;
	fma.rn.f32 	%f220, %f63, %f63, %f219;
	mul.f32 	%f221, %f45, %f218;
	fma.rn.f32 	%f222, %f24, %f63, %f221;
	mul.f32 	%f223, %f45, %f63;
	fma.rn.f32 	%f224, %f24, %f218, %f223;
	div.rn.f32 	%f225, %f222, %f220;
	div.rn.f32 	%f226, %f224, %f220;
	st.param.f32	[func_retval0+0], %f225;
	st.param.f32	[func_retval0+4], %f226;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) casin(
	.param .b64 casin_param_0,
	.param .b64 casin_param_1
)
{
	.reg .pred 	%p<22>;
	.reg .s32 	%r<65>;
	.reg .f32 	%f<9>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<277>;


	ld.param.f64 	%fd37, [casin_param_0];
	ld.param.f64 	%fd38, [casin_param_1];
	add.f64 	%fd39, %fd37, 0d3FF0000000000000;
	mul.f64 	%fd40, %fd38, %fd38;
	fma.rn.f64 	%fd41, %fd39, %fd39, %fd40;
	sqrt.rn.f64 	%fd42, %fd41;
	mul.f64 	%fd43, %fd42, 0d3FE0000000000000;
	add.f64 	%fd44, %fd37, 0dBFF0000000000000;
	fma.rn.f64 	%fd45, %fd44, %fd44, %fd40;
	sqrt.rn.f64 	%fd46, %fd45;
	mul.f64 	%fd47, %fd46, 0d3FE0000000000000;
	fma.rn.f64 	%fd1, %fd42, 0d3FE0000000000000, %fd47;
	sub.f64 	%fd48, %fd43, %fd47;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd48;
	}
	abs.f64 	%fd2, %fd48;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd2;
	}
	setp.ltu.f64 	%p1, %fd38, 0d0000000000000000;
	@%p1 bra 	BB79_17;

	setp.lt.s32 	%p2, %r2, 1071801958;
	@%p2 bra 	BB79_4;

	mov.f64 	%fd49, 0d3FE0000000000000;
	mov.f64 	%fd50, 0dBFE0000000000000;
	fma.rn.f64 	%fd51, %fd50, %fd2, %fd49;
	sqrt.rn.f64 	%fd52, %fd51;
	mov.f64 	%fd53, 0dBFB3823B180754AF;
	mov.f64 	%fd54, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd55, %fd54, %fd51, %fd53;
	mov.f64 	%fd56, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd57, %fd55, %fd51, %fd56;
	mov.f64 	%fd58, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd59, %fd57, %fd51, %fd58;
	mov.f64 	%fd60, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd61, %fd59, %fd51, %fd60;
	mov.f64 	%fd62, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd63, %fd61, %fd51, %fd62;
	mov.f64 	%fd64, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd65, %fd63, %fd51, %fd64;
	mov.f64 	%fd66, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd67, %fd65, %fd51, %fd66;
	mov.f64 	%fd68, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd69, %fd67, %fd51, %fd68;
	mov.f64 	%fd70, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd71, %fd69, %fd51, %fd70;
	mov.f64 	%fd72, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd73, %fd71, %fd51, %fd72;
	mov.f64 	%fd74, 0d3FB333333320F91B;
	fma.rn.f64 	%fd75, %fd73, %fd51, %fd74;
	mov.f64 	%fd76, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd77, %fd75, %fd51, %fd76;
	mul.f64 	%fd78, %fd77, %fd51;
	mul.f64 	%fd79, %fd52, 0dC000000000000000;
	mov.f64 	%fd80, 0d3C91A62633145C07;
	fma.rn.f64 	%fd81, %fd79, %fd78, %fd80;
	fma.rn.f64 	%fd82, %fd52, 0dC000000000000000, 0d3FE921FB54442D18;
	add.f64 	%fd83, %fd82, %fd81;
	add.f64 	%fd269, %fd83, 0d3FE921FB54442D18;
	setp.gt.s32 	%p3, %r1, 1072693247;
	@%p3 bra 	BB79_5;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd269;
	}
	and.b32  	%r24, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd269;
	}
	or.b32  	%r26, %r25, %r24;
	mov.b64 	%fd269, {%r23, %r26};
	bra.uni 	BB79_5;

BB79_4:
	mul.f64 	%fd84, %fd2, %fd2;
	mov.f64 	%fd85, 0dBFB3823B180754AF;
	mov.f64 	%fd86, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd87, %fd86, %fd84, %fd85;
	mov.f64 	%fd88, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd89, %fd87, %fd84, %fd88;
	mov.f64 	%fd90, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd91, %fd89, %fd84, %fd90;
	mov.f64 	%fd92, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd93, %fd91, %fd84, %fd92;
	mov.f64 	%fd94, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd95, %fd93, %fd84, %fd94;
	mov.f64 	%fd96, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd97, %fd95, %fd84, %fd96;
	mov.f64 	%fd98, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd99, %fd97, %fd84, %fd98;
	mov.f64 	%fd100, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd101, %fd99, %fd84, %fd100;
	mov.f64 	%fd102, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd103, %fd101, %fd84, %fd102;
	mov.f64 	%fd104, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd105, %fd103, %fd84, %fd104;
	mov.f64 	%fd106, 0d3FB333333320F91B;
	fma.rn.f64 	%fd107, %fd105, %fd84, %fd106;
	mov.f64 	%fd108, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd109, %fd107, %fd84, %fd108;
	mul.f64 	%fd110, %fd109, %fd84;
	fma.rn.f64 	%fd111, %fd110, %fd2, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r27, %temp}, %fd111;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd111;
	}
	and.b32  	%r29, %r1, -2147483648;
	or.b32  	%r30, %r28, %r29;
	mov.b64 	%fd269, {%r27, %r30};

BB79_5:
	fma.rn.f64 	%fd112, %fd1, %fd1, 0dBFF0000000000000;
	sqrt.rn.f64 	%fd113, %fd112;
	add.f64 	%fd7, %fd1, %fd113;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %fd7;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r58, %temp}, %fd7;
	}
	setp.gt.f64 	%p4, %fd7, 0d0000000000000000;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd8, %rd1;
	setp.lt.f64 	%p5, %fd7, %fd8;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB79_11;

	abs.f64 	%fd114, %fd7;
	setp.gtu.f64 	%p7, %fd114, %fd8;
	@%p7 bra 	BB79_10;

	setp.eq.f64 	%p8, %fd7, 0d0000000000000000;
	@%p8 bra 	BB79_9;

	setp.eq.f64 	%p9, %fd7, %fd8;
	mov.u64 	%rd2, -2251799813685248;
	mov.b64 	%fd115, %rd2;
	selp.f64 	%fd271, %fd7, %fd115, %p9;
	bra.uni 	BB79_16;

BB79_9:
	neg.f64 	%fd271, %fd8;
	bra.uni 	BB79_16;

BB79_10:
	add.f64 	%fd271, %fd7, %fd7;
	bra.uni 	BB79_16;

BB79_11:
	setp.gt.u32 	%p10, %r57, 1048575;
	mov.u32 	%r59, -1023;
	@%p10 bra 	BB79_13;

	mul.f64 	%fd116, %fd7, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %fd116;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r58, %temp}, %fd116;
	}
	mov.u32 	%r59, -1077;

BB79_13:
	shr.s32 	%r33, %r57, 20;
	add.s32 	%r60, %r59, %r33;
	and.b32  	%r34, %r57, -2146435073;
	or.b32  	%r35, %r34, 1072693248;
	mov.b64 	%fd270, {%r58, %r35};
	setp.lt.u32 	%p11, %r35, 1073127583;
	@%p11 bra 	BB79_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r36, %temp}, %fd270;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r37}, %fd270;
	}
	add.s32 	%r38, %r37, -1048576;
	mov.b64 	%fd270, {%r36, %r38};
	add.s32 	%r60, %r60, 1;

BB79_15:
	add.f64 	%fd117, %fd270, 0d3FF0000000000000;
	mov.f64 	%fd119, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd117;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd118,%f2;
	
	neg.f64 	%fd120, %fd117;
	fma.rn.f64 	%fd121, %fd120, %fd118, %fd119;
	fma.rn.f64 	%fd122, %fd121, %fd121, %fd121;
	fma.rn.f64 	%fd123, %fd122, %fd118, %fd118;
	add.f64 	%fd124, %fd270, 0dBFF0000000000000;
	mul.f64 	%fd125, %fd124, %fd123;
	fma.rn.f64 	%fd126, %fd124, %fd123, %fd125;
	mul.f64 	%fd127, %fd126, %fd126;
	mov.f64 	%fd128, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd129, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd130, %fd129, %fd127, %fd128;
	mov.f64 	%fd131, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd132, %fd130, %fd127, %fd131;
	mov.f64 	%fd133, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd134, %fd132, %fd127, %fd133;
	mov.f64 	%fd135, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd136, %fd134, %fd127, %fd135;
	mov.f64 	%fd137, 0d3F624924923BE72D;
	fma.rn.f64 	%fd138, %fd136, %fd127, %fd137;
	mov.f64 	%fd139, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd140, %fd138, %fd127, %fd139;
	mov.f64 	%fd141, 0d3FB5555555555554;
	fma.rn.f64 	%fd142, %fd140, %fd127, %fd141;
	sub.f64 	%fd143, %fd124, %fd126;
	add.f64 	%fd144, %fd143, %fd143;
	neg.f64 	%fd145, %fd126;
	fma.rn.f64 	%fd146, %fd145, %fd124, %fd144;
	mul.f64 	%fd147, %fd123, %fd146;
	mul.f64 	%fd148, %fd142, %fd127;
	fma.rn.f64 	%fd149, %fd148, %fd126, %fd147;
	cvt.rn.f64.s32 	%fd150, %r60;
	mov.f64 	%fd151, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd152, %fd150, %fd151, %fd126;
	neg.s32 	%r39, %r60;
	cvt.rn.f64.s32 	%fd153, %r39;
	fma.rn.f64 	%fd154, %fd153, %fd151, %fd152;
	sub.f64 	%fd155, %fd154, %fd126;
	sub.f64 	%fd156, %fd149, %fd155;
	mov.f64 	%fd157, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd158, %fd150, %fd157, %fd156;
	add.f64 	%fd271, %fd152, %fd158;

BB79_16:
	mov.f64 	%fd276, %fd271;
	mov.f64 	%fd275, %fd269;
	bra.uni 	BB79_33;

BB79_17:
	setp.lt.s32 	%p12, %r2, 1071801958;
	@%p12 bra 	BB79_20;

	mov.f64 	%fd159, 0d3FE0000000000000;
	mov.f64 	%fd160, 0dBFE0000000000000;
	fma.rn.f64 	%fd161, %fd160, %fd2, %fd159;
	sqrt.rn.f64 	%fd162, %fd161;
	mov.f64 	%fd163, 0dBFB3823B180754AF;
	mov.f64 	%fd164, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd165, %fd164, %fd161, %fd163;
	mov.f64 	%fd166, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd167, %fd165, %fd161, %fd166;
	mov.f64 	%fd168, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd169, %fd167, %fd161, %fd168;
	mov.f64 	%fd170, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd171, %fd169, %fd161, %fd170;
	mov.f64 	%fd172, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd173, %fd171, %fd161, %fd172;
	mov.f64 	%fd174, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd175, %fd173, %fd161, %fd174;
	mov.f64 	%fd176, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd177, %fd175, %fd161, %fd176;
	mov.f64 	%fd178, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd179, %fd177, %fd161, %fd178;
	mov.f64 	%fd180, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd181, %fd179, %fd161, %fd180;
	mov.f64 	%fd182, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd183, %fd181, %fd161, %fd182;
	mov.f64 	%fd184, 0d3FB333333320F91B;
	fma.rn.f64 	%fd185, %fd183, %fd161, %fd184;
	mov.f64 	%fd186, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd187, %fd185, %fd161, %fd186;
	mul.f64 	%fd188, %fd187, %fd161;
	mul.f64 	%fd189, %fd162, 0dC000000000000000;
	mov.f64 	%fd190, 0d3C91A62633145C07;
	fma.rn.f64 	%fd191, %fd189, %fd188, %fd190;
	fma.rn.f64 	%fd192, %fd162, 0dC000000000000000, 0d3FE921FB54442D18;
	add.f64 	%fd193, %fd192, %fd191;
	add.f64 	%fd272, %fd193, 0d3FE921FB54442D18;
	setp.gt.s32 	%p13, %r1, 1072693247;
	@%p13 bra 	BB79_21;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r40, %temp}, %fd272;
	}
	and.b32  	%r41, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd272;
	}
	or.b32  	%r43, %r42, %r41;
	mov.b64 	%fd272, {%r40, %r43};
	bra.uni 	BB79_21;

BB79_20:
	mul.f64 	%fd194, %fd2, %fd2;
	mov.f64 	%fd195, 0dBFB3823B180754AF;
	mov.f64 	%fd196, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd197, %fd196, %fd194, %fd195;
	mov.f64 	%fd198, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd199, %fd197, %fd194, %fd198;
	mov.f64 	%fd200, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd201, %fd199, %fd194, %fd200;
	mov.f64 	%fd202, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd203, %fd201, %fd194, %fd202;
	mov.f64 	%fd204, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd205, %fd203, %fd194, %fd204;
	mov.f64 	%fd206, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd207, %fd205, %fd194, %fd206;
	mov.f64 	%fd208, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd209, %fd207, %fd194, %fd208;
	mov.f64 	%fd210, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd211, %fd209, %fd194, %fd210;
	mov.f64 	%fd212, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd213, %fd211, %fd194, %fd212;
	mov.f64 	%fd214, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd215, %fd213, %fd194, %fd214;
	mov.f64 	%fd216, 0d3FB333333320F91B;
	fma.rn.f64 	%fd217, %fd215, %fd194, %fd216;
	mov.f64 	%fd218, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd219, %fd217, %fd194, %fd218;
	mul.f64 	%fd220, %fd219, %fd194;
	fma.rn.f64 	%fd221, %fd220, %fd2, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd221;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd221;
	}
	and.b32  	%r46, %r1, -2147483648;
	or.b32  	%r47, %r45, %r46;
	mov.b64 	%fd272, {%r44, %r47};

BB79_21:
	fma.rn.f64 	%fd222, %fd1, %fd1, 0dBFF0000000000000;
	sqrt.rn.f64 	%fd223, %fd222;
	add.f64 	%fd23, %fd1, %fd223;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r61}, %fd23;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r62, %temp}, %fd23;
	}
	setp.gt.f64 	%p14, %fd23, 0d0000000000000000;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd24, %rd3;
	setp.lt.f64 	%p15, %fd23, %fd24;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	BB79_27;

	abs.f64 	%fd224, %fd23;
	setp.gtu.f64 	%p17, %fd224, %fd24;
	@%p17 bra 	BB79_26;

	setp.eq.f64 	%p18, %fd23, 0d0000000000000000;
	@%p18 bra 	BB79_25;

	setp.eq.f64 	%p19, %fd23, %fd24;
	mov.u64 	%rd4, -2251799813685248;
	mov.b64 	%fd225, %rd4;
	selp.f64 	%fd274, %fd23, %fd225, %p19;
	bra.uni 	BB79_32;

BB79_25:
	neg.f64 	%fd274, %fd24;
	bra.uni 	BB79_32;

BB79_26:
	add.f64 	%fd274, %fd23, %fd23;
	bra.uni 	BB79_32;

BB79_27:
	setp.gt.u32 	%p20, %r61, 1048575;
	mov.u32 	%r63, -1023;
	@%p20 bra 	BB79_29;

	mul.f64 	%fd226, %fd23, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r61}, %fd226;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r62, %temp}, %fd226;
	}
	mov.u32 	%r63, -1077;

BB79_29:
	shr.s32 	%r50, %r61, 20;
	add.s32 	%r64, %r63, %r50;
	and.b32  	%r51, %r61, -2146435073;
	or.b32  	%r52, %r51, 1072693248;
	mov.b64 	%fd273, {%r62, %r52};
	setp.lt.u32 	%p21, %r52, 1073127583;
	@%p21 bra 	BB79_31;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r53, %temp}, %fd273;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r54}, %fd273;
	}
	add.s32 	%r55, %r54, -1048576;
	mov.b64 	%fd273, {%r53, %r55};
	add.s32 	%r64, %r64, 1;

BB79_31:
	add.f64 	%fd227, %fd273, 0d3FF0000000000000;
	mov.f64 	%fd229, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f5,%fd227;
	
	
	rcp.approx.f32.ftz %f6,%f5;
	
	
	cvt.f64.f32        %fd228,%f6;
	
	neg.f64 	%fd230, %fd227;
	fma.rn.f64 	%fd231, %fd230, %fd228, %fd229;
	fma.rn.f64 	%fd232, %fd231, %fd231, %fd231;
	fma.rn.f64 	%fd233, %fd232, %fd228, %fd228;
	add.f64 	%fd234, %fd273, 0dBFF0000000000000;
	mul.f64 	%fd235, %fd234, %fd233;
	fma.rn.f64 	%fd236, %fd234, %fd233, %fd235;
	mul.f64 	%fd237, %fd236, %fd236;
	mov.f64 	%fd238, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd239, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd240, %fd239, %fd237, %fd238;
	mov.f64 	%fd241, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd242, %fd240, %fd237, %fd241;
	mov.f64 	%fd243, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd244, %fd242, %fd237, %fd243;
	mov.f64 	%fd245, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd246, %fd244, %fd237, %fd245;
	mov.f64 	%fd247, 0d3F624924923BE72D;
	fma.rn.f64 	%fd248, %fd246, %fd237, %fd247;
	mov.f64 	%fd249, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd250, %fd248, %fd237, %fd249;
	mov.f64 	%fd251, 0d3FB5555555555554;
	fma.rn.f64 	%fd252, %fd250, %fd237, %fd251;
	sub.f64 	%fd253, %fd234, %fd236;
	add.f64 	%fd254, %fd253, %fd253;
	neg.f64 	%fd255, %fd236;
	fma.rn.f64 	%fd256, %fd255, %fd234, %fd254;
	mul.f64 	%fd257, %fd233, %fd256;
	mul.f64 	%fd258, %fd252, %fd237;
	fma.rn.f64 	%fd259, %fd258, %fd236, %fd257;
	cvt.rn.f64.s32 	%fd260, %r64;
	mov.f64 	%fd261, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd262, %fd260, %fd261, %fd236;
	neg.s32 	%r56, %r64;
	cvt.rn.f64.s32 	%fd263, %r56;
	fma.rn.f64 	%fd264, %fd263, %fd261, %fd262;
	sub.f64 	%fd265, %fd264, %fd236;
	sub.f64 	%fd266, %fd259, %fd265;
	mov.f64 	%fd267, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd268, %fd260, %fd267, %fd266;
	add.f64 	%fd274, %fd262, %fd268;

BB79_32:
	neg.f64 	%fd276, %fd274;
	mov.f64 	%fd275, %fd272;

BB79_33:
	st.param.f64	[func_retval0+0], %fd275;
	st.param.f64	[func_retval0+8], %fd276;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) casinf(
	.param .b32 casinf_param_0,
	.param .b32 casinf_param_1
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<25>;
	.reg .f32 	%f<102>;


	ld.param.f32 	%f15, [casinf_param_0];
	ld.param.f32 	%f16, [casinf_param_1];
	add.f32 	%f17, %f15, 0f3F800000;
	mov.f32 	%f18, 0f3F800000;
	mul.f32 	%f19, %f16, %f16;
	fma.rn.f32 	%f20, %f17, %f17, %f19;
	sqrt.rn.f32 	%f21, %f20;
	mul.f32 	%f22, %f21, 0f3F000000;
	add.f32 	%f23, %f15, 0fBF800000;
	fma.rn.f32 	%f24, %f23, %f23, %f19;
	sqrt.rn.f32 	%f25, %f24;
	mul.f32 	%f26, %f25, 0f3F000000;
	fma.rn.f32 	%f27, %f21, 0f3F000000, %f26;
	sub.f32 	%f28, %f22, %f26;
	abs.f32 	%f29, %f28;
	sub.f32 	%f30, %f18, %f29;
	mul.f32 	%f31, %f30, 0f3F000000;
	sqrt.rn.f32 	%f32, %f31;
	setp.gt.f32 	%p2, %f29, 0f3F11EB85;
	selp.f32 	%f33, %f32, %f29, %p2;
	mul.f32 	%f34, %f33, %f33;
	mov.f32 	%f35, 0f3C94D2E9;
	mov.f32 	%f36, 0f3D53F941;
	fma.rn.f32 	%f37, %f36, %f34, %f35;
	mov.f32 	%f38, 0f3D3F841F;
	fma.rn.f32 	%f39, %f37, %f34, %f38;
	mov.f32 	%f40, 0f3D994929;
	fma.rn.f32 	%f41, %f39, %f34, %f40;
	mov.f32 	%f42, 0f3E2AAB94;
	fma.rn.f32 	%f43, %f41, %f34, %f42;
	mul.f32 	%f44, %f43, %f34;
	fma.rn.f32 	%f45, %f44, %f33, %f33;
	mov.f32 	%f46, 0f3FC90FDB;
	mov.f32 	%f47, 0fC0000000;
	fma.rn.f32 	%f48, %f47, %f45, %f46;
	selp.f32 	%f49, %f48, %f45, %p2;
	mov.u32 	%r2, 2139095040;
	mov.b32 	%f50, %r2;
	setp.gtu.f32 	%p3, %f49, %f50;
	mov.b32 	%r3, %f49;
	mov.b32 	%r4, %f28;
	and.b32  	%r5, %r4, -2147483648;
	or.b32  	%r6, %r5, %r3;
	mov.b32 	%f51, %r6;
	selp.f32 	%f1, %f49, %f51, %p3;
	fma.rn.f32 	%f52, %f27, %f27, 0fBF800000;
	sqrt.rn.f32 	%f53, %f52;
	add.f32 	%f2, %f27, %f53;
	mov.b32 	%r1, %f2;
	setp.gt.f32 	%p4, %f2, 0f00000000;
	setp.lt.f32 	%p5, %f2, %f50;
	and.pred  	%p1, %p4, %p5;
	setp.ltu.f32 	%p6, %f16, 0f00000000;
	@%p6 bra 	BB80_5;

	@%p1 bra 	BB80_3;

	lg2.approx.f32 	%f54, %f2;
	mul.f32 	%f98, %f54, 0f3F317218;
	bra.uni 	BB80_4;

BB80_3:
	setp.lt.u32 	%p7, %r1, 8388608;
	mul.f32 	%f55, %f2, 0f4B800000;
	mov.b32 	%r7, %f55;
	selp.b32 	%r8, %r7, %r1, %p7;
	selp.b32 	%r9, -151, -127, %p7;
	and.b32  	%r10, %r8, -2139095041;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	%f56, %r11;
	shr.u32 	%r12, %r8, 23;
	setp.gt.f32 	%p8, %f56, 0f3FB504F3;
	mul.f32 	%f57, %f56, 0f3F000000;
	selp.f32 	%f58, %f57, %f56, %p8;
	selp.u32 	%r13, 1, 0, %p8;
	add.s32 	%r14, %r12, %r9;
	add.s32 	%r15, %r14, %r13;
	add.f32 	%f59, %f58, 0fBF800000;
	add.f32 	%f60, %f58, 0f3F800000;
	div.approx.f32 	%f61, %f59, %f60;
	neg.f32 	%f62, %f59;
	mul.rn.f32 	%f63, %f62, %f61;
	add.rn.f32 	%f64, %f59, %f63;
	mul.f32 	%f65, %f64, %f64;
	mov.f32 	%f66, 0f3C4C4BE0;
	mov.f32 	%f67, 0f3B2063C3;
	fma.rn.f32 	%f68, %f67, %f65, %f66;
	mov.f32 	%f69, 0f3DAAAB50;
	fma.rn.f32 	%f70, %f68, %f65, %f69;
	mul.f32 	%f71, %f70, %f65;
	fma.rn.f32 	%f72, %f71, %f64, %f63;
	add.f32 	%f73, %f72, %f59;
	cvt.rn.f32.s32 	%f74, %r15;
	mov.f32 	%f75, 0f3F317218;
	fma.rn.f32 	%f98, %f74, %f75, %f73;

BB80_4:
	mov.f32 	%f101, %f98;
	bra.uni 	BB80_9;

BB80_5:
	@%p1 bra 	BB80_7;

	lg2.approx.f32 	%f76, %f2;
	mul.f32 	%f99, %f76, 0f3F317218;
	bra.uni 	BB80_8;

BB80_7:
	setp.lt.u32 	%p9, %r1, 8388608;
	mul.f32 	%f77, %f2, 0f4B800000;
	mov.b32 	%r16, %f77;
	selp.b32 	%r17, %r16, %r1, %p9;
	selp.b32 	%r18, -151, -127, %p9;
	and.b32  	%r19, %r17, -2139095041;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	%f78, %r20;
	shr.u32 	%r21, %r17, 23;
	setp.gt.f32 	%p10, %f78, 0f3FB504F3;
	mul.f32 	%f79, %f78, 0f3F000000;
	selp.f32 	%f80, %f79, %f78, %p10;
	selp.u32 	%r22, 1, 0, %p10;
	add.s32 	%r23, %r21, %r18;
	add.s32 	%r24, %r23, %r22;
	add.f32 	%f81, %f80, 0fBF800000;
	add.f32 	%f82, %f80, 0f3F800000;
	div.approx.f32 	%f83, %f81, %f82;
	neg.f32 	%f84, %f81;
	mul.rn.f32 	%f85, %f84, %f83;
	add.rn.f32 	%f86, %f81, %f85;
	mul.f32 	%f87, %f86, %f86;
	mov.f32 	%f88, 0f3C4C4BE0;
	mov.f32 	%f89, 0f3B2063C3;
	fma.rn.f32 	%f90, %f89, %f87, %f88;
	mov.f32 	%f91, 0f3DAAAB50;
	fma.rn.f32 	%f92, %f90, %f87, %f91;
	mul.f32 	%f93, %f92, %f87;
	fma.rn.f32 	%f94, %f93, %f86, %f85;
	add.f32 	%f95, %f94, %f81;
	cvt.rn.f32.s32 	%f96, %r24;
	mov.f32 	%f97, 0f3F317218;
	fma.rn.f32 	%f99, %f96, %f97, %f95;

BB80_8:
	neg.f32 	%f101, %f99;

BB80_9:
	mov.f32 	%f100, %f1;
	st.param.f32	[func_retval0+0], %f100;
	st.param.f32	[func_retval0+4], %f101;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) cacos(
	.param .b64 cacos_param_0,
	.param .b64 cacos_param_1
)
{
	.reg .pred 	%p<24>;
	.reg .s32 	%r<49>;
	.reg .f32 	%f<9>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<293>;


	ld.param.f64 	%fd41, [cacos_param_0];
	ld.param.f64 	%fd42, [cacos_param_1];
	add.f64 	%fd43, %fd41, 0d3FF0000000000000;
	mul.f64 	%fd44, %fd42, %fd42;
	fma.rn.f64 	%fd45, %fd43, %fd43, %fd44;
	sqrt.rn.f64 	%fd46, %fd45;
	mul.f64 	%fd47, %fd46, 0d3FE0000000000000;
	add.f64 	%fd48, %fd41, 0dBFF0000000000000;
	fma.rn.f64 	%fd49, %fd48, %fd48, %fd44;
	sqrt.rn.f64 	%fd50, %fd49;
	mul.f64 	%fd51, %fd50, 0d3FE0000000000000;
	fma.rn.f64 	%fd1, %fd46, 0d3FE0000000000000, %fd51;
	sub.f64 	%fd52, %fd47, %fd51;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd52;
	}
	abs.f64 	%fd2, %fd52;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd2;
	}
	setp.ltu.f64 	%p1, %fd42, 0d0000000000000000;
	@%p1 bra 	BB81_19;

	setp.lt.s32 	%p2, %r2, 1071801958;
	@%p2 bra 	BB81_4;

	mov.f64 	%fd53, 0d3FE0000000000000;
	mov.f64 	%fd54, 0dBFE0000000000000;
	fma.rn.f64 	%fd55, %fd54, %fd2, %fd53;
	sqrt.rn.f64 	%fd56, %fd55;
	mov.f64 	%fd57, 0dBFB3823B180754AF;
	mov.f64 	%fd58, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd59, %fd58, %fd55, %fd57;
	mov.f64 	%fd60, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd61, %fd59, %fd55, %fd60;
	mov.f64 	%fd62, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd63, %fd61, %fd55, %fd62;
	mov.f64 	%fd64, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd65, %fd63, %fd55, %fd64;
	mov.f64 	%fd66, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd67, %fd65, %fd55, %fd66;
	mov.f64 	%fd68, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd69, %fd67, %fd55, %fd68;
	mov.f64 	%fd70, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd71, %fd69, %fd55, %fd70;
	mov.f64 	%fd72, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd73, %fd71, %fd55, %fd72;
	mov.f64 	%fd74, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd75, %fd73, %fd55, %fd74;
	mov.f64 	%fd76, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd77, %fd75, %fd55, %fd76;
	mov.f64 	%fd78, 0d3FB333333320F91B;
	fma.rn.f64 	%fd79, %fd77, %fd55, %fd78;
	mov.f64 	%fd80, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd81, %fd79, %fd55, %fd80;
	mul.f64 	%fd82, %fd81, %fd55;
	fma.rn.f64 	%fd83, %fd82, %fd56, %fd56;
	add.f64 	%fd285, %fd83, %fd83;
	setp.gt.s32 	%p3, %r1, -1;
	@%p3 bra 	BB81_7;

	mov.f64 	%fd84, 0dBCA1A62633145C07;
	add.rn.f64 	%fd85, %fd285, %fd84;
	neg.f64 	%fd86, %fd85;
	mov.f64 	%fd87, 0d400921FB54442D18;
	add.rn.f64 	%fd285, %fd87, %fd86;
	bra.uni 	BB81_7;

BB81_4:
	setp.lt.s32 	%p4, %r1, 0;
	mul.f64 	%fd88, %fd2, %fd2;
	mov.f64 	%fd89, 0dBFB3823B180754AF;
	mov.f64 	%fd90, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd91, %fd90, %fd88, %fd89;
	mov.f64 	%fd92, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd93, %fd91, %fd88, %fd92;
	mov.f64 	%fd94, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd95, %fd93, %fd88, %fd94;
	mov.f64 	%fd96, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd97, %fd95, %fd88, %fd96;
	mov.f64 	%fd98, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd99, %fd97, %fd88, %fd98;
	mov.f64 	%fd100, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd101, %fd99, %fd88, %fd100;
	mov.f64 	%fd102, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd103, %fd101, %fd88, %fd102;
	mov.f64 	%fd104, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd105, %fd103, %fd88, %fd104;
	mov.f64 	%fd106, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd107, %fd105, %fd88, %fd106;
	mov.f64 	%fd108, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd109, %fd107, %fd88, %fd108;
	mov.f64 	%fd110, 0d3FB333333320F91B;
	fma.rn.f64 	%fd111, %fd109, %fd88, %fd110;
	mov.f64 	%fd112, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd113, %fd111, %fd88, %fd112;
	mul.f64 	%fd114, %fd113, %fd88;
	fma.rn.f64 	%fd5, %fd114, %fd2, %fd2;
	@%p4 bra 	BB81_6;

	mov.f64 	%fd115, 0dBC91A62633145C07;
	add.rn.f64 	%fd116, %fd5, %fd115;
	neg.f64 	%fd117, %fd116;
	mov.f64 	%fd118, 0d3FF921FB54442D18;
	add.rn.f64 	%fd285, %fd118, %fd117;
	bra.uni 	BB81_7;

BB81_6:
	mov.f64 	%fd119, 0d3C91A62633145C07;
	add.rn.f64 	%fd120, %fd5, %fd119;
	mov.f64 	%fd121, 0d3FF921FB54442D18;
	add.rn.f64 	%fd285, %fd121, %fd120;

BB81_7:
	fma.rn.f64 	%fd122, %fd1, %fd1, 0dBFF0000000000000;
	sqrt.rn.f64 	%fd123, %fd122;
	add.f64 	%fd9, %fd1, %fd123;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd9;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd9;
	}
	setp.gt.f64 	%p5, %fd9, 0d0000000000000000;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd10, %rd1;
	setp.lt.f64 	%p6, %fd9, %fd10;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB81_13;

	abs.f64 	%fd124, %fd9;
	setp.gtu.f64 	%p8, %fd124, %fd10;
	@%p8 bra 	BB81_12;

	setp.eq.f64 	%p9, %fd9, 0d0000000000000000;
	@%p9 bra 	BB81_11;

	setp.eq.f64 	%p10, %fd9, %fd10;
	mov.u64 	%rd2, -2251799813685248;
	mov.b64 	%fd125, %rd2;
	selp.f64 	%fd287, %fd9, %fd125, %p10;
	bra.uni 	BB81_18;

BB81_11:
	neg.f64 	%fd287, %fd10;
	bra.uni 	BB81_18;

BB81_12:
	add.f64 	%fd287, %fd9, %fd9;
	bra.uni 	BB81_18;

BB81_13:
	setp.gt.u32 	%p11, %r41, 1048575;
	mov.u32 	%r43, -1023;
	@%p11 bra 	BB81_15;

	mul.f64 	%fd126, %fd9, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r41}, %fd126;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd126;
	}
	mov.u32 	%r43, -1077;

BB81_15:
	shr.s32 	%r25, %r41, 20;
	add.s32 	%r44, %r43, %r25;
	and.b32  	%r26, %r41, -2146435073;
	or.b32  	%r27, %r26, 1072693248;
	mov.b64 	%fd286, {%r42, %r27};
	setp.lt.u32 	%p12, %r27, 1073127583;
	@%p12 bra 	BB81_17;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd286;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r29}, %fd286;
	}
	add.s32 	%r30, %r29, -1048576;
	mov.b64 	%fd286, {%r28, %r30};
	add.s32 	%r44, %r44, 1;

BB81_17:
	add.f64 	%fd127, %fd286, 0d3FF0000000000000;
	mov.f64 	%fd129, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd127;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd128,%f2;
	
	neg.f64 	%fd130, %fd127;
	fma.rn.f64 	%fd131, %fd130, %fd128, %fd129;
	fma.rn.f64 	%fd132, %fd131, %fd131, %fd131;
	fma.rn.f64 	%fd133, %fd132, %fd128, %fd128;
	add.f64 	%fd134, %fd286, 0dBFF0000000000000;
	mul.f64 	%fd135, %fd134, %fd133;
	fma.rn.f64 	%fd136, %fd134, %fd133, %fd135;
	mul.f64 	%fd137, %fd136, %fd136;
	mov.f64 	%fd138, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd139, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd140, %fd139, %fd137, %fd138;
	mov.f64 	%fd141, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd142, %fd140, %fd137, %fd141;
	mov.f64 	%fd143, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd144, %fd142, %fd137, %fd143;
	mov.f64 	%fd145, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd146, %fd144, %fd137, %fd145;
	mov.f64 	%fd147, 0d3F624924923BE72D;
	fma.rn.f64 	%fd148, %fd146, %fd137, %fd147;
	mov.f64 	%fd149, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd150, %fd148, %fd137, %fd149;
	mov.f64 	%fd151, 0d3FB5555555555554;
	fma.rn.f64 	%fd152, %fd150, %fd137, %fd151;
	sub.f64 	%fd153, %fd134, %fd136;
	add.f64 	%fd154, %fd153, %fd153;
	neg.f64 	%fd155, %fd136;
	fma.rn.f64 	%fd156, %fd155, %fd134, %fd154;
	mul.f64 	%fd157, %fd133, %fd156;
	mul.f64 	%fd158, %fd152, %fd137;
	fma.rn.f64 	%fd159, %fd158, %fd136, %fd157;
	cvt.rn.f64.s32 	%fd160, %r44;
	mov.f64 	%fd161, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd162, %fd160, %fd161, %fd136;
	neg.s32 	%r31, %r44;
	cvt.rn.f64.s32 	%fd163, %r31;
	fma.rn.f64 	%fd164, %fd163, %fd161, %fd162;
	sub.f64 	%fd165, %fd164, %fd136;
	sub.f64 	%fd166, %fd159, %fd165;
	mov.f64 	%fd167, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd168, %fd160, %fd167, %fd166;
	add.f64 	%fd287, %fd162, %fd168;

BB81_18:
	neg.f64 	%fd292, %fd287;
	mov.f64 	%fd291, %fd285;
	bra.uni 	BB81_37;

BB81_19:
	setp.lt.s32 	%p13, %r2, 1071801958;
	@%p13 bra 	BB81_22;

	mov.f64 	%fd169, 0d3FE0000000000000;
	mov.f64 	%fd170, 0dBFE0000000000000;
	fma.rn.f64 	%fd171, %fd170, %fd2, %fd169;
	sqrt.rn.f64 	%fd172, %fd171;
	mov.f64 	%fd173, 0dBFB3823B180754AF;
	mov.f64 	%fd174, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd175, %fd174, %fd171, %fd173;
	mov.f64 	%fd176, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd177, %fd175, %fd171, %fd176;
	mov.f64 	%fd178, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd179, %fd177, %fd171, %fd178;
	mov.f64 	%fd180, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd181, %fd179, %fd171, %fd180;
	mov.f64 	%fd182, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd183, %fd181, %fd171, %fd182;
	mov.f64 	%fd184, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd185, %fd183, %fd171, %fd184;
	mov.f64 	%fd186, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd187, %fd185, %fd171, %fd186;
	mov.f64 	%fd188, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd189, %fd187, %fd171, %fd188;
	mov.f64 	%fd190, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd191, %fd189, %fd171, %fd190;
	mov.f64 	%fd192, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd193, %fd191, %fd171, %fd192;
	mov.f64 	%fd194, 0d3FB333333320F91B;
	fma.rn.f64 	%fd195, %fd193, %fd171, %fd194;
	mov.f64 	%fd196, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd197, %fd195, %fd171, %fd196;
	mul.f64 	%fd198, %fd197, %fd171;
	fma.rn.f64 	%fd199, %fd198, %fd172, %fd172;
	add.f64 	%fd288, %fd199, %fd199;
	setp.gt.s32 	%p14, %r1, -1;
	@%p14 bra 	BB81_25;

	mov.f64 	%fd200, 0dBCA1A62633145C07;
	add.rn.f64 	%fd201, %fd288, %fd200;
	neg.f64 	%fd202, %fd201;
	mov.f64 	%fd203, 0d400921FB54442D18;
	add.rn.f64 	%fd288, %fd203, %fd202;
	bra.uni 	BB81_25;

BB81_22:
	setp.lt.s32 	%p15, %r1, 0;
	mul.f64 	%fd204, %fd2, %fd2;
	mov.f64 	%fd205, 0dBFB3823B180754AF;
	mov.f64 	%fd206, 0d3FB0066BDC1895E9;
	fma.rn.f64 	%fd207, %fd206, %fd204, %fd205;
	mov.f64 	%fd208, 0d3FB11E52CC2F79AE;
	fma.rn.f64 	%fd209, %fd207, %fd204, %fd208;
	mov.f64 	%fd210, 0dBF924EAF3526861B;
	fma.rn.f64 	%fd211, %fd209, %fd204, %fd210;
	mov.f64 	%fd212, 0d3F91DF02A31E6CB7;
	fma.rn.f64 	%fd213, %fd211, %fd204, %fd212;
	mov.f64 	%fd214, 0d3F847D18B0EEC6CC;
	fma.rn.f64 	%fd215, %fd213, %fd204, %fd214;
	mov.f64 	%fd216, 0d3F8D0AF961BA53B0;
	fma.rn.f64 	%fd217, %fd215, %fd204, %fd216;
	mov.f64 	%fd218, 0d3F91BF7734CF1C48;
	fma.rn.f64 	%fd219, %fd217, %fd204, %fd218;
	mov.f64 	%fd220, 0d3F96E91483144EF7;
	fma.rn.f64 	%fd221, %fd219, %fd204, %fd220;
	mov.f64 	%fd222, 0d3F9F1C6E0A4F9F81;
	fma.rn.f64 	%fd223, %fd221, %fd204, %fd222;
	mov.f64 	%fd224, 0d3FA6DB6DC27FA92B;
	fma.rn.f64 	%fd225, %fd223, %fd204, %fd224;
	mov.f64 	%fd226, 0d3FB333333320F91B;
	fma.rn.f64 	%fd227, %fd225, %fd204, %fd226;
	mov.f64 	%fd228, 0d3FC5555555555F4D;
	fma.rn.f64 	%fd229, %fd227, %fd204, %fd228;
	mul.f64 	%fd230, %fd229, %fd204;
	fma.rn.f64 	%fd23, %fd230, %fd2, %fd2;
	@%p15 bra 	BB81_24;

	mov.f64 	%fd231, 0dBC91A62633145C07;
	add.rn.f64 	%fd232, %fd23, %fd231;
	neg.f64 	%fd233, %fd232;
	mov.f64 	%fd234, 0d3FF921FB54442D18;
	add.rn.f64 	%fd288, %fd234, %fd233;
	bra.uni 	BB81_25;

BB81_24:
	mov.f64 	%fd235, 0d3C91A62633145C07;
	add.rn.f64 	%fd236, %fd23, %fd235;
	mov.f64 	%fd237, 0d3FF921FB54442D18;
	add.rn.f64 	%fd288, %fd237, %fd236;

BB81_25:
	fma.rn.f64 	%fd238, %fd1, %fd1, 0dBFF0000000000000;
	sqrt.rn.f64 	%fd239, %fd238;
	add.f64 	%fd27, %fd1, %fd239;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd27;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd27;
	}
	setp.gt.f64 	%p16, %fd27, 0d0000000000000000;
	mov.u64 	%rd3, 9218868437227405312;
	mov.b64 	%fd28, %rd3;
	setp.lt.f64 	%p17, %fd27, %fd28;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	BB81_31;

	abs.f64 	%fd240, %fd27;
	setp.gtu.f64 	%p19, %fd240, %fd28;
	@%p19 bra 	BB81_30;

	setp.eq.f64 	%p20, %fd27, 0d0000000000000000;
	@%p20 bra 	BB81_29;

	setp.eq.f64 	%p21, %fd27, %fd28;
	mov.u64 	%rd4, -2251799813685248;
	mov.b64 	%fd241, %rd4;
	selp.f64 	%fd290, %fd27, %fd241, %p21;
	bra.uni 	BB81_36;

BB81_29:
	neg.f64 	%fd290, %fd28;
	bra.uni 	BB81_36;

BB81_30:
	add.f64 	%fd290, %fd27, %fd27;
	bra.uni 	BB81_36;

BB81_31:
	setp.gt.u32 	%p22, %r45, 1048575;
	mov.u32 	%r47, -1023;
	@%p22 bra 	BB81_33;

	mul.f64 	%fd242, %fd27, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd242;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd242;
	}
	mov.u32 	%r47, -1077;

BB81_33:
	shr.s32 	%r34, %r45, 20;
	add.s32 	%r48, %r47, %r34;
	and.b32  	%r35, %r45, -2146435073;
	or.b32  	%r36, %r35, 1072693248;
	mov.b64 	%fd289, {%r46, %r36};
	setp.lt.u32 	%p23, %r36, 1073127583;
	@%p23 bra 	BB81_35;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r37, %temp}, %fd289;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r38}, %fd289;
	}
	add.s32 	%r39, %r38, -1048576;
	mov.b64 	%fd289, {%r37, %r39};
	add.s32 	%r48, %r48, 1;

BB81_35:
	add.f64 	%fd243, %fd289, 0d3FF0000000000000;
	mov.f64 	%fd245, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f5,%fd243;
	
	
	rcp.approx.f32.ftz %f6,%f5;
	
	
	cvt.f64.f32        %fd244,%f6;
	
	neg.f64 	%fd246, %fd243;
	fma.rn.f64 	%fd247, %fd246, %fd244, %fd245;
	fma.rn.f64 	%fd248, %fd247, %fd247, %fd247;
	fma.rn.f64 	%fd249, %fd248, %fd244, %fd244;
	add.f64 	%fd250, %fd289, 0dBFF0000000000000;
	mul.f64 	%fd251, %fd250, %fd249;
	fma.rn.f64 	%fd252, %fd250, %fd249, %fd251;
	mul.f64 	%fd253, %fd252, %fd252;
	mov.f64 	%fd254, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd255, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd256, %fd255, %fd253, %fd254;
	mov.f64 	%fd257, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd258, %fd256, %fd253, %fd257;
	mov.f64 	%fd259, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd260, %fd258, %fd253, %fd259;
	mov.f64 	%fd261, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd262, %fd260, %fd253, %fd261;
	mov.f64 	%fd263, 0d3F624924923BE72D;
	fma.rn.f64 	%fd264, %fd262, %fd253, %fd263;
	mov.f64 	%fd265, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd266, %fd264, %fd253, %fd265;
	mov.f64 	%fd267, 0d3FB5555555555554;
	fma.rn.f64 	%fd268, %fd266, %fd253, %fd267;
	sub.f64 	%fd269, %fd250, %fd252;
	add.f64 	%fd270, %fd269, %fd269;
	neg.f64 	%fd271, %fd252;
	fma.rn.f64 	%fd272, %fd271, %fd250, %fd270;
	mul.f64 	%fd273, %fd249, %fd272;
	mul.f64 	%fd274, %fd268, %fd253;
	fma.rn.f64 	%fd275, %fd274, %fd252, %fd273;
	cvt.rn.f64.s32 	%fd276, %r48;
	mov.f64 	%fd277, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd278, %fd276, %fd277, %fd252;
	neg.s32 	%r40, %r48;
	cvt.rn.f64.s32 	%fd279, %r40;
	fma.rn.f64 	%fd280, %fd279, %fd277, %fd278;
	sub.f64 	%fd281, %fd280, %fd252;
	sub.f64 	%fd282, %fd275, %fd281;
	mov.f64 	%fd283, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd284, %fd276, %fd283, %fd282;
	add.f64 	%fd290, %fd278, %fd284;

BB81_36:
	mov.f64 	%fd292, %fd290;
	mov.f64 	%fd291, %fd288;

BB81_37:
	st.param.f64	[func_retval0+0], %fd291;
	st.param.f64	[func_retval0+8], %fd292;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) cacosf(
	.param .b32 cacosf_param_0,
	.param .b32 cacosf_param_1
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<22>;
	.reg .f32 	%f<103>;


	ld.param.f32 	%f15, [cacosf_param_0];
	ld.param.f32 	%f16, [cacosf_param_1];
	add.f32 	%f17, %f15, 0f3F800000;
	mov.f32 	%f18, 0f3F800000;
	mul.f32 	%f19, %f16, %f16;
	fma.rn.f32 	%f20, %f17, %f17, %f19;
	sqrt.rn.f32 	%f21, %f20;
	mul.f32 	%f22, %f21, 0f3F000000;
	add.f32 	%f23, %f15, 0fBF800000;
	fma.rn.f32 	%f24, %f23, %f23, %f19;
	sqrt.rn.f32 	%f25, %f24;
	mul.f32 	%f26, %f25, 0f3F000000;
	fma.rn.f32 	%f27, %f21, 0f3F000000, %f26;
	sub.f32 	%f28, %f22, %f26;
	abs.f32 	%f29, %f28;
	sub.f32 	%f30, %f18, %f29;
	mul.f32 	%f31, %f30, 0f3F000000;
	sqrt.rn.f32 	%f32, %f31;
	setp.gt.f32 	%p2, %f29, 0f3F11EB85;
	selp.f32 	%f33, %f32, %f29, %p2;
	mul.f32 	%f34, %f33, %f33;
	mov.f32 	%f35, 0f3C94D2E9;
	mov.f32 	%f36, 0f3D53F941;
	fma.rn.f32 	%f37, %f36, %f34, %f35;
	mov.f32 	%f38, 0f3D3F841F;
	fma.rn.f32 	%f39, %f37, %f34, %f38;
	mov.f32 	%f40, 0f3D994929;
	fma.rn.f32 	%f41, %f39, %f34, %f40;
	mov.f32 	%f42, 0f3E2AAB94;
	fma.rn.f32 	%f43, %f41, %f34, %f42;
	mul.f32 	%f44, %f43, %f34;
	fma.rn.f32 	%f45, %f44, %f33, %f33;
	add.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3FC90FDB;
	sub.f32 	%f48, %f47, %f45;
	selp.f32 	%f49, %f46, %f48, %p2;
	mov.b32 	%r2, %f28;
	setp.lt.s32 	%p3, %r2, 0;
	mov.f32 	%f50, 0f40490FDB;
	sub.f32 	%f51, %f50, %f49;
	selp.f32 	%f1, %f51, %f49, %p3;
	fma.rn.f32 	%f52, %f27, %f27, 0fBF800000;
	sqrt.rn.f32 	%f53, %f52;
	add.f32 	%f2, %f27, %f53;
	mov.b32 	%r1, %f2;
	setp.gt.f32 	%p4, %f2, 0f00000000;
	mov.u32 	%r3, 2139095040;
	mov.b32 	%f54, %r3;
	setp.lt.f32 	%p5, %f2, %f54;
	and.pred  	%p1, %p4, %p5;
	setp.ltu.f32 	%p6, %f16, 0f00000000;
	@%p6 bra 	BB82_5;

	@%p1 bra 	BB82_3;

	lg2.approx.f32 	%f55, %f2;
	mul.f32 	%f99, %f55, 0f3F317218;
	bra.uni 	BB82_4;

BB82_3:
	setp.lt.u32 	%p7, %r1, 8388608;
	mul.f32 	%f56, %f2, 0f4B800000;
	mov.b32 	%r4, %f56;
	selp.b32 	%r5, %r4, %r1, %p7;
	selp.b32 	%r6, -151, -127, %p7;
	and.b32  	%r7, %r5, -2139095041;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	%f57, %r8;
	shr.u32 	%r9, %r5, 23;
	setp.gt.f32 	%p8, %f57, 0f3FB504F3;
	mul.f32 	%f58, %f57, 0f3F000000;
	selp.f32 	%f59, %f58, %f57, %p8;
	selp.u32 	%r10, 1, 0, %p8;
	add.s32 	%r11, %r9, %r6;
	add.s32 	%r12, %r11, %r10;
	add.f32 	%f60, %f59, 0fBF800000;
	add.f32 	%f61, %f59, 0f3F800000;
	div.approx.f32 	%f62, %f60, %f61;
	neg.f32 	%f63, %f60;
	mul.rn.f32 	%f64, %f63, %f62;
	add.rn.f32 	%f65, %f60, %f64;
	mul.f32 	%f66, %f65, %f65;
	mov.f32 	%f67, 0f3C4C4BE0;
	mov.f32 	%f68, 0f3B2063C3;
	fma.rn.f32 	%f69, %f68, %f66, %f67;
	mov.f32 	%f70, 0f3DAAAB50;
	fma.rn.f32 	%f71, %f69, %f66, %f70;
	mul.f32 	%f72, %f71, %f66;
	fma.rn.f32 	%f73, %f72, %f65, %f64;
	add.f32 	%f74, %f73, %f60;
	cvt.rn.f32.s32 	%f75, %r12;
	mov.f32 	%f76, 0f3F317218;
	fma.rn.f32 	%f99, %f75, %f76, %f74;

BB82_4:
	neg.f32 	%f102, %f99;
	bra.uni 	BB82_9;

BB82_5:
	@%p1 bra 	BB82_7;

	lg2.approx.f32 	%f77, %f2;
	mul.f32 	%f100, %f77, 0f3F317218;
	bra.uni 	BB82_8;

BB82_7:
	setp.lt.u32 	%p9, %r1, 8388608;
	mul.f32 	%f78, %f2, 0f4B800000;
	mov.b32 	%r13, %f78;
	selp.b32 	%r14, %r13, %r1, %p9;
	selp.b32 	%r15, -151, -127, %p9;
	and.b32  	%r16, %r14, -2139095041;
	or.b32  	%r17, %r16, 1065353216;
	mov.b32 	%f79, %r17;
	shr.u32 	%r18, %r14, 23;
	setp.gt.f32 	%p10, %f79, 0f3FB504F3;
	mul.f32 	%f80, %f79, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p10;
	selp.u32 	%r19, 1, 0, %p10;
	add.s32 	%r20, %r18, %r15;
	add.s32 	%r21, %r20, %r19;
	add.f32 	%f82, %f81, 0fBF800000;
	add.f32 	%f83, %f81, 0f3F800000;
	div.approx.f32 	%f84, %f82, %f83;
	neg.f32 	%f85, %f82;
	mul.rn.f32 	%f86, %f85, %f84;
	add.rn.f32 	%f87, %f82, %f86;
	mul.f32 	%f88, %f87, %f87;
	mov.f32 	%f89, 0f3C4C4BE0;
	mov.f32 	%f90, 0f3B2063C3;
	fma.rn.f32 	%f91, %f90, %f88, %f89;
	mov.f32 	%f92, 0f3DAAAB50;
	fma.rn.f32 	%f93, %f91, %f88, %f92;
	mul.f32 	%f94, %f93, %f88;
	fma.rn.f32 	%f95, %f94, %f87, %f86;
	add.f32 	%f96, %f95, %f82;
	cvt.rn.f32.s32 	%f97, %r21;
	mov.f32 	%f98, 0f3F317218;
	fma.rn.f32 	%f100, %f97, %f98, %f96;

BB82_8:
	mov.f32 	%f102, %f100;

BB82_9:
	mov.f32 	%f101, %f1;
	st.param.f32	[func_retval0+0], %f101;
	st.param.f32	[func_retval0+4], %f102;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) catan(
	.param .b64 catan_param_0,
	.param .b64 catan_param_1
)
{
	.reg .pred 	%p<20>;
	.reg .s32 	%r<31>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<3>;
	.reg .f64 	%fd<133>;


	ld.param.f64 	%fd25, [catan_param_0];
	ld.param.f64 	%fd24, [catan_param_1];
	add.f64 	%fd1, %fd25, %fd25;
	mul.f64 	%fd2, %fd25, %fd25;
	mov.f64 	%fd26, 0d3FF0000000000000;
	sub.f64 	%fd27, %fd26, %fd2;
	mul.f64 	%fd28, %fd24, %fd24;
	sub.f64 	%fd3, %fd27, %fd28;
	abs.f64 	%fd4, %fd1;
	mov.u64 	%rd1, 9218868437227405312;
	mov.b64 	%fd5, %rd1;
	setp.gtu.f64 	%p1, %fd4, %fd5;
	@%p1 bra 	BB83_9;

	abs.f64 	%fd6, %fd3;
	setp.gtu.f64 	%p2, %fd6, %fd5;
	@%p2 bra 	BB83_9;

	setp.eq.f64 	%p3, %fd6, 0d0000000000000000;
	setp.eq.f64 	%p4, %fd4, 0d0000000000000000;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB83_7;

	abs.f64 	%fd29, %fd6;
	setp.neu.f64 	%p6, %fd29, %fd5;
	@%p6 bra 	BB83_5;

	abs.f64 	%fd30, %fd4;
	setp.eq.f64 	%p7, %fd30, %fd5;
	@%p7 bra 	BB83_6;

BB83_5:
	max.f64 	%fd31, %fd4, %fd6;
	min.f64 	%fd32, %fd4, %fd6;
	div.rn.f64 	%fd33, %fd32, %fd31;
	mul.f64 	%fd34, %fd33, %fd33;
	mov.f64 	%fd35, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd36, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd37, %fd36, %fd34, %fd35;
	mov.f64 	%fd38, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd39, %fd37, %fd34, %fd38;
	mov.f64 	%fd40, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd41, %fd39, %fd34, %fd40;
	mov.f64 	%fd42, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd43, %fd41, %fd34, %fd42;
	mov.f64 	%fd44, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd45, %fd43, %fd34, %fd44;
	mov.f64 	%fd46, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd47, %fd45, %fd34, %fd46;
	mov.f64 	%fd48, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd49, %fd47, %fd34, %fd48;
	mov.f64 	%fd50, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd51, %fd49, %fd34, %fd50;
	mov.f64 	%fd52, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd53, %fd51, %fd34, %fd52;
	mov.f64 	%fd54, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd55, %fd53, %fd34, %fd54;
	mov.f64 	%fd56, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd57, %fd55, %fd34, %fd56;
	mov.f64 	%fd58, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd59, %fd57, %fd34, %fd58;
	mov.f64 	%fd60, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd61, %fd59, %fd34, %fd60;
	mov.f64 	%fd62, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd63, %fd61, %fd34, %fd62;
	mov.f64 	%fd64, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd65, %fd63, %fd34, %fd64;
	mov.f64 	%fd66, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd67, %fd65, %fd34, %fd66;
	mov.f64 	%fd68, 0d3FC99999999840D2;
	fma.rn.f64 	%fd69, %fd67, %fd34, %fd68;
	mov.f64 	%fd70, 0dBFD555555555544C;
	fma.rn.f64 	%fd71, %fd69, %fd34, %fd70;
	mul.f64 	%fd72, %fd71, %fd34;
	fma.rn.f64 	%fd73, %fd72, %fd33, %fd33;
	mov.f64 	%fd74, 0d3FF921FB54442D18;
	sub.f64 	%fd75, %fd74, %fd73;
	setp.gt.f64 	%p8, %fd4, %fd6;
	selp.f64 	%fd76, %fd75, %fd73, %p8;
	mov.f64 	%fd77, 0d400921FB54442D18;
	sub.f64 	%fd78, %fd77, %fd76;
	setp.lt.f64 	%p9, %fd3, 0d0000000000000000;
	selp.f64 	%fd129, %fd78, %fd76, %p9;
	bra.uni 	BB83_8;

BB83_6:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd3;
	}
	setp.lt.s32 	%p10, %r11, 0;
	selp.f64 	 %fd129, 0d4002D97C7F3321D2, 0d3FE921FB54442D18, %p10;
	bra.uni 	BB83_8;

BB83_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r12}, %fd3;
	}
	setp.lt.s32 	%p11, %r12, 0;
	selp.f64 	 %fd129, 0d400921FB54442D18, 0d0000000000000000, %p11;

BB83_8:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r13}, %fd1;
	}
	and.b32  	%r14, %r13, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd129;
	}
	or.b32  	%r16, %r15, %r14;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r17, %temp}, %fd129;
	}
	mov.b64 	%fd130, {%r17, %r16};
	bra.uni 	BB83_10;

BB83_9:
	add.f64 	%fd130, %fd1, %fd3;

BB83_10:
	mul.f64 	%fd14, %fd130, 0d3FE0000000000000;
	add.f64 	%fd79, %fd24, 0d3FF0000000000000;
	fma.rn.f64 	%fd80, %fd79, %fd79, %fd2;
	add.f64 	%fd81, %fd24, 0dBFF0000000000000;
	fma.rn.f64 	%fd82, %fd81, %fd81, %fd2;
	div.rn.f64 	%fd15, %fd80, %fd82;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd15;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd15;
	}
	setp.gt.f64 	%p12, %fd15, 0d0000000000000000;
	setp.lt.f64 	%p13, %fd15, %fd5;
	and.pred  	%p14, %p12, %p13;
	@%p14 bra 	BB83_16;

	abs.f64 	%fd83, %fd15;
	setp.gtu.f64 	%p15, %fd83, %fd5;
	@%p15 bra 	BB83_15;

	setp.eq.f64 	%p16, %fd15, 0d0000000000000000;
	@%p16 bra 	BB83_14;

	setp.eq.f64 	%p17, %fd15, %fd5;
	mov.u64 	%rd2, -2251799813685248;
	mov.b64 	%fd84, %rd2;
	selp.f64 	%fd132, %fd15, %fd84, %p17;
	bra.uni 	BB83_21;

BB83_14:
	neg.f64 	%fd132, %fd5;
	bra.uni 	BB83_21;

BB83_15:
	add.f64 	%fd132, %fd15, %fd15;
	bra.uni 	BB83_21;

BB83_16:
	setp.gt.u32 	%p18, %r27, 1048575;
	mov.u32 	%r29, -1023;
	@%p18 bra 	BB83_18;

	mul.f64 	%fd85, %fd15, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd85;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd85;
	}
	mov.u32 	%r29, -1077;

BB83_18:
	shr.s32 	%r20, %r27, 20;
	add.s32 	%r30, %r29, %r20;
	and.b32  	%r21, %r27, -2146435073;
	or.b32  	%r22, %r21, 1072693248;
	mov.b64 	%fd131, {%r28, %r22};
	setp.lt.u32 	%p19, %r22, 1073127583;
	@%p19 bra 	BB83_20;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd131;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd131;
	}
	add.s32 	%r25, %r24, -1048576;
	mov.b64 	%fd131, {%r23, %r25};
	add.s32 	%r30, %r30, 1;

BB83_20:
	add.f64 	%fd86, %fd131, 0d3FF0000000000000;
	
	cvt.rn.f32.f64     %f1,%fd86;
	
	
	rcp.approx.f32.ftz %f2,%f1;
	
	
	cvt.f64.f32        %fd87,%f2;
	
	neg.f64 	%fd89, %fd86;
	fma.rn.f64 	%fd90, %fd89, %fd87, %fd26;
	fma.rn.f64 	%fd91, %fd90, %fd90, %fd90;
	fma.rn.f64 	%fd92, %fd91, %fd87, %fd87;
	add.f64 	%fd93, %fd131, 0dBFF0000000000000;
	mul.f64 	%fd94, %fd93, %fd92;
	fma.rn.f64 	%fd95, %fd93, %fd92, %fd94;
	mul.f64 	%fd96, %fd95, %fd95;
	mov.f64 	%fd97, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd98, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd99, %fd98, %fd96, %fd97;
	mov.f64 	%fd100, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd101, %fd99, %fd96, %fd100;
	mov.f64 	%fd102, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd103, %fd101, %fd96, %fd102;
	mov.f64 	%fd104, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd105, %fd103, %fd96, %fd104;
	mov.f64 	%fd106, 0d3F624924923BE72D;
	fma.rn.f64 	%fd107, %fd105, %fd96, %fd106;
	mov.f64 	%fd108, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd109, %fd107, %fd96, %fd108;
	mov.f64 	%fd110, 0d3FB5555555555554;
	fma.rn.f64 	%fd111, %fd109, %fd96, %fd110;
	sub.f64 	%fd112, %fd93, %fd95;
	add.f64 	%fd113, %fd112, %fd112;
	neg.f64 	%fd114, %fd95;
	fma.rn.f64 	%fd115, %fd114, %fd93, %fd113;
	mul.f64 	%fd116, %fd92, %fd115;
	mul.f64 	%fd117, %fd111, %fd96;
	fma.rn.f64 	%fd118, %fd117, %fd95, %fd116;
	cvt.rn.f64.s32 	%fd119, %r30;
	mov.f64 	%fd120, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd121, %fd119, %fd120, %fd95;
	neg.s32 	%r26, %r30;
	cvt.rn.f64.s32 	%fd122, %r26;
	fma.rn.f64 	%fd123, %fd122, %fd120, %fd121;
	sub.f64 	%fd124, %fd123, %fd95;
	sub.f64 	%fd125, %fd118, %fd124;
	mov.f64 	%fd126, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd127, %fd119, %fd126, %fd125;
	add.f64 	%fd132, %fd121, %fd127;

BB83_21:
	mul.f64 	%fd128, %fd132, 0d3FD0000000000000;
	st.param.f64	[func_retval0+0], %fd14;
	st.param.f64	[func_retval0+8], %fd128;
	ret;
}

.visible .func  (.param .align 8 .b8 func_retval0[8]) catanf(
	.param .b32 catanf_param_0,
	.param .b32 catanf_param_1
)
{
	.reg .pred 	%p<17>;
	.reg .s32 	%r<22>;
	.reg .f32 	%f<78>;


	ld.param.f32 	%f17, [catanf_param_0];
	ld.param.f32 	%f16, [catanf_param_1];
	add.f32 	%f1, %f17, %f17;
	mul.f32 	%f2, %f17, %f17;
	mov.f32 	%f18, 0f3F800000;
	sub.f32 	%f19, %f18, %f2;
	mul.f32 	%f20, %f16, %f16;
	sub.f32 	%f3, %f19, %f20;
	abs.f32 	%f4, %f3;
	abs.f32 	%f5, %f1;
	setp.eq.f32 	%p1, %f5, 0f00000000;
	setp.eq.f32 	%p2, %f4, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	%r3, %f1;
	and.b32  	%r1, %r3, -2147483648;
	mov.u32 	%r4, 2139095040;
	mov.b32 	%f6, %r4;
	@%p3 bra 	BB84_4;

	setp.eq.f32 	%p4, %f5, %f6;
	setp.eq.f32 	%p5, %f4, %f6;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB84_3;

	min.f32 	%f21, %f5, %f4;
	max.f32 	%f22, %f5, %f4;
	div.rn.f32 	%f23, %f21, %f22;
	mul.rn.f32 	%f24, %f23, %f23;
	mov.f32 	%f25, 0fC0B59883;
	mov.f32 	%f26, 0fBF52C7EA;
	fma.rn.f32 	%f27, %f24, %f26, %f25;
	mov.f32 	%f28, 0fC0D21907;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f29, %f24;
	mul.f32 	%f31, %f30, %f23;
	add.f32 	%f32, %f24, 0f41355DC0;
	mov.f32 	%f33, 0f41E6BD60;
	fma.rn.f32 	%f34, %f32, %f24, %f33;
	mov.f32 	%f35, 0f419D92C8;
	fma.rn.f32 	%f36, %f34, %f24, %f35;
	rcp.rn.f32 	%f37, %f36;
	fma.rn.f32 	%f38, %f31, %f37, %f23;
	mov.f32 	%f39, 0f3FC90FDB;
	sub.f32 	%f40, %f39, %f38;
	setp.gt.f32 	%p7, %f5, %f4;
	selp.f32 	%f41, %f40, %f38, %p7;
	mov.f32 	%f42, 0f40490FDB;
	sub.f32 	%f43, %f42, %f41;
	setp.lt.f32 	%p8, %f3, 0f00000000;
	selp.f32 	%f44, %f43, %f41, %p8;
	mov.b32 	%r5, %f44;
	or.b32  	%r6, %r1, %r5;
	mov.b32 	%f45, %r6;
	add.f32 	%f46, %f1, %f3;
	setp.gtu.f32 	%p9, %f46, %f6;
	selp.f32 	%f76, %f46, %f45, %p9;
	bra.uni 	BB84_5;

BB84_3:
	mov.b32 	%r7, %f3;
	setp.lt.s32 	%p10, %r7, 0;
	selp.f32 	%f47, 0f4016CBE4, 0f3F490FDB, %p10;
	mov.b32 	%r8, %f47;
	or.b32  	%r9, %r1, %r8;
	mov.b32 	%f76, %r9;
	bra.uni 	BB84_5;

BB84_4:
	mov.b32 	%r10, %f3;
	setp.lt.s32 	%p11, %r10, 0;
	selp.f32 	%f48, 0f40490FDB, 0f00000000, %p11;
	mov.b32 	%r11, %f48;
	or.b32  	%r12, %r1, %r11;
	mov.b32 	%f76, %r12;

BB84_5:
	mul.f32 	%f11, %f76, 0f3F000000;
	add.f32 	%f49, %f16, 0f3F800000;
	fma.rn.f32 	%f50, %f49, %f49, %f2;
	add.f32 	%f51, %f16, 0fBF800000;
	fma.rn.f32 	%f52, %f51, %f51, %f2;
	div.rn.f32 	%f12, %f50, %f52;
	mov.b32 	%r2, %f12;
	setp.gt.f32 	%p12, %f12, 0f00000000;
	setp.lt.f32 	%p13, %f12, %f6;
	and.pred  	%p14, %p12, %p13;
	@%p14 bra 	BB84_7;

	lg2.approx.f32 	%f53, %f12;
	mul.f32 	%f77, %f53, 0f3F317218;
	bra.uni 	BB84_8;

BB84_7:
	setp.lt.u32 	%p15, %r2, 8388608;
	mul.f32 	%f54, %f12, 0f4B800000;
	mov.b32 	%r13, %f54;
	selp.b32 	%r14, %r13, %r2, %p15;
	selp.b32 	%r15, -151, -127, %p15;
	and.b32  	%r16, %r14, -2139095041;
	or.b32  	%r17, %r16, 1065353216;
	mov.b32 	%f55, %r17;
	shr.u32 	%r18, %r14, 23;
	setp.gt.f32 	%p16, %f55, 0f3FB504F3;
	mul.f32 	%f56, %f55, 0f3F000000;
	selp.f32 	%f57, %f56, %f55, %p16;
	selp.u32 	%r19, 1, 0, %p16;
	add.s32 	%r20, %r18, %r15;
	add.s32 	%r21, %r20, %r19;
	add.f32 	%f58, %f57, 0fBF800000;
	add.f32 	%f59, %f57, 0f3F800000;
	div.approx.f32 	%f60, %f58, %f59;
	neg.f32 	%f61, %f58;
	mul.rn.f32 	%f62, %f61, %f60;
	add.rn.f32 	%f63, %f58, %f62;
	mul.f32 	%f64, %f63, %f63;
	mov.f32 	%f65, 0f3C4C4BE0;
	mov.f32 	%f66, 0f3B2063C3;
	fma.rn.f32 	%f67, %f66, %f64, %f65;
	mov.f32 	%f68, 0f3DAAAB50;
	fma.rn.f32 	%f69, %f67, %f64, %f68;
	mul.f32 	%f70, %f69, %f64;
	fma.rn.f32 	%f71, %f70, %f63, %f62;
	add.f32 	%f72, %f71, %f58;
	cvt.rn.f32.s32 	%f73, %r21;
	mov.f32 	%f74, 0f3F317218;
	fma.rn.f32 	%f77, %f73, %f74, %f72;

BB84_8:
	mul.f32 	%f75, %f77, 0f3E800000;
	st.param.f32	[func_retval0+0], %f11;
	st.param.f32	[func_retval0+4], %f75;
	ret;
}

.visible .func  (.param .b64 func_retval0) _raisovfl(
	.param .b64 _raisovfl_param_0
)
{
	.reg .f64 	%fd<3>;


	ld.param.f64 	%fd1, [_raisovfl_param_0];
	mul.f64 	%fd2, %fd1, %fd1;
	st.param.f64	[func_retval0+0], %fd2;
	ret;
}

.visible .func  (.param .b64 func_retval0) _raisunfl(
	.param .b64 _raisunfl_param_0,
	.param .b64 _raisunfl_param_1
)
{
	.reg .f64 	%fd<4>;


	ld.param.f64 	%fd1, [_raisunfl_param_0];
	ld.param.f64 	%fd2, [_raisunfl_param_1];
	div.rn.f64 	%fd3, %fd1, %fd2;
	st.param.f64	[func_retval0+0], %fd3;
	ret;
}

.visible .func  (.param .b64 func_retval0) _IEEE_BINARY_SCALE_I8(
	.param .b64 _IEEE_BINARY_SCALE_I8_param_0,
	.param .b64 _IEEE_BINARY_SCALE_I8_param_1
)
{
	.reg .pred 	%p<13>;
	.reg .s32 	%r<14>;
	.reg .s64 	%rd<34>;
	.reg .f64 	%fd<29>;


	ld.param.f64 	%fd28, [_IEEE_BINARY_SCALE_I8_param_0];
	ld.param.u64 	%rd8, [_IEEE_BINARY_SCALE_I8_param_1];
	abs.f64 	%fd17, %fd28;
	mov.u64 	%rd9, 9218868437227405312;
	mov.b64 	%fd18, %rd9;
	setp.gtu.f64 	%p1, %fd17, %fd18;
	@%p1 bra 	BB87_19;

	mov.b64 	 %rd1, %fd28;
	and.b64  	%rd2, %rd1, -9223372036854775808;
	and.b64  	%rd3, %rd1, 9218868437227405312;
	mov.b64 	 %fd26, %rd3;
	and.b64  	%rd4, %rd1, 4503599627370495;
	and.b64  	%rd10, %rd1, 9223372036854775807;
	setp.eq.s64 	%p2, %rd10, 9218868437227405312;
	setp.eq.f64 	%p3, %fd28, 0d0000000000000000;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB87_19;

	setp.eq.s64 	%p5, %rd3, 0;
	@%p5 bra 	BB87_8;

	shr.u64 	%rd11, %rd3, 52;
	add.s64 	%rd5, %rd11, %rd8;
	setp.gt.s64 	%p6, %rd5, 2046;
	@%p6 bra 	BB87_7;

	setp.lt.s64 	%p7, %rd5, 1;
	@%p7 bra 	BB87_6;

	shl.b64 	%rd12, %rd5, 52;
	and.b64  	%rd13, %rd1, -9218868437227405313;
	or.b64  	%rd14, %rd13, %rd12;
	mov.b64 	 %fd28, %rd14;
	bra.uni 	BB87_19;

BB87_6:
	mov.f64 	%fd19, 0d0010000000000000;
	mov.f64 	%fd20, 0d7FEFFFFFFFFFFFFF;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd19;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd20;
	.param .b64 retval0;
	call.uni (retval0), 
	_raisunfl, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd21, [retval0+0];
	}
	
	mov.u64 	%rd15, 1;
	sub.s64 	%rd16, %rd15, %rd5;
	or.b64  	%rd17, %rd4, 4503599627370496;
	cvt.u32.u64 	%r6, %rd16;
	shr.u64 	%rd18, %rd17, %r6;
	mov.b64 	 %fd28, %rd18;
	bra.uni 	BB87_19;

BB87_7:
	mov.f64 	%fd22, 0d7FEFFFFFFFFFFFFF;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd22;
	.param .b64 retval0;
	call.uni (retval0), 
	_raisovfl, 
	(
	param0
	);
	ld.param.f64	%fd23, [retval0+0];
	}
	
	or.b64  	%rd19, %rd2, 9218868437227405312;
	mov.b64 	 %fd28, %rd19;
	bra.uni 	BB87_19;

BB87_8:
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 retval0;
	call.uni (retval0), 
	_leadz8, 
	(
	param0
	);
	ld.param.b64	%rd20, [retval0+0];
	}
	
	cvt.u32.u64 	%r1, %rd20;
	setp.gt.s64 	%p8, %rd8, 0;
	@%p8 bra 	BB87_12;

	neg.s64 	%rd21, %rd8;
	cvt.u32.u64 	%r7, %rd21;
	shr.u64 	%rd6, %rd4, %r7;
	mov.b64 	 %fd27, %rd6;
	setp.eq.s64 	%p9, %rd8, 0;
	@%p9 bra 	BB87_18;

	cvt.u32.u64 	%r8, %rd8;
	not.b32 	%r9, %r8;
	mov.u32 	%r10, 1;
	shl.b32 	%r11, %r10, %r9;
	cvt.s64.s32 	%rd22, %r11;
	and.b64  	%rd23, %rd22, %rd4;
	setp.eq.s64 	%p10, %rd23, 0;
	@%p10 bra 	BB87_18;

	add.s64 	%rd24, %rd6, 1;
	mov.b64 	 %fd27, %rd24;
	bra.uni 	BB87_18;

BB87_12:
	add.s32 	%r2, %r1, -12;
	setp.gt.s32 	%p11, %r2, 0;
	@%p11 bra 	BB87_14;

	mov.b64 	 %fd25, %rd8;
	mov.u32 	%r13, 1;
	bra.uni 	BB87_17;

BB87_14:
	cvt.s64.s32 	%rd7, %r2;
	setp.lt.s64 	%p12, %rd7, %rd8;
	@%p12 bra 	BB87_16;

	cvt.u32.u64 	%r13, %rd8;
	mov.f64 	%fd25, 0d0000000000000000;
	bra.uni 	BB87_17;

BB87_16:
	add.s32 	%r13, %r1, -11;
	sub.s64 	%rd25, %rd8, %rd7;
	mov.b64 	 %fd25, %rd25;

BB87_17:
	mov.b64 	 %rd26, %fd25;
	shl.b64 	%rd27, %rd26, 52;
	mov.b64 	 %fd26, %rd27;
	shl.b64 	%rd28, %rd4, %r13;
	mov.b64 	 %fd27, %rd28;

BB87_18:
	mov.b64 	 %rd29, %fd27;
	and.b64  	%rd30, %rd29, 4503599627370495;
	mov.b64 	 %rd31, %fd26;
	or.b64  	%rd32, %rd31, %rd2;
	or.b64  	%rd33, %rd32, %rd30;
	mov.b64 	 %fd28, %rd33;

BB87_19:
	st.param.f64	[func_retval0+0], %fd28;
	ret;
}

.visible .func  (.param .b32 func_retval0) _IEEE_BINARY_SCALE_H_I8(
	.param .b32 _IEEE_BINARY_SCALE_H_I8_param_0,
	.param .b64 _IEEE_BINARY_SCALE_H_I8_param_1
)
{
	.reg .pred 	%p<14>;
	.reg .s32 	%r<44>;
	.reg .f32 	%f<15>;
	.reg .s64 	%rd<2>;
	.reg .f64 	%fd<6>;


	ld.param.f32 	%f14, [_IEEE_BINARY_SCALE_H_I8_param_0];
	ld.param.u64 	%rd1, [_IEEE_BINARY_SCALE_H_I8_param_1];
	abs.f32 	%f10, %f14;
	mov.u32 	%r16, 2139095040;
	mov.b32 	%f11, %r16;
	setp.gtu.f32 	%p1, %f10, %f11;
	@%p1 bra 	BB88_16;

	mov.b32 	 %r1, %f14;
	and.b32  	%r2, %r1, -2147483648;
	and.b32  	%r3, %r1, 2139095040;
	and.b32  	%r4, %r1, 8388607;
	and.b32  	%r17, %r1, 2147483647;
	setp.eq.s32 	%p2, %r17, 2139095040;
	setp.eq.f32 	%p3, %f14, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB88_16;

	cvt.u32.u64 	%r5, %rd1;
	setp.eq.s32 	%p5, %r3, 0;
	@%p5 bra 	BB88_8;

	shr.u32 	%r18, %r3, 23;
	add.s32 	%r6, %r18, %r5;
	setp.gt.s32 	%p6, %r6, 254;
	@%p6 bra 	BB88_7;

	setp.lt.s32 	%p7, %r6, 1;
	@%p7 bra 	BB88_6;

	shl.b32 	%r19, %r6, 23;
	and.b32  	%r20, %r1, -2139095041;
	or.b32  	%r21, %r20, %r19;
	mov.b32 	 %f14, %r21;
	bra.uni 	BB88_16;

BB88_6:
	mov.f64 	%fd1, 0d3810000000000000;
	mov.f64 	%fd2, 0d47EFFFFFE0000000;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd1;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	_raisunfl, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd3, [retval0+0];
	}
	
	mov.u32 	%r22, 1;
	sub.s32 	%r23, %r22, %r6;
	or.b32  	%r24, %r4, 8388608;
	shr.u32 	%r25, %r24, %r23;
	mov.b32 	 %f14, %r25;
	bra.uni 	BB88_16;

BB88_7:
	mov.f64 	%fd4, 0d47EFFFFFE0000000;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64	[param0+0], %fd4;
	.param .b64 retval0;
	call.uni (retval0), 
	_raisovfl, 
	(
	param0
	);
	ld.param.f64	%fd5, [retval0+0];
	}
	
	or.b32  	%r26, %r2, 2139095040;
	mov.b32 	 %f14, %r26;
	bra.uni 	BB88_16;

BB88_8:
	
	{
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b32 retval0;
	call.uni (retval0), 
	_leadz4, 
	(
	param0
	);
	ld.param.b32	%r7, [retval0+0];
	}
	
	setp.gt.s32 	%p8, %r5, 0;
	@%p8 bra 	BB88_10;

	neg.s32 	%r28, %r5;
	mov.u32 	%r42, 0;
	shr.u32 	%r29, %r4, %r28;
	not.b32 	%r30, %r5;
	mov.u32 	%r31, 1;
	shl.b32 	%r32, %r31, %r30;
	and.b32  	%r33, %r32, %r4;
	setp.ne.s32 	%p9, %r33, 0;
	setp.ne.s32 	%p10, %r5, 0;
	and.pred  	%p11, %p9, %p10;
	selp.u32 	%r34, 1, 0, %p11;
	add.s32 	%r43, %r34, %r29;
	bra.uni 	BB88_15;

BB88_10:
	add.s32 	%r9, %r7, -9;
	setp.gt.s32 	%p12, %r9, 0;
	@%p12 bra 	BB88_12;

	mov.b32 	 %f13, %r5;
	mov.u32 	%r41, 1;
	bra.uni 	BB88_14;

BB88_12:
	setp.le.s32 	%p13, %r5, %r9;
	mov.f32 	%f13, 0f00000000;
	mov.u32 	%r41, %r5;
	@%p13 bra 	BB88_14;

	add.s32 	%r10, %r7, -8;
	sub.s32 	%r36, %r5, %r9;
	mov.b32 	 %f13, %r36;
	mov.u32 	%r41, %r10;

BB88_14:
	mov.b32 	 %r37, %f13;
	shl.b32 	%r42, %r37, 23;
	shl.b32 	%r43, %r4, %r41;

BB88_15:
	or.b32  	%r38, %r42, %r2;
	and.b32  	%r39, %r43, 8388607;
	or.b32  	%r40, %r38, %r39;
	mov.b32 	 %f14, %r40;

BB88_16:
	st.param.f32	[func_retval0+0], %f14;
	ret;
}

.visible .func  (.param .b64 func_retval0) __cray_device_alloc_vla(
	.param .b64 __cray_device_alloc_vla_param_0
)
{
	.local .align 8 .b8 	__local_depot89[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s32 	%r<12>;
	.reg .s64 	%rd<7>;


	mov.u64 	%SPL, __local_depot89;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [__cray_device_alloc_vla_param_0];
	add.u64 	%rd4, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd4;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd2, [retval0+0];
	}
	
	setp.eq.s64 	%p1, %rd2, 0;
	setp.ne.s64 	%p2, %rd3, 0;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB89_2;
	bra.uni 	BB89_1;

BB89_1:
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	st.local.v2.u32 	[%rd1], {%r1, %r2};
	st.local.u64 	[%rd1+8], %rd3;
	cvta.const.u64 	%rd6, $str;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r5, [retval0+0];
	}
	

BB89_2:
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

.visible .func __cray_device_free_vla(
	.param .b64 __cray_device_free_vla_param_0
)
{
	.reg .s64 	%rd<2>;


	ld.param.u64 	%rd1, [__cray_device_free_vla_param_0];
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	call.uni 
	free, 
	(
	param0
	);
	}
	
	ret;
}

.visible .func __cray_acc_stop(
	.param .b32 __cray_acc_stop_param_0,
	.param .b64 __cray_acc_stop_param_1,
	.param .b32 __cray_acc_stop_param_2
)
{
	.local .align 8 .b8 	__local_depot91[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .s32 	%r<11>;
	.reg .s64 	%rd<10>;


	mov.u64 	%SPL, __local_depot91;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r1, [__cray_acc_stop_param_0];
	ld.param.u64 	%rd3, [__cray_acc_stop_param_1];
	ld.param.u32 	%r2, [__cray_acc_stop_param_2];
	add.u64 	%rd4, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd4;
	setp.gt.u32 	%p1, %r2, 1;
	@%p1 bra 	BB91_5;

	setp.eq.s32 	%p2, %r2, 0;
	@%p2 bra 	BB91_3;

	st.local.u64 	[%rd1], %rd3;
	st.local.u32 	[%rd1+8], %r1;
	cvta.const.u64 	%rd6, $str2;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r5, [retval0+0];
	}
	
	bra.uni 	BB91_4;

BB91_3:
	st.local.u64 	[%rd1], %rd3;
	st.local.u32 	[%rd1+8], %r1;
	cvta.const.u64 	%rd8, $str1;
	
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r8, [retval0+0];
	}
	

BB91_4:
	ld.global.u64 	%rd9, [aksf_ptr];
	mov.u32 	%r9, 1;
	st.u32 	[%rd9], %r9;
	
	exit;
	

BB91_5:
	ret;
}

.visible .func  (.param .b32 func_retval0) _cray_amo_cas8(
	.param .b64 _cray_amo_cas8_param_0,
	.param .b32 _cray_amo_cas8_param_1,
	.param .b32 _cray_amo_cas8_param_2
)
{
	.local .align 8 .b8 	__local_depot92[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s16 	%rc<31>;
	.reg .s32 	%r<25>;
	.reg .s64 	%rd<17>;


	mov.u64 	%SPL, __local_depot92;
	ld.param.u64 	%rd6, [_cray_amo_cas8_param_0];
	ld.param.u32 	%r6, [_cray_amo_cas8_param_2];
	add.u64 	%rd7, %SPL, 0;
	add.u64 	%rd8, %SPL, 8;
	add.u64 	%rd10, %SPL, 12;
	and.b64  	%rd12, %rd6, 3;
	sub.s64 	%rd2, %rd6, %rd12;
	add.s64 	%rd3, %rd7, %rd12;
	ld.param.s8 	%r1, [_cray_amo_cas8_param_1];
	add.s64 	%rd4, %rd8, %rd12;
	add.s64 	%rd5, %rd10, %rd12;

BB92_1:
	ld.volatile.u32 	%r7, [%rd2];
	st.local.u32 	[%rd7], %r7;
	ld.local.s8 	%r24, [%rd3];
	setp.ne.s32 	%p1, %r24, %r1;
	@%p1 bra 	BB92_5;

	ld.local.v4.u8 	{%rc7, %rc8, %rc9, %rc10}, [%rd7];
	st.local.v4.u8 	[%rd8], {%rc7, %rc8, %rc9, %rc10};
	st.local.u8 	[%rd4], %r6;
	ld.local.u32 	%r14, [%rd8];
	ld.local.u32 	%r16, [%rd7];
	atom.cas.b32 	%r18, [%rd2], %r16, %r14;
	st.local.u32 	[%rd10], %r18;
	ld.local.u32 	%r20, [%rd7];
	setp.eq.s32 	%p2, %r18, %r20;
	ld.local.u8 	%rc1, [%rd5];
	@%p2 bra 	BB92_4;

	ld.local.u8 	%rc6, [%rd3];
	{
	.reg .s16 	%temp1;
	.reg .s16 	%temp2;
	cvt.s16.s8 	%temp1, %rc1;
	cvt.s16.s8 	%temp2, %rc6;
	setp.eq.s16 	%p3, %temp1, %temp2;
	}
	@%p3 bra 	BB92_1;

BB92_4:
	cvt.s32.s8 	%r24, %rc1;

BB92_5:
	st.param.b32	[func_retval0+0], %r24;
	ret;
}

.visible .func  (.param .b32 func_retval0) _cray_amo_cas16(
	.param .b64 _cray_amo_cas16_param_0,
	.param .b32 _cray_amo_cas16_param_1,
	.param .b32 _cray_amo_cas16_param_2
)
{
	.local .align 8 .b8 	__local_depot93[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<16>;
	.reg .s32 	%r<22>;
	.reg .s64 	%rd<18>;


	mov.u64 	%SPL, __local_depot93;
	ld.param.u64 	%rd6, [_cray_amo_cas16_param_0];
	ld.param.u32 	%r2, [_cray_amo_cas16_param_2];
	add.u64 	%rd7, %SPL, 0;
	add.u64 	%rd8, %SPL, 8;
	add.u64 	%rd10, %SPL, 12;
	and.b64  	%rd12, %rd6, 3;
	sub.s64 	%rd2, %rd6, %rd12;
	and.b64  	%rd13, %rd6, 2;
	add.s64 	%rd3, %rd7, %rd13;
	ld.param.s16 	%r1, [_cray_amo_cas16_param_1];
	add.s64 	%rd4, %rd8, %rd13;
	add.s64 	%rd5, %rd10, %rd13;

BB93_1:
	ld.volatile.u32 	%r3, [%rd2];
	st.local.u32 	[%rd7], %r3;
	ld.local.u16 	%rs15, [%rd3];
	cvt.s32.s16 	%r7, %rs15;
	setp.ne.s32 	%p1, %r7, %r1;
	@%p1 bra 	BB93_4;

	ld.local.v2.u16 	{%rs7, %rs8}, [%rd7];
	st.local.v2.u16 	[%rd8], {%rs7, %rs8};
	st.local.u16 	[%rd4], %r2;
	ld.local.u32 	%r11, [%rd8];
	ld.local.u32 	%r13, [%rd7];
	atom.cas.b32 	%r15, [%rd2], %r13, %r11;
	st.local.u32 	[%rd10], %r15;
	ld.local.u32 	%r17, [%rd7];
	setp.eq.s32 	%p2, %r15, %r17;
	ld.local.u16 	%rs15, [%rd5];
	@%p2 bra 	BB93_4;

	ld.local.u16 	%rs6, [%rd3];
	setp.eq.s16 	%p3, %rs15, %rs6;
	@%p3 bra 	BB93_1;

BB93_4:
	cvt.s32.s16 	%r21, %rs15;
	st.param.b32	[func_retval0+0], %r21;
	ret;
}



//
// End libm
//

